{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0","program":"/home/hekuta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_std","--edition=2018","/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-attributes\"","--cfg","feature=\"async-channel\"","--cfg","feature=\"async-global-executor\"","--cfg","feature=\"async-io\"","--cfg","feature=\"async-lock\"","--cfg","feature=\"async-process\"","--cfg","feature=\"attributes\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-lite\"","--cfg","feature=\"gloo-timers\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","--cfg","feature=\"unstable\"","--cfg","feature=\"wasm-bindgen-futures\"","-C","metadata=89be7703c3e5e90a","-C","extra-filename=-89be7703c3e5e90a","--out-dir","/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps","-L","dependency=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps","--extern","async_attributes=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libasync_attributes-f118928ec6a50c0c.so","--extern","async_channel=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libasync_channel-9fb3b92ca6c34550.rmeta","--extern","async_global_executor=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libasync_global_executor-bd738459ad7e4700.rmeta","--extern","async_io=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libasync_io-31a0dd83811b1539.rmeta","--extern","async_lock=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libasync_lock-306b6093e581e567.rmeta","--extern","async_process=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libasync_process-26f720375f5d5df4.rmeta","--extern","crossbeam_utils=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libcrossbeam_utils-74012319f71a7638.rmeta","--extern","futures_core=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libfutures_core-b6eb52a4cba90f27.rmeta","--extern","futures_io=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libfutures_io-02dc3037be249c9b.rmeta","--extern","futures_lite=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libfutures_lite-9218ccb04b04d747.rmeta","--extern","kv_log_macro=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libkv_log_macro-113978aaeea7015a.rmeta","--extern","log=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/liblog-c5cf1c1be4a9d841.rmeta","--extern","memchr=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libmemchr-5af045cbff601e05.rmeta","--extern","num_cpus=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libnum_cpus-cd2bb647ac3df3ef.rmeta","--extern","once_cell=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libonce_cell-e1e971f760f518da.rmeta","--extern","pin_project_lite=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libpin_project_lite-edb9d7a86d4278f3.rmeta","--extern","pin_utils=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libpin_utils-4ff4c9b277678fdb.rmeta","--extern","slab=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libslab-2fd485f32ad08a8b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hekuta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libasync_std-89be7703c3e5e90a.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[6792821266797831913,0]},"crate_root":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src","external_crates":[{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/all.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","num":20,"id":{"name":"async_attributes","disambiguator":[11138877305113184490,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","num":21,"id":{"name":"kv_log_macro","disambiguator":[2395170478911191763,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":22,"id":{"name":"log","disambiguator":[1607843699991878775,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":23,"id":{"name":"cfg_if","disambiguator":[3174731199663182387,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":24,"id":{"name":"value_bag","disambiguator":[4431938859587310715,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":25,"id":{"name":"ctor","disambiguator":[12408075841454440297,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cycle.rs","num":26,"id":{"name":"futures_core","disambiguator":[17638481002713972584,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","num":27,"id":{"name":"pin_utils","disambiguator":[3141296111428262101,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","num":28,"id":{"name":"pin_project_lite","disambiguator":[15527011621189862707,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","num":29,"id":{"name":"async_lock","disambiguator":[2679836994491290432,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","num":30,"id":{"name":"event_listener","disambiguator":[6879865428293834956,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/channel.rs","num":31,"id":{"name":"async_channel","disambiguator":[15445176641570663703,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/channel.rs","num":32,"id":{"name":"concurrent_queue","disambiguator":[12391769365385992417,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/channel.rs","num":33,"id":{"name":"cache_padded","disambiguator":[1697428205264362539,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/mod.rs","num":34,"id":{"name":"futures_io","disambiguator":[16273443773096154582,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":35,"id":{"name":"async_process","disambiguator":[858226340421017544,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","num":36,"id":{"name":"async_io","disambiguator":[244584736380873978,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","num":37,"id":{"name":"futures_lite","disambiguator":[8977073189158444606,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":38,"id":{"name":"parking","disambiguator":[5350693089978849440,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":39,"id":{"name":"waker_fn","disambiguator":[6801309543560160252,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":40,"id":{"name":"fastrand","disambiguator":[4805976130738073428,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/mod.rs","num":41,"id":{"name":"memchr","disambiguator":[8531325220416081113,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":42,"id":{"name":"socket2","disambiguator":[1041701750842057242,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":43,"id":{"name":"libc","disambiguator":[2000753584118294429,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/rt/mod.rs","num":44,"id":{"name":"once_cell","disambiguator":[614987346670303399,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":45,"id":{"name":"polling","disambiguator":[5860497579776882154,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","num":46,"id":{"name":"slab","disambiguator":[12920681245485863628,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":47,"id":{"name":"signal_hook","disambiguator":[13664426874625179982,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","num":48,"id":{"name":"signal_hook_registry","disambiguator":[1497248627789494784,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","num":49,"id":{"name":"crossbeam_utils","disambiguator":[3608449199648778523,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","num":50,"id":{"name":"lazy_static","disambiguator":[9708458161320227382,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","num":51,"id":{"name":"async_global_executor","disambiguator":[697363808178691557,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","num":52,"id":{"name":"async_executor","disambiguator":[12876768874423664870,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","num":53,"id":{"name":"async_task","disambiguator":[1479212322213127202,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","num":54,"id":{"name":"async_mutex","disambiguator":[10622827755951189027,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","num":55,"id":{"name":"num_cpus","disambiguator":[13898269942601448050,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","num":56,"id":{"name":"blocking","disambiguator":[12544789601629893682,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","num":57,"id":{"name":"atomic_waker","disambiguator":[6944500904051725154,0]}}],"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":0,"byte_end":11558,"line_start":1,"line_end":339,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":16},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10863,"byte_end":10867,"line_start":295,"line_end":295,"column_start":28,"column_end":32},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":17},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10869,"byte_end":10873,"line_start":295,"line_end":295,"column_start":34,"column_end":38},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12964},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890608,"byte_end":12890615,"line_start":122,"line_end":122,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":2,"index":46181},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890617,"byte_end":12890621,"line_start":122,"line_end":122,"column_start":35,"column_end":39},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":2,"index":12974},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890623,"byte_end":12890628,"line_start":122,"line_end":122,"column_start":41,"column_end":46},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":26,"index":169},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890650,"byte_end":12890655,"line_start":123,"line_end":123,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":26,"index":169},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/ready.rs","byte_start":13042858,"byte_end":13042863,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1852}},{"kind":"Use","ref_id":{"krate":0,"index":1873},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890710,"byte_end":12890719,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890780,"byte_end":12890788,"line_start":134,"line_end":134,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2197},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890811,"byte_end":12890818,"line_start":135,"line_end":135,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890842,"byte_end":12890849,"line_start":136,"line_end":136,"column_start":23,"column_end":30},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890851,"byte_end":12890862,"line_start":136,"line_end":136,"column_start":32,"column_end":43},"alias_span":null,"name":"try_current","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2217},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890883,"byte_end":12890887,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2222},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890910,"byte_end":12890916,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2223},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890910,"byte_end":12890916,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2210},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890943,"byte_end":12890953,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2045},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890974,"byte_end":12890979,"line_start":140,"line_end":140,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2059},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12891039,"byte_end":12891044,"line_start":142,"line_end":142,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2247},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12891071,"byte_end":12891082,"line_start":143,"line_end":143,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2240},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12891084,"byte_end":12891092,"line_start":143,"line_end":143,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2070},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12891595,"byte_end":12891609,"line_start":164,"line_end":164,"column_start":29,"column_end":43},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2286},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12891826,"byte_end":12891837,"line_start":172,"line_end":172,"column_start":26,"column_end":37},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":2,"index":12708},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894421,"byte_end":12894427,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":2,"index":12708},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13183116,"byte_end":13183122,"line_start":139,"line_end":139,"column_start":40,"column_end":46},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2292}},{"kind":"Use","ref_id":{"krate":0,"index":2565},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894491,"byte_end":12894498,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":2590},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894521,"byte_end":12894528,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":2606},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894549,"byte_end":12894554,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894682,"byte_end":12894689,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":2610},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894691,"byte_end":12894703,"line_start":65,"line_end":65,"column_start":28,"column_end":40},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":2634},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894816,"byte_end":12894826,"line_start":70,"line_end":70,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":1707},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907319,"byte_end":12907324,"line_start":303,"line_end":303,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3217},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907326,"byte_end":12907331,"line_start":303,"line_end":303,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1729},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907352,"byte_end":12907359,"line_start":304,"line_end":304,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3223},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907361,"byte_end":12907367,"line_start":304,"line_end":304,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1757},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907390,"byte_end":12907399,"line_start":305,"line_end":305,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":9965},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907401,"byte_end":12907409,"line_start":305,"line_end":305,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1786},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907427,"byte_end":12907431,"line_start":306,"line_end":306,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":9926},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907433,"byte_end":12907437,"line_start":306,"line_end":306,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1809},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907457,"byte_end":12907463,"line_start":307,"line_end":307,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3232},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907465,"byte_end":12907471,"line_start":307,"line_end":307,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1831},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907496,"byte_end":12907507,"line_start":308,"line_end":308,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3241},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907509,"byte_end":12907519,"line_start":308,"line_end":308,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":115}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907538,"byte_end":12907539,"line_start":309,"line_end":309,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Fuse, Stream","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10349},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12910668,"byte_end":12910673,"line_start":128,"line_end":128,"column_start":20,"column_end":25},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":3435},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907916,"byte_end":12907933,"line_start":333,"line_end":333,"column_start":34,"column_end":51},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3452},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907966,"byte_end":12907981,"line_start":334,"line_end":334,"column_start":32,"column_end":47},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3472},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908004,"byte_end":12908010,"line_start":335,"line_end":335,"column_start":22,"column_end":28},"alias_span":null,"name":"extend","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3467},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908012,"byte_end":12908018,"line_start":335,"line_end":335,"column_start":30,"column_end":36},"alias_span":null,"name":"Extend","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3489},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908046,"byte_end":12908056,"line_start":336,"line_end":336,"column_start":26,"column_end":36},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3498},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908084,"byte_end":12908095,"line_start":337,"line_end":337,"column_start":27,"column_end":38},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3528},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908120,"byte_end":12908128,"line_start":338,"line_end":338,"column_start":24,"column_end":32},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3718},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908130,"byte_end":12908138,"line_start":338,"line_end":338,"column_start":34,"column_end":42},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3536},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908166,"byte_end":12908176,"line_start":339,"line_end":339,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3572},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908200,"byte_end":12908207,"line_start":340,"line_end":340,"column_start":23,"column_end":30},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3723},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908209,"byte_end":12908216,"line_start":340,"line_end":340,"column_start":32,"column_end":39},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3596},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908240,"byte_end":12908247,"line_start":341,"line_end":341,"column_start":22,"column_end":29},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10349},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908269,"byte_end":12908274,"line_start":342,"line_end":342,"column_start":21,"column_end":26},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908301,"byte_end":12908311,"line_start":343,"line_end":343,"column_start":26,"column_end":36},"alias_span":null,"name":"successors","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":9763},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908313,"byte_end":12908323,"line_start":343,"line_end":343,"column_start":38,"column_end":48},"alias_span":null,"name":"Successors","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3650},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12908343,"byte_end":12908346,"line_start":344,"line_end":344,"column_start":18,"column_end":21},"alias_span":null,"name":"Sum","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":1,"index":3803},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295080,"byte_end":13295085,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":1,"index":10595},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295087,"byte_end":13295096,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":1,"index":10714},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295098,"byte_end":13295105,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":1,"index":4362},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295107,"byte_end":13295117,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":1,"index":3801},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295119,"byte_end":13295125,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":1,"index":10728},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295127,"byte_end":13295135,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":34,"index":49},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295162,"byte_end":13295169,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":9715},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295171,"byte_end":13295176,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":9667},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295178,"byte_end":13295183,"line_start":278,"line_end":278,"column_start":40,"column_end":45},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":9533},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295210,"byte_end":13295219,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":9492},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295246,"byte_end":13295255,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5659},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295257,"byte_end":13295271,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5375},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295292,"byte_end":13295296,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5667},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295318,"byte_end":13295324,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5478},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295346,"byte_end":13295351,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5479},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295353,"byte_end":13295358,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4309}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295379,"byte_end":13295380,"line_start":284,"line_end":284,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"_, Read","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5510},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295403,"byte_end":13295409,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5511},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295411,"byte_end":13295417,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":34,"index":47},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295438,"byte_end":13295442,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5538},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295463,"byte_end":13295467,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5539},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295469,"byte_end":13295473,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":4309}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295495,"byte_end":13295496,"line_start":288,"line_end":288,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Write, _","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":34,"index":49},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305291,"byte_end":13305298,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4417}},{"kind":"Use","ref_id":{"krate":34,"index":39},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305337,"byte_end":13305341,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":4417}},{"kind":"Use","ref_id":{"krate":34,"index":47},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305380,"byte_end":13305384,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4417}},{"kind":"Use","ref_id":{"krate":34,"index":42},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305423,"byte_end":13305428,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":4417}},{"kind":"Use","ref_id":{"krate":0,"index":5561},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305475,"byte_end":13305485,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":4417}},{"kind":"Use","ref_id":{"krate":0,"index":5590},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305527,"byte_end":13305534,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":4417}},{"kind":"Use","ref_id":{"krate":0,"index":5622},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305576,"byte_end":13305583,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":4417}},{"kind":"Use","ref_id":{"krate":0,"index":5640},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305626,"byte_end":13305634,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":4417}},{"kind":"Use","ref_id":{"krate":34,"index":47},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/seek/mod.rs","byte_start":13360697,"byte_end":13360706,"line_start":51,"line_end":51,"column_start":36,"column_end":45},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4956}},{"kind":"Use","ref_id":{"krate":0,"index":5849},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295900,"byte_end":13295907,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5846},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295909,"byte_end":13295915,"line_start":311,"line_end":311,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5780},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295979,"byte_end":13295985,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5889},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295987,"byte_end":13295993,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5823},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13296055,"byte_end":13296060,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5927},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13296062,"byte_end":13296067,"line_start":316,"line_end":316,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5882},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13296130,"byte_end":13296136,"line_start":318,"line_end":318,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5966},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13296138,"byte_end":13296144,"line_start":318,"line_end":318,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":0,"index":5740},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13296168,"byte_end":13296175,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":4309}},{"kind":"Use","ref_id":{"krate":1,"index":6601},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/io.rs","byte_start":13441039,"byte_end":13441046,"line_start":4,"line_end":4,"column_start":33,"column_end":40},"alias_span":null,"name":"AsRawFd","value":"","parent":{"krate":0,"index":6008}},{"kind":"Use","ref_id":{"krate":1,"index":6603},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/io.rs","byte_start":13441048,"byte_end":13441057,"line_start":4,"line_end":4,"column_start":42,"column_end":51},"alias_span":null,"name":"FromRawFd","value":"","parent":{"krate":0,"index":6008}},{"kind":"Use","ref_id":{"krate":1,"index":6605},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/io.rs","byte_start":13441059,"byte_end":13441068,"line_start":4,"line_end":4,"column_start":53,"column_end":62},"alias_span":null,"name":"IntoRawFd","value":"","parent":{"krate":0,"index":6008}},{"kind":"Use","ref_id":{"krate":1,"index":6600},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/io.rs","byte_start":13441070,"byte_end":13441075,"line_start":4,"line_end":4,"column_start":64,"column_end":69},"alias_span":null,"name":"RawFd","value":"","parent":{"krate":0,"index":6008}},{"kind":"Use","ref_id":{"krate":1,"index":5538},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13444133,"byte_end":13444146,"line_start":33,"line_end":33,"column_start":33,"column_end":46},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":6022}},{"kind":"Use","ref_id":{"krate":1,"index":5526},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13444148,"byte_end":13444159,"line_start":33,"line_end":33,"column_start":48,"column_end":59},"alias_span":null,"name":"DirEntryExt","value":"","parent":{"krate":0,"index":6022}},{"kind":"Use","ref_id":{"krate":1,"index":5476},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13444161,"byte_end":13444175,"line_start":33,"line_end":33,"column_start":61,"column_end":75},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":6022}},{"kind":"Use","ref_id":{"krate":0,"index":6087},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/mod.rs","byte_start":13445767,"byte_end":13445779,"line_start":3,"line_end":3,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":6038}},{"kind":"Use","ref_id":{"krate":0,"index":6198},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/mod.rs","byte_start":13445800,"byte_end":13445808,"line_start":4,"line_end":4,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":6038}},{"kind":"Use","ref_id":{"krate":0,"index":6184},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/mod.rs","byte_start":13445810,"byte_end":13445822,"line_start":4,"line_end":4,"column_start":30,"column_end":42},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":6038}},{"kind":"Use","ref_id":{"krate":0,"index":6312},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/mod.rs","byte_start":13445841,"byte_end":13445851,"line_start":5,"line_end":5,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":6038}},{"kind":"Use","ref_id":{"krate":1,"index":10961},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/mod.rs","byte_start":13445943,"byte_end":13445953,"line_start":12,"line_end":12,"column_start":33,"column_end":43},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":6038}},{"kind":"Use","ref_id":{"krate":35,"index":62},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","byte_start":13440938,"byte_end":13440942,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"alias_span":null,"name":"process","value":"","parent":{"krate":0,"index":6004}},{"kind":"Use","ref_id":{"krate":2,"index":12708},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296818,"byte_end":13296824,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":26,"index":96},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296875,"byte_end":13296881,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":0,"index":2520},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296938,"byte_end":13296947,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":0,"index":3097},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297003,"byte_end":13297012,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":34,"index":49},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297059,"byte_end":13297066,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":34,"index":39},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297118,"byte_end":13297122,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":34,"index":47},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297174,"byte_end":13297178,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":34,"index":42},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297230,"byte_end":13297235,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":0,"index":5561},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297297,"byte_end":13297307,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":0,"index":5590},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297368,"byte_end":13297375,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":0,"index":5622},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297436,"byte_end":13297443,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":0,"index":5640},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297504,"byte_end":13297512,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297578,"byte_end":13297588,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":0,"index":3435},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297658,"byte_end":13297675,"line_start":50,"line_end":50,"column_start":28,"column_end":45},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":0,"index":3452},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13297726,"byte_end":13297741,"line_start":52,"line_end":52,"column_start":28,"column_end":43},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":4312}},{"kind":"Use","ref_id":{"krate":5,"index":5966},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304552,"byte_end":13304555,"line_start":177,"line_end":177,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":5,"index":5986},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304557,"byte_end":13304561,"line_start":177,"line_end":177,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":29,"index":60},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304601,"byte_end":13304606,"line_start":180,"line_end":180,"column_start":22,"column_end":27},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":29,"index":108},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304608,"byte_end":13304618,"line_start":180,"line_end":180,"column_start":29,"column_end":39},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":29,"index":137},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304620,"byte_end":13304633,"line_start":180,"line_end":180,"column_start":41,"column_end":54},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":29,"index":210},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304673,"byte_end":13304679,"line_start":183,"line_end":183,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":29,"index":253},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304681,"byte_end":13304696,"line_start":183,"line_end":183,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":29,"index":275},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304698,"byte_end":13304723,"line_start":183,"line_end":183,"column_start":47,"column_end":72},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":29,"index":311},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304725,"byte_end":13304741,"line_start":183,"line_end":183,"column_start":74,"column_end":90},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":29,"index":412},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304786,"byte_end":13304793,"line_start":186,"line_end":186,"column_start":26,"column_end":33},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":29,"index":423},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304795,"byte_end":13304812,"line_start":186,"line_end":186,"column_start":35,"column_end":52},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":4313}},{"kind":"Use","ref_id":{"krate":0,"index":6409},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304836,"byte_end":13304843,"line_start":187,"line_end":187,"column_start":22,"column_end":29},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":4313}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/channel.rs","byte_start":13304989,"byte_end":13304990,"line_start":4,"line_end":4,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4344}},{"kind":"Use","ref_id":{"krate":0,"index":8112},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492084,"byte_end":13492094,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":6758},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492115,"byte_end":13492123,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":8129},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492139,"byte_end":13492143,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":1,"index":10530},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492164,"byte_end":13492172,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":1,"index":10499},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492192,"byte_end":13492200,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":8159},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492224,"byte_end":13492235,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":1,"index":10516},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492258,"byte_end":13492269,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":8175},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492289,"byte_end":13492296,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":6647},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492321,"byte_end":13492333,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":6666},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492349,"byte_end":13492353,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":6686},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492375,"byte_end":13492385,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":6705},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492411,"byte_end":13492425,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7010},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492446,"byte_end":13492455,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7027},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492475,"byte_end":13492483,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7077},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492499,"byte_end":13492503,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7118},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492523,"byte_end":13492531,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7148},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492552,"byte_end":13492561,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7167},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492587,"byte_end":13492601,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7186},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492623,"byte_end":13492633,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7205},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492659,"byte_end":13492673,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7224},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492696,"byte_end":13492707,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7243},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492725,"byte_end":13492731,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7263},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492758,"byte_end":13492773,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7281},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492801,"byte_end":13492817,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":0,"index":7299},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492834,"byte_end":13492839,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":6554}},{"kind":"Use","ref_id":{"krate":1,"index":10530},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file_type.rs","byte_start":13536135,"byte_end":13536143,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":6996}},{"kind":"Use","ref_id":{"krate":1,"index":10499},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13541375,"byte_end":13541383,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":7017}},{"kind":"Use","ref_id":{"krate":1,"index":10516},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/permissions.rs","byte_start":13556108,"byte_end":13556119,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":7063}},{"kind":"Use","ref_id":{"krate":1,"index":6907},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575808,"byte_end":13575820,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":1,"index":11154},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575822,"byte_end":13575831,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":1,"index":7198},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575833,"byte_end":13575840,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":1,"index":11063},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575842,"byte_end":13575848,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":1,"index":11137},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575850,"byte_end":13575865,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":1,"index":11224},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575867,"byte_end":13575883,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":1,"index":6908},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575885,"byte_end":13575899,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":0,"index":8189},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575924,"byte_end":13575933,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":0,"index":8200},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575955,"byte_end":13575965,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":0,"index":8226},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575981,"byte_end":13575985,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":0,"index":8232},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13576001,"byte_end":13576005,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":0,"index":8506},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13576024,"byte_end":13576031,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":7306}},{"kind":"Use","ref_id":{"krate":1,"index":10895},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624823,"byte_end":13624837,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":1,"index":10919},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624857,"byte_end":13624865,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":1,"index":10816},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624886,"byte_end":13624892,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":1,"index":10840},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624894,"byte_end":13624902,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":1,"index":10843},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624904,"byte_end":13624912,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":1,"index":10786},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624934,"byte_end":13624944,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":1,"index":10810},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624946,"byte_end":13624958,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":1,"index":10813},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624960,"byte_end":13624972,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":0,"index":7811},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13625025,"byte_end":13625038,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":0,"index":7939},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13625089,"byte_end":13625097,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":0,"index":8529},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13625099,"byte_end":13625110,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":0,"index":8552},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13625112,"byte_end":13625121,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":0,"index":8577},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13625172,"byte_end":13625181,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":7719}},{"kind":"Use","ref_id":{"krate":2,"index":43555},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/pin/mod.rs","byte_start":13677897,"byte_end":13677900,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":8600}},{"kind":"Use","ref_id":{"krate":1,"index":11561},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678331,"byte_end":13678341,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"alias_span":null,"name":"ExitStatus","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":1,"index":11548},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678432,"byte_end":13678438,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":1,"index":7426},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678529,"byte_end":13678534,"line_start":20,"line_end":20,"column_start":24,"column_end":29},"alias_span":null,"name":"Stdio","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":35,"index":98},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678625,"byte_end":13678630,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"alias_span":null,"name":"Child","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":35,"index":205},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678721,"byte_end":13678732,"line_start":28,"line_end":28,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStderr","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":35,"index":195},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678823,"byte_end":13678833,"line_start":32,"line_end":32,"column_start":24,"column_end":34},"alias_span":null,"name":"ChildStdin","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":35,"index":200},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678924,"byte_end":13678935,"line_start":36,"line_end":36,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStdout","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":35,"index":143},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13679026,"byte_end":13679033,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"alias_span":null,"name":"Command","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":1,"index":7476},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13679083,"byte_end":13679088,"line_start":43,"line_end":43,"column_start":24,"column_end":29},"alias_span":null,"name":"abort","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":1,"index":7475},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13679090,"byte_end":13679094,"line_start":43,"line_end":43,"column_start":31,"column_end":35},"alias_span":null,"name":"exit","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":1,"index":7477},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13679096,"byte_end":13679098,"line_start":43,"line_end":43,"column_start":37,"column_end":39},"alias_span":null,"name":"id","value":"","parent":{"krate":0,"index":8604}},{"kind":"Use","ref_id":{"krate":2,"index":14},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11540,"byte_end":11545,"line_start":338,"line_end":338,"column_start":19,"column_end":24},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":15},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11547,"byte_end":11554,"line_start":338,"line_end":338,"column_start":26,"column_end":33},"alias_span":null,"name":"writeln","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":0,"byte_end":11558,"line_start":1,"line_end":339,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":115},{"krate":0,"index":4309},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4344},{"krate":0,"index":6554},{"krate":0,"index":7306},{"krate":0,"index":7719},{"krate":0,"index":8100},{"krate":0,"index":8600},{"krate":0,"index":8604},{"krate":0,"index":8639},{"krate":0,"index":8673},{"krate":0,"index":8750},{"krate":0,"index":8776},{"krate":0,"index":8803},{"krate":0,"index":8896},{"krate":0,"index":9387},{"krate":0,"index":9388},{"krate":0,"index":9391}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"/ # Async version of the Rust standard library","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [I/O]: io/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ [multithreading]: task/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"/ [`use async_std::future`]: future/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [crates.io]: https://crates.io","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`Future`]: future/trait.Future.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # How to read this documentation","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ bar</a> at the top of the page.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * [`async_std::*` modules](#modules)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ * [Async macros](#macros)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ * [The Async Prelude](prelude/index.html)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ * [Cargo.toml feature flags](#features)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ * [Examples](#examples)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If this is your first time, the documentation for `async-std` is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ written to be casually perused. Clicking on interesting things should","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ generally lead you to interesting places. Still, there are important bits","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ its documentation!","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Once you are familiar with the contents of `async-std` you may","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ development you may want to press the `[-]` button near the top of the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ page to collapse it into a more skimmable view.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ button. Rust's API documentation comes with the source code and you are","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ encouraged to read it. The `async-std` source is generally high","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ quality and a peek behind the curtains is often enlightening.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/ functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ lightweight tasks.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can find more information, reading materials, and other resources here:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * [The async-std website](https://async.rs/)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ * [The async-std book](https://book.async.rs)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"/ * [List of code examples](https://github.com/async-rs/async-std/tree/master/examples)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2851,"byte_end":2940,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"/ * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2941,"byte_end":2989,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2990,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # What is in the `async-std` documentation?","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3042,"byte_end":3045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ First, `async-std` is divided into a number of focused","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3046,"byte_end":3104,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3105,"byte_end":3182,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3183,"byte_end":3258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3259,"byte_end":3333,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ typically includes an overview of the module along with examples, and are","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3334,"byte_end":3411,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ a smart place to start familiarizing yourself with the library.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3412,"byte_end":3479,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3480,"byte_end":3483,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3484,"byte_end":3555,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ of items - mostly traits - that should be imported into every module of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3556,"byte_end":3631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3632,"byte_end":3706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ prelude documentation a good entry point to learning about the library.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3707,"byte_end":3782,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3783,"byte_end":3786,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [The Async Prelude]: prelude/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3787,"byte_end":3830,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/ [`async_std::os`]: os/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3831,"byte_end":3867,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ [`async_std::task`]: task/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3868,"byte_end":3908,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ And finally, `async-std` exports a number of async macros, and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ [lists them on this page](#macros).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":3980,"byte_end":4019,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Contributing changes to the documentation","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4024,"byte_end":4071,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4072,"byte_end":4075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4076,"byte_end":4164,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4165,"byte_end":4257,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4258,"byte_end":4337,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ pull requests for your suggested changes.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4338,"byte_end":4383,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4384,"byte_end":4387,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4388,"byte_end":4464,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ improved, submit a PR, or chat with us first on","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4465,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4517,"byte_end":4559,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4560,"byte_end":4563,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # A tour of `async-std`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4564,"byte_end":4591,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4592,"byte_end":4595,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4596,"byte_end":4673,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ features of `async-std`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4674,"byte_end":4702,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4703,"byte_end":4706,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Platform abstractions and I/O","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4707,"byte_end":4743,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4744,"byte_end":4747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4748,"byte_end":4815,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/ abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4816,"byte_end":4894,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ Unix derivatives.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4895,"byte_end":4916,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4917,"byte_end":4920,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4921,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":4998,"byte_end":5038,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5043,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ contains further primitive shared memory types. [`channel`]  contains the channel types for message passing.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5118,"byte_end":5230,"line_start":109,"line_end":109,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5231,"byte_end":5234,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [files]: fs/struct.File.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5235,"byte_end":5267,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ [TCP]: net/struct.TcpStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5268,"byte_end":5304,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [UDP]: net/struct.UdpSocket.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5305,"byte_end":5341,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ [`io`]: io/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5342,"byte_end":5367,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/ [`sync`]: sync/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5368,"byte_end":5397,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ [`channel`]: channel/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5398,"byte_end":5433,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5434,"byte_end":5437,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Timeouts, intervals, and delays","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5438,"byte_end":5476,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5477,"byte_end":5480,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ `async-std` provides several methods to manipulate time:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5481,"byte_end":5541,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5542,"byte_end":5545,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5546,"byte_end":5616,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/ * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5617,"byte_end":5684,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5685,"byte_end":5761,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/   set interval.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5762,"byte_end":5781,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5782,"byte_end":5785,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5786,"byte_end":5825,"line_start":127,"line_end":127,"column_start":1,"column_end":40}},{"value":"/ [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5826,"byte_end":5875,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5876,"byte_end":5923,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5924,"byte_end":5927,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5928,"byte_end":5942,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5943,"byte_end":5946,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":5947,"byte_end":6026,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ This feature is not enabled by default because it significantly impacts","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6027,"byte_end":6102,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6103,"byte_end":6176,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ executing tasks.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6177,"byte_end":6197,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6198,"byte_end":6201,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Call an async function from the main function:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6202,"byte_end":6252,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6253,"byte_end":6256,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ async fn say_hello() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6368,"byte_end":6394,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6395,"byte_end":6429,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6430,"byte_end":6435,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6436,"byte_end":6439,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6440,"byte_end":6462,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6463,"byte_end":6484,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     say_hello().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6485,"byte_end":6511,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6512,"byte_end":6517,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6518,"byte_end":6525,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6526,"byte_end":6529,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6530,"byte_end":6601,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6602,"byte_end":6605,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6717,"byte_end":6747,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6748,"byte_end":6751,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6752,"byte_end":6774,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6775,"byte_end":6796,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/     let a = async { 1u8 };","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6797,"byte_end":6827,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/     let b = async { 2u8 };","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6828,"byte_end":6858,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6859,"byte_end":6906,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6907,"byte_end":6912,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6913,"byte_end":6920,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6921,"byte_end":6924,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":6925,"byte_end":7002,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7003,"byte_end":7006,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7124,"byte_end":7158,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7159,"byte_end":7162,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7163,"byte_end":7185,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7186,"byte_end":7230,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7231,"byte_end":7293,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7294,"byte_end":7352,"line_start":175,"line_end":175,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7353,"byte_end":7356,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7357,"byte_end":7395,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7396,"byte_end":7399,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7400,"byte_end":7414,"line_start":179,"line_end":179,"column_start":1,"column_end":15}},{"value":"/         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7415,"byte_end":7480,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7481,"byte_end":7547,"line_start":181,"line_end":181,"column_start":1,"column_end":67}},{"value":"/         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7548,"byte_end":7620,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7621,"byte_end":7630,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7631,"byte_end":7636,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7637,"byte_end":7644,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7645,"byte_end":7690,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7691,"byte_end":7694,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7695,"byte_end":7709,"line_start":188,"line_end":188,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7710,"byte_end":7713,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7714,"byte_end":7735,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7736,"byte_end":7745,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7746,"byte_end":7788,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7789,"byte_end":7887,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/ ><code>unstable</code></span>","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7888,"byte_end":7921,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7922,"byte_end":7990,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7991,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":7995,"byte_end":8006,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8007,"byte_end":8035,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8036,"byte_end":8057,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ features = [\"unstable\"]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8058,"byte_end":8085,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8086,"byte_end":8093,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8094,"byte_end":8097,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8098,"byte_end":8119,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8120,"byte_end":8129,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8130,"byte_end":8172,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8173,"byte_end":8271,"line_start":206,"line_end":206,"column_start":1,"column_end":99}},{"value":"/ ><code>attributes</code></span>","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8272,"byte_end":8307,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"/ are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8308,"byte_end":8378,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8379,"byte_end":8382,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8383,"byte_end":8394,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8395,"byte_end":8423,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8424,"byte_end":8445,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ features = [\"attributes\"]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8446,"byte_end":8475,"line_start":213,"line_end":213,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8476,"byte_end":8483,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8484,"byte_end":8487,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 1.0 runtime is also simultaneously possible","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8488,"byte_end":8566,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ using the `tokio1` Cargo feature:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8567,"byte_end":8604,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8605,"byte_end":8608,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8609,"byte_end":8620,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8621,"byte_end":8649,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8650,"byte_end":8671,"line_start":221,"line_end":221,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio1\"]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8672,"byte_end":8697,"line_start":222,"line_end":222,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8698,"byte_end":8705,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8706,"byte_end":8709,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.2 runtime is possible using the `tokio02`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8710,"byte_end":8788,"line_start":225,"line_end":225,"column_start":1,"column_end":79}},{"value":"/ Cargo feature:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8789,"byte_end":8807,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8808,"byte_end":8811,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8812,"byte_end":8823,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8824,"byte_end":8852,"line_start":229,"line_end":229,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8853,"byte_end":8874,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio02\"]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8875,"byte_end":8901,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8902,"byte_end":8909,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8910,"byte_end":8913,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.3 runtime is also simultaneously possible","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8914,"byte_end":8992,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ using the `tokio03` Cargo feature:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":8993,"byte_end":9031,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9032,"byte_end":9035,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9036,"byte_end":9047,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9048,"byte_end":9076,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9077,"byte_end":9098,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio03\"]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9099,"byte_end":9125,"line_start":240,"line_end":240,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9126,"byte_end":9133,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9134,"byte_end":9137,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9138,"byte_end":9215,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ only enabling the `std` Cargo feature:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9216,"byte_end":9258,"line_start":244,"line_end":244,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9259,"byte_end":9262,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9263,"byte_end":9274,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9275,"byte_end":9303,"line_start":247,"line_end":247,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9304,"byte_end":9325,"line_start":248,"line_end":248,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9326,"byte_end":9354,"line_start":249,"line_end":249,"column_start":1,"column_end":29}},{"value":"/ features = [\"std\"]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9355,"byte_end":9377,"line_start":250,"line_end":250,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9378,"byte_end":9385,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9386,"byte_end":9389,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ And to use async-std on `no_std` targets that only support `alloc` only","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9390,"byte_end":9465,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/ enable the `alloc` Cargo feature:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9466,"byte_end":9503,"line_start":254,"line_end":254,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9504,"byte_end":9507,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9508,"byte_end":9519,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9520,"byte_end":9548,"line_start":257,"line_end":257,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9549,"byte_end":9570,"line_start":258,"line_end":258,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9571,"byte_end":9599,"line_start":259,"line_end":259,"column_start":1,"column_end":29}},{"value":"/ features = [\"alloc\"]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9600,"byte_end":9624,"line_start":260,"line_end":260,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9625,"byte_end":9632,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9633,"byte_end":9636,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Runtime configuration","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9637,"byte_end":9664,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9665,"byte_end":9668,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Several environment variables are available to tune the async-std","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9669,"byte_end":9738,"line_start":265,"line_end":265,"column_start":1,"column_end":70}},{"value":"/ runtime:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9739,"byte_end":9751,"line_start":266,"line_end":266,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9752,"byte_end":9755,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ * `ASYNC_STD_THREAD_COUNT`: The number of threads that the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9756,"byte_end":9818,"line_start":268,"line_end":268,"column_start":1,"column_end":63}},{"value":"/ async-std runtime will start. By default, this is one per logical","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9819,"byte_end":9888,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ cpu as reported by the [num_cpus](num_cpus) crate, which may be","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9889,"byte_end":9956,"line_start":270,"line_end":270,"column_start":1,"column_end":68}},{"value":"/ different than the number of physical cpus. Async-std _will panic_","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":9957,"byte_end":10027,"line_start":271,"line_end":271,"column_start":1,"column_end":71}},{"value":"/ if this is set to any value other than a positive integer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10028,"byte_end":10090,"line_start":272,"line_end":272,"column_start":1,"column_end":63}},{"value":"/ * `ASYNC_STD_THREAD_NAME`: The name that async-std's runtime","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10091,"byte_end":10155,"line_start":273,"line_end":273,"column_start":1,"column_end":65}},{"value":"/ threads report to the operating system. The default value is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10156,"byte_end":10220,"line_start":274,"line_end":274,"column_start":1,"column_end":65}},{"value":"/ `\"async-std/runtime\"`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10221,"byte_end":10247,"line_start":275,"line_end":275,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10248,"byte_end":10251,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10345,"byte_end":10416,"line_start":280,"line_end":280,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10417,"byte_end":10474,"line_start":281,"line_end":281,"column_start":1,"column_end":58}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10662,"byte_end":10690,"line_start":285,"line_end":285,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1843},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1892},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1933},{"krate":0,"index":1991},{"krate":0,"index":2002},{"krate":0,"index":2035},{"krate":0,"index":2048},{"krate":0,"index":2062},{"krate":0,"index":2073},{"krate":0,"index":2090},{"krate":0,"index":2106},{"krate":0,"index":2155},{"krate":0,"index":2194},{"krate":0,"index":2272},{"krate":0,"index":2275}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16649,"byte_end":16674,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Types and traits for working with asynchronous tasks.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12885870,"byte_end":12885927,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12885928,"byte_end":12885931,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12885932,"byte_end":12886024,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886025,"byte_end":12886037,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886038,"byte_end":12886041,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886042,"byte_end":12886099,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886100,"byte_end":12886103,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## The task model","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886104,"byte_end":12886125,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886126,"byte_end":12886129,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886130,"byte_end":12886229,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886230,"byte_end":12886327,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ be named, and provide some built-in support for synchronization.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886328,"byte_end":12886396,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886397,"byte_end":12886400,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886401,"byte_end":12886498,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886499,"byte_end":12886589,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/ structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886590,"byte_end":12886689,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886690,"byte_end":12886758,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886759,"byte_end":12886762,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886763,"byte_end":12886860,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886861,"byte_end":12886958,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12886959,"byte_end":12887058,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887059,"byte_end":12887131,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887132,"byte_end":12887135,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Spawning a task","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887136,"byte_end":12887158,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887159,"byte_end":12887162,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887163,"byte_end":12887237,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887238,"byte_end":12887241,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887242,"byte_end":12887255,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887256,"byte_end":12887280,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887281,"byte_end":12887284,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887285,"byte_end":12887308,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/     // some work here","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887309,"byte_end":12887334,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887335,"byte_end":12887342,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887343,"byte_end":12887350,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887351,"byte_end":12887354,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887355,"byte_end":12887452,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887453,"byte_end":12887540,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887541,"byte_end":12887544,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887545,"byte_end":12887644,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887645,"byte_end":12887712,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887713,"byte_end":12887716,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887717,"byte_end":12887724,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887725,"byte_end":12887749,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887750,"byte_end":12887753,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887754,"byte_end":12887793,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887794,"byte_end":12887799,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ let child = task::spawn(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887800,"byte_end":12887835,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/     // some work here","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887836,"byte_end":12887861,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887862,"byte_end":12887869,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ // some work here","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887870,"byte_end":12887891,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ let res = child.await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887892,"byte_end":12887918,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887919,"byte_end":12887924,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887925,"byte_end":12887933,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887934,"byte_end":12887941,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887942,"byte_end":12887945,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `await` operator returns the final value produced by the child task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12887946,"byte_end":12888022,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888023,"byte_end":12888026,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Configuring tasks","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888027,"byte_end":12888051,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888052,"byte_end":12888055,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888056,"byte_end":12888135,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ which currently allows you to set the name for the child task:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888136,"byte_end":12888202,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888203,"byte_end":12888206,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888207,"byte_end":12888214,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888215,"byte_end":12888247,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888248,"byte_end":12888272,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888273,"byte_end":12888276,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888277,"byte_end":12888316,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888317,"byte_end":12888322,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888323,"byte_end":12888388,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888389,"byte_end":12888423,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888424,"byte_end":12888431,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888432,"byte_end":12888437,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888438,"byte_end":12888446,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888447,"byte_end":12888454,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888455,"byte_end":12888458,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## The `Task` type","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888459,"byte_end":12888481,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888482,"byte_end":12888485,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888486,"byte_end":12888562,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ two ways:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888563,"byte_end":12888576,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888577,"byte_end":12888580,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888581,"byte_end":12888651,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888652,"byte_end":12888731,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888732,"byte_end":12888807,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888808,"byte_end":12888811,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Task-local storage","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888812,"byte_end":12888837,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888838,"byte_end":12888841,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This module also provides an implementation of task-local storage for Rust","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888842,"byte_end":12888920,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ programs. Task-local storage is a method of storing data into a global","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888921,"byte_end":12888995,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ variable that each task in the program will have its own copy of.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12888996,"byte_end":12889065,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889066,"byte_end":12889143,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889144,"byte_end":12889147,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889148,"byte_end":12889231,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889232,"byte_end":12889312,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889313,"byte_end":12889398,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"/ [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889399,"byte_end":12889473,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889474,"byte_end":12889559,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889560,"byte_end":12889624,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889625,"byte_end":12889628,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Naming tasks","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889629,"byte_end":12889648,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889649,"byte_end":12889652,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889653,"byte_end":12889745,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889746,"byte_end":12889839,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889840,"byte_end":12889929,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"/ task, use [`Task::name`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889930,"byte_end":12889959,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889960,"byte_end":12889963,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: ../sync/struct.Arc.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12889964,"byte_end":12890000,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890001,"byte_end":12890029,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890030,"byte_end":12890072,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890073,"byte_end":12890133,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"/ [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890134,"byte_end":12890182,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/ [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890183,"byte_end":12890245,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890246,"byte_end":12890282,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890283,"byte_end":12890337,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/ [`task::current`]: fn.current.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890338,"byte_end":12890376,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890377,"byte_end":12890407,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890408,"byte_end":12890456,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/ [`task_local!`]: ../macro.task_local.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890457,"byte_end":12890502,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/mod.rs","byte_start":12890503,"byte_end":12890549,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1873},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043549,"byte_end":13043558,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13042946,"byte_end":13043007,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043008,"byte_end":13043011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043012,"byte_end":13043090,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043091,"byte_end":13043168,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043169,"byte_end":13043246,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043247,"byte_end":13043250,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043251,"byte_end":13043289,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043290,"byte_end":13043293,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043294,"byte_end":13043346,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043347,"byte_end":13043350,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043351,"byte_end":13043365,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043366,"byte_end":13043369,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043370,"byte_end":13043386,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043387,"byte_end":13043390,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043391,"byte_end":13043398,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043399,"byte_end":13043438,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043439,"byte_end":13043444,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043445,"byte_end":13043469,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043470,"byte_end":13043473,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043474,"byte_end":13043502,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043503,"byte_end":13043508,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043509,"byte_end":13043517,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043518,"byte_end":13043525,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043526,"byte_end":13043535,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1930},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044860,"byte_end":13044868,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"pub fn block_on<F, T>(F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044176,"byte_end":13044238,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044239,"byte_end":13044242,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044243,"byte_end":13044342,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044343,"byte_end":13044381,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044382,"byte_end":13044385,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044386,"byte_end":13044425,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044426,"byte_end":13044429,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044430,"byte_end":13044482,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044483,"byte_end":13044486,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044487,"byte_end":13044553,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044554,"byte_end":13044640,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044641,"byte_end":13044644,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044645,"byte_end":13044659,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044660,"byte_end":13044663,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044664,"byte_end":13044677,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044678,"byte_end":13044702,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044703,"byte_end":13044706,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044707,"byte_end":13044722,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044723,"byte_end":13044753,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044754,"byte_end":13044792,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044793,"byte_end":13044803,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044804,"byte_end":13044809,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044810,"byte_end":13044817,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/block_on.rs","byte_start":13044818,"byte_end":13044852,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2197},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045484,"byte_end":13045491,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2198}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045386,"byte_end":13045446,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045605,"byte_end":13045608,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045553,"byte_end":13045579,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045584,"byte_end":13045593,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045728,"byte_end":13045732,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"pub fn name(Self, String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045666,"byte_end":13045702,"line_start":24,"line_end":24,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045707,"byte_end":13045716,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13046351,"byte_end":13046356,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + Send + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13046253,"byte_end":13046300,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13046305,"byte_end":13046339,"line_start":49,"line_end":49,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13047018,"byte_end":13047023,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"local","qualname":"<Builder>::local","value":"pub fn local<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + 'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task locally with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task locally with the configured settings.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13046885,"byte_end":13046940,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"unstable\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13046945,"byte_end":13047006,"line_start":69,"line_end":69,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13049348,"byte_end":13049356,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"blocking","qualname":"<Builder>::blocking","value":"pub fn blocking<F, T>(Self, F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings, blocking on its execution.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings, blocking on its execution.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13049223,"byte_end":13049297,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13049302,"byte_end":13049336,"line_start":140,"line_end":140,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1999},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051801,"byte_end":13051808,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"pub fn current() -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051271,"byte_end":13051312,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051313,"byte_end":13051316,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051317,"byte_end":13051329,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051330,"byte_end":13051333,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051334,"byte_end":13051430,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051431,"byte_end":13051468,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051469,"byte_end":13051472,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051473,"byte_end":13051507,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051508,"byte_end":13051536,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051537,"byte_end":13051593,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051594,"byte_end":13051597,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051598,"byte_end":13051612,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051613,"byte_end":13051616,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051617,"byte_end":13051624,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051625,"byte_end":13051664,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051665,"byte_end":13051670,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051671,"byte_end":13051695,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051696,"byte_end":13051699,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051700,"byte_end":13051770,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051771,"byte_end":13051776,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051777,"byte_end":13051785,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051786,"byte_end":13051793,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2000},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052437,"byte_end":13052448,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"try_current","qualname":"::task::current::try_current","value":"pub fn try_current() -> Option<Task>","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task if called within the context of a task created by [`block_on`],\n [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task if called within the context of a task created by [`block_on`],","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13051907,"byte_end":13052011,"line_start":29,"line_end":29,"column_start":1,"column_end":105}},{"value":"/ [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052012,"byte_end":13052075,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052076,"byte_end":13052079,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052080,"byte_end":13052114,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052115,"byte_end":13052143,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052144,"byte_end":13052200,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052201,"byte_end":13052204,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052205,"byte_end":13052219,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052220,"byte_end":13052223,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052224,"byte_end":13052231,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052232,"byte_end":13052256,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052257,"byte_end":13052260,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ match task::try_current() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052261,"byte_end":13052292,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/     Some(t) => println!(\"The name of this task is {:?}\", t.name()),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052293,"byte_end":13052364,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/     None    => println!(\"Not inside a task!\"),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052365,"byte_end":13052415,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052416,"byte_end":13052421,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/current.rs","byte_start":13052422,"byte_end":13052429,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2210},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13052905,"byte_end":13052915,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13052614,"byte_end":13052660,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13052661,"byte_end":13052664,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13052665,"byte_end":13052748,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13052749,"byte_end":13052801,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13052802,"byte_end":13052805,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13052806,"byte_end":13052843,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13052844,"byte_end":13052847,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13052848,"byte_end":13052876,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053724,"byte_end":13053728,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"pub fn task(&Self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053387,"byte_end":13053431,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053436,"byte_end":13053439,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053444,"byte_end":13053458,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053463,"byte_end":13053466,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053471,"byte_end":13053478,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053483,"byte_end":13053522,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053527,"byte_end":13053532,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053537,"byte_end":13053561,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053566,"byte_end":13053569,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053574,"byte_end":13053610,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053615,"byte_end":13053628,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053633,"byte_end":13053640,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053645,"byte_end":13053689,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053694,"byte_end":13053699,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053704,"byte_end":13053712,"line_start":48,"line_end":48,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053855,"byte_end":13053861,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"cancel","qualname":"<JoinHandle<T>>::cancel","value":"pub async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancel this task.\n","sig":null,"attributes":[{"value":"/ Cancel this task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053777,"byte_end":13053798,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053803,"byte_end":13053837,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2045},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055696,"byte_end":13055701,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"pub async fn sleep(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055082,"byte_end":13055126,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055127,"byte_end":13055130,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055131,"byte_end":13055224,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055225,"byte_end":13055228,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055229,"byte_end":13055293,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055294,"byte_end":13055297,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055298,"byte_end":13055376,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055377,"byte_end":13055380,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055381,"byte_end":13055416,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055417,"byte_end":13055420,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055421,"byte_end":13055473,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055474,"byte_end":13055477,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055478,"byte_end":13055492,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055493,"byte_end":13055496,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055497,"byte_end":13055504,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055505,"byte_end":13055544,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055545,"byte_end":13055550,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055551,"byte_end":13055579,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055580,"byte_end":13055583,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055584,"byte_end":13055608,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055609,"byte_end":13055612,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055613,"byte_end":13055659,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055660,"byte_end":13055665,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055666,"byte_end":13055674,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/sleep.rs","byte_start":13055675,"byte_end":13055682,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2059},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056286,"byte_end":13056291,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13055860,"byte_end":13055878,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13055879,"byte_end":13055882,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13055883,"byte_end":13055977,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13055978,"byte_end":13055981,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13055982,"byte_end":13056053,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056054,"byte_end":13056057,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056058,"byte_end":13056072,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056073,"byte_end":13056076,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056077,"byte_end":13056084,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056085,"byte_end":13056124,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056125,"byte_end":13056130,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056131,"byte_end":13056155,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056156,"byte_end":13056159,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056160,"byte_end":13056196,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056197,"byte_end":13056210,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056211,"byte_end":13056218,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056219,"byte_end":13056222,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056223,"byte_end":13056255,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056256,"byte_end":13056261,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056262,"byte_end":13056270,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn.rs","byte_start":13056271,"byte_end":13056278,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2070},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057216,"byte_end":13057230,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"spawn_blocking","qualname":"::task::spawn_blocking::spawn_blocking","value":"pub fn spawn_blocking<F, T>(F) -> JoinHandle<T> where F: FnOnce() -> T +\nSend + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a blocking task.","sig":null,"attributes":[{"value":"/ Spawns a blocking task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056503,"byte_end":13056530,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056531,"byte_end":13056534,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The task will be spawned onto a thread pool specifically dedicated to blocking tasks. This","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056535,"byte_end":13056629,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ is useful to prevent long-running synchronous operations from blocking the main futures","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056630,"byte_end":13056721,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ executor.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056722,"byte_end":13056735,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056736,"byte_end":13056739,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::block_on`], [`task::spawn`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056740,"byte_end":13056790,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056791,"byte_end":13056794,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`task::block_on`]: fn.block_on.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056795,"byte_end":13056835,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`task::spawn`]: fn.spawn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056836,"byte_end":13056870,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056871,"byte_end":13056874,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056875,"byte_end":13056889,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056890,"byte_end":13056893,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056894,"byte_end":13056910,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056911,"byte_end":13056914,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056915,"byte_end":13056922,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056923,"byte_end":13056957,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056958,"byte_end":13056997,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13056998,"byte_end":13057003,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057004,"byte_end":13057028,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057029,"byte_end":13057032,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057033,"byte_end":13057062,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/     println!(\"long-running task here\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057063,"byte_end":13057106,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057107,"byte_end":13057113,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057114,"byte_end":13057125,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057126,"byte_end":13057131,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057132,"byte_end":13057140,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057141,"byte_end":13057148,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_blocking.rs","byte_start":13057199,"byte_end":13057208,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2217},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057504,"byte_end":13057508,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057452,"byte_end":13057475,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057889,"byte_end":13057891,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"pub fn id(&Self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057825,"byte_end":13057863,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057868,"byte_end":13057877,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13058128,"byte_end":13058132,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057938,"byte_end":13057972,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057977,"byte_end":13057980,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057985,"byte_end":13058049,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13058054,"byte_end":13058057,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13058062,"byte_end":13058116,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2222},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058760,"byte_end":13058766,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058507,"byte_end":13058542,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058543,"byte_end":13058546,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058547,"byte_end":13058561,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058562,"byte_end":13058565,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058566,"byte_end":13058573,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058574,"byte_end":13058598,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058599,"byte_end":13058602,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058603,"byte_end":13058629,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058630,"byte_end":13058682,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058683,"byte_end":13058689,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058690,"byte_end":13058697,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2240},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059656,"byte_end":13059664,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059470,"byte_end":13059515,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059516,"byte_end":13059519,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059520,"byte_end":13059612,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059613,"byte_end":13059627,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2242},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059713,"byte_end":13059719,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2243},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059760,"byte_end":13059765,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060787,"byte_end":13060791,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059823,"byte_end":13059882,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059887,"byte_end":13059890,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059895,"byte_end":13059963,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059968,"byte_end":13059971,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059976,"byte_end":13060068,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060073,"byte_end":13060076,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060081,"byte_end":13060093,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060098,"byte_end":13060101,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060106,"byte_end":13060188,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060193,"byte_end":13060244,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060249,"byte_end":13060252,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060257,"byte_end":13060291,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060296,"byte_end":13060324,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060329,"byte_end":13060385,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060390,"byte_end":13060393,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060398,"byte_end":13060412,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060417,"byte_end":13060420,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060425,"byte_end":13060432,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060437,"byte_end":13060442,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060447,"byte_end":13060471,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060476,"byte_end":13060479,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060484,"byte_end":13060508,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060513,"byte_end":13060543,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060548,"byte_end":13060551,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060556,"byte_end":13060573,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060578,"byte_end":13060626,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060631,"byte_end":13060636,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060641,"byte_end":13060644,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060649,"byte_end":13060675,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060680,"byte_end":13060721,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060726,"byte_end":13060751,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060756,"byte_end":13060763,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060768,"byte_end":13060775,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13062077,"byte_end":13062085,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13060981,"byte_end":13061051,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061056,"byte_end":13061059,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061064,"byte_end":13061132,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061137,"byte_end":13061140,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061145,"byte_end":13061237,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061242,"byte_end":13061245,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061250,"byte_end":13061338,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061343,"byte_end":13061394,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061399,"byte_end":13061402,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061407,"byte_end":13061441,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061446,"byte_end":13061474,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061479,"byte_end":13061535,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061540,"byte_end":13061543,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061548,"byte_end":13061562,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061567,"byte_end":13061570,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061575,"byte_end":13061582,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061587,"byte_end":13061592,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061597,"byte_end":13061621,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061626,"byte_end":13061629,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061634,"byte_end":13061658,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061663,"byte_end":13061693,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061698,"byte_end":13061701,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061706,"byte_end":13061723,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061728,"byte_end":13061773,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061778,"byte_end":13061783,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061788,"byte_end":13061791,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061796,"byte_end":13061822,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061827,"byte_end":13061869,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061874,"byte_end":13061903,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061908,"byte_end":13061915,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061920,"byte_end":13061923,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13061928,"byte_end":13062000,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13062005,"byte_end":13062053,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13062058,"byte_end":13062065,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2247},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13063638,"byte_end":13063649,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":2248}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13063471,"byte_end":13063519,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13063520,"byte_end":13063523,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13063524,"byte_end":13063588,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2286},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177308,"byte_end":13177319,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn_local::spawn_local","value":"pub fn spawn_local<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> +\n'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task onto the thread-local executor.","sig":null,"attributes":[{"value":"/ Spawns a task onto the thread-local executor.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13176925,"byte_end":13176974,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13176975,"byte_end":13176978,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13176979,"byte_end":13176993,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13176994,"byte_end":13176997,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13176998,"byte_end":13177005,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177006,"byte_end":13177040,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177041,"byte_end":13177080,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177081,"byte_end":13177086,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177087,"byte_end":13177111,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177112,"byte_end":13177115,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn_local(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177116,"byte_end":13177158,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/     1 + 2","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177159,"byte_end":13177172,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177173,"byte_end":13177180,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177181,"byte_end":13177184,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177185,"byte_end":13177217,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177218,"byte_end":13177223,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177224,"byte_end":13177232,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177233,"byte_end":13177240,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/spawn_local.rs","byte_start":13177291,"byte_end":13177300,"line_start":24,"line_end":24,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2292},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2576},{"krate":0,"index":2605},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2643}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16649,"byte_end":16674,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Asynchronous values.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12891896,"byte_end":12891920,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12891921,"byte_end":12891924,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Base Futures Concurrency","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12891925,"byte_end":12891956,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12891957,"byte_end":12891960,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Often it's desireable to await multiple futures as if it was a single","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12891961,"byte_end":12892034,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ future. The `join` family of operations converts multiple futures into a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892035,"byte_end":12892111,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ single future that returns all of their outputs. The `race` family of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892112,"byte_end":12892185,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ operations converts multiple future into a single future that returns the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892186,"byte_end":12892263,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ first output.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892264,"byte_end":12892281,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892282,"byte_end":12892285,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For operating on futures the following functions can be used:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892286,"byte_end":12892351,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892352,"byte_end":12892355,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Name               | Return signature | When does it return?     |","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892356,"byte_end":12892428,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ | ---                | ---              | ---                      |","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892429,"byte_end":12892501,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892502,"byte_end":12892572,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892573,"byte_end":12892640,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892641,"byte_end":12892644,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Fallible Futures Concurrency","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892645,"byte_end":12892680,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892681,"byte_end":12892684,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892685,"byte_end":12892764,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892765,"byte_end":12892851,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ and will behave slightly differently from their base variants.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892852,"byte_end":12892918,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892919,"byte_end":12892922,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892923,"byte_end":12892993,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ futures are dropped and an error is returned. This is referred to as","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12892994,"byte_end":12893066,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ \"short-circuiting\".","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893067,"byte_end":12893090,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893091,"byte_end":12893094,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_race`, instead of returning the first future that","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893095,"byte_end":12893168,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ completes it returns the first future that _successfully_ completes. This","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893169,"byte_end":12893246,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ means `try_race` will keep going until any one of the futures returns","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893247,"byte_end":12893320,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893321,"byte_end":12893368,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893369,"byte_end":12893372,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893373,"byte_end":12893453,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893454,"byte_end":12893534,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ work on `Result`, and their respective semantics:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893535,"byte_end":12893588,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893589,"byte_end":12893592,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ | Name                   | Return signature               | When does it return? |","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893593,"byte_end":12893679,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ | ---                    | ---                            | ---                  |","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893680,"byte_end":12893766,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"/ | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893767,"byte_end":12893855,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893856,"byte_end":12893967,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"/ | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12893968,"byte_end":12894053,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894054,"byte_end":12894158,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894159,"byte_end":12894162,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894163,"byte_end":12894214,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894215,"byte_end":12894274,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894275,"byte_end":12894326,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/mod.rs","byte_start":12894327,"byte_end":12894386,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":12342},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/delay.rs","byte_start":13193001,"byte_end":13193012,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"DelayFuture","qualname":"::future::future::delay::DelayFuture","value":"DelayFuture {  }","parent":null,"children":[{"krate":0,"index":12344},{"krate":0,"index":12345}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/delay.rs","byte_start":13193134,"byte_end":13193137,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayFuture<F>>::new","value":"pub fn new(F, Duration) -> DelayFuture<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12301},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/flatten.rs","byte_start":13193977,"byte_end":13193990,"line_start":11,"line_end":11,"column_start":16,"column_end":29},"name":"FlattenFuture","qualname":"::future::future::flatten::FlattenFuture","value":"FlattenFuture {  }","parent":null,"children":[{"krate":0,"index":12304}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12209},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/race.rs","byte_start":13195640,"byte_end":13195644,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Race","qualname":"::future::future::race::Race","value":"Race {  }","parent":null,"children":[{"krate":0,"index":12212},{"krate":0,"index":12213}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12164},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_race.rs","byte_start":13196892,"byte_end":13196899,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryRace","qualname":"::future::future::try_race::TryRace","value":"TryRace {  }","parent":null,"children":[{"krate":0,"index":12167},{"krate":0,"index":12168}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12119},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/join.rs","byte_start":13198660,"byte_end":13198664,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Join","qualname":"::future::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":12122},{"krate":0,"index":12123}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12074},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_join.rs","byte_start":13200077,"byte_end":13200084,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryJoin","qualname":"::future::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":12077},{"krate":0,"index":12078}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2520},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13183091,"byte_end":13183100,"line_start":139,"line_end":139,"column_start":15,"column_end":24},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2527},{"krate":0,"index":2531},{"krate":0,"index":2533},{"krate":0,"index":2538}],"decl_id":null,"docs":"        Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13183671,"byte_end":13183676,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"delay","qualname":"::future::future::FutureExt::delay","value":"pub fn delay(Self, Duration) -> DelayFuture<Self> where Self: Sized","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":" Returns a Future that delays execution for a specified time.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13183573,"byte_end":13183601,"line_start":154,"line_end":154,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13184429,"byte_end":13184436,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self)\n-> FlattenFuture<Self, <Self::Output as IntoFuture>::Future> where\nSelf: Sized, <Self as Future>::Output: IntoFuture","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":" Flatten out the execution of this future when the result itself\n can be converted into another future.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13184331,"byte_end":13184359,"line_start":177,"line_end":177,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13185860,"byte_end":13185864,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"race","qualname":"::future::future::FutureExt::race","value":"pub fn race<F>(Self, F) -> Race<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":"            Waits for one of two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13185762,"byte_end":13185790,"line_start":219,"line_end":219,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13187451,"byte_end":13187459,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"try_race","qualname":"::future::future::FutureExt::try_race","value":"pub fn try_race<F, T, E>(Self, F) -> TryRace<Self, F> where\nSelf: std::future::Future<Output = Result<T, E>> + Sized,\nF: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":"            Waits for one of two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13187353,"byte_end":13187381,"line_start":265,"line_end":265,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13188629,"byte_end":13188633,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"join","qualname":"::future::future::FutureExt::join","value":"pub fn join<F>(Self, F) -> Join<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":"            Waits for two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13188508,"byte_end":13188559,"line_start":302,"line_end":302,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13190117,"byte_end":13190125,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"try_join","qualname":"::future::future::FutureExt::try_join","value":"pub fn try_join<F, A, B, E>(Self, F) -> TryJoin<Self, F> where\nSelf: std::future::Future<Output = Result<A, E>> + Sized,\nF: std::future::Future<Output = Result<B, E>>","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":"            Waits for two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13189996,"byte_end":13190047,"line_start":349,"line_end":349,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13191386,"byte_end":13191393,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"timeout","qualname":"::future::future::FutureExt::timeout","value":"pub fn timeout(Self, Duration) -> TimeoutFuture<Self> where Self: Sized","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":"            Waits for both the future and a timeout, if the timeout completes before\n            the future, it returns an TimeoutError.","sig":null,"attributes":[{"value":"cfg(any(all(feature = \"default\", feature = \"unstable\"), feature = \"docs\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13191239,"byte_end":13191316,"line_start":388,"line_end":388,"column_start":9,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":2565},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202254,"byte_end":13202261,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"pub async fn pending<T>() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13201862,"byte_end":13201892,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13201893,"byte_end":13201896,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13201897,"byte_end":13201911,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13201912,"byte_end":13201915,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13201916,"byte_end":13201923,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13201924,"byte_end":13201963,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13201964,"byte_end":13201969,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13201970,"byte_end":13201998,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13201999,"byte_end":13202002,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202003,"byte_end":13202029,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202030,"byte_end":13202052,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202053,"byte_end":13202056,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202057,"byte_end":13202094,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202095,"byte_end":13202127,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202128,"byte_end":13202131,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202132,"byte_end":13202190,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202191,"byte_end":13202217,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202218,"byte_end":13202223,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202224,"byte_end":13202232,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202233,"byte_end":13202240,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2590},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203152,"byte_end":13203159,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub async fn poll_fn<F, T>(F) -> /*impl Trait*/ where F: FnMut(&mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202637,"byte_end":13202708,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202709,"byte_end":13202712,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202713,"byte_end":13202779,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202780,"byte_end":13202783,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202784,"byte_end":13202798,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202799,"byte_end":13202802,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202803,"byte_end":13202810,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202811,"byte_end":13202850,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202851,"byte_end":13202856,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202857,"byte_end":13202883,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202884,"byte_end":13202925,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202926,"byte_end":13202929,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202930,"byte_end":13202989,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13202990,"byte_end":13203036,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203037,"byte_end":13203042,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203043,"byte_end":13203046,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203047,"byte_end":13203115,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203116,"byte_end":13203121,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203122,"byte_end":13203130,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203131,"byte_end":13203138,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2606},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203939,"byte_end":13203944,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"pub async fn ready<T>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203550,"byte_end":13203585,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203586,"byte_end":13203589,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203590,"byte_end":13203658,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203659,"byte_end":13203662,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203663,"byte_end":13203749,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203750,"byte_end":13203753,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203754,"byte_end":13203768,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203769,"byte_end":13203772,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203773,"byte_end":13203780,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203781,"byte_end":13203820,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203821,"byte_end":13203826,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203827,"byte_end":13203853,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203854,"byte_end":13203857,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203858,"byte_end":13203902,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203903,"byte_end":13203908,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203909,"byte_end":13203917,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/ready.rs","byte_start":13203918,"byte_end":13203925,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895660,"byte_end":12895667,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895132,"byte_end":12895190,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895191,"byte_end":12895194,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895195,"byte_end":12895248,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895249,"byte_end":12895300,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895301,"byte_end":12895304,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895305,"byte_end":12895319,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895320,"byte_end":12895323,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895324,"byte_end":12895331,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895332,"byte_end":12895406,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895407,"byte_end":12895412,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895413,"byte_end":12895441,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895442,"byte_end":12895445,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895446,"byte_end":12895472,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895473,"byte_end":12895476,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895477,"byte_end":12895517,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895518,"byte_end":12895557,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895558,"byte_end":12895614,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895615,"byte_end":12895620,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895621,"byte_end":12895638,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895639,"byte_end":12895646,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12037},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895885,"byte_end":12895898,"line_start":41,"line_end":41,"column_start":16,"column_end":29},"name":"TimeoutFuture","qualname":"::future::timeout::TimeoutFuture","value":"TimeoutFuture {  }","parent":null,"children":[{"krate":0,"index":12039},{"krate":0,"index":12040}],"decl_id":null,"docs":" A future that times out after a duration of time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2610},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12896830,"byte_end":12896842,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":2611}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12896727,"byte_end":12896773,"line_start":74,"line_end":74,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2634},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204718,"byte_end":13204728,"line_start":35,"line_end":35,"column_start":11,"column_end":21},"name":"IntoFuture","qualname":"::future::into_future::IntoFuture","value":"IntoFuture","parent":null,"children":[{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637}],"decl_id":null,"docs":" Convert a type into a `Future`.","sig":null,"attributes":[{"value":"/ Convert a type into a `Future`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204000,"byte_end":13204035,"line_start":3,"line_end":3,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204036,"byte_end":13204039,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204040,"byte_end":13204054,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204055,"byte_end":13204058,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204059,"byte_end":13204066,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use async_std::future::{Future, IntoFuture};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204067,"byte_end":13204115,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204116,"byte_end":13204138,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/ use async_std::pin::Pin;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204139,"byte_end":13204167,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204168,"byte_end":13204171,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ struct Client;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204172,"byte_end":13204190,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204191,"byte_end":13204194,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ impl Client {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204195,"byte_end":13204212,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/     pub async fn send(self) -> io::Result<()> {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204213,"byte_end":13204264,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/         // Send a request","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204265,"byte_end":13204294,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/         Ok(())","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204295,"byte_end":13204313,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204314,"byte_end":13204323,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204324,"byte_end":13204329,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204330,"byte_end":13204333,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ impl IntoFuture for Client {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204334,"byte_end":13204366,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/     type Output = io::Result<()>;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204367,"byte_end":13204404,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204405,"byte_end":13204408,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Self::Output>>>;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204409,"byte_end":13204475,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204476,"byte_end":13204479,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     fn into_future(self) -> Self::Future {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204480,"byte_end":13204526,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/         Box::pin(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204527,"byte_end":13204555,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/             self.send().await","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204556,"byte_end":13204589,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/         })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204590,"byte_end":13204604,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204605,"byte_end":13204614,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204615,"byte_end":13204620,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204621,"byte_end":13204628,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204629,"byte_end":13204657,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":2635},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204790,"byte_end":13204796,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"Output","qualname":"::future::into_future::IntoFuture::Output","value":"type Output;","parent":{"krate":0,"index":2634},"children":[],"decl_id":null,"docs":" The type of value produced on completion.\n","sig":null,"attributes":[{"value":"/ The type of value produced on completion.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204735,"byte_end":13204780,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":2636},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204863,"byte_end":13204869,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::into_future::IntoFuture::Future","value":"type Future: Future<Output = Self::Output>;","parent":{"krate":0,"index":2634},"children":[],"decl_id":null,"docs":" Which kind of future are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of future are we turning this into?","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204803,"byte_end":13204853,"line_start":39,"line_end":39,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204947,"byte_end":13204958,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::into_future::IntoFuture::into_future","value":"pub fn into_future(Self) -> Self::Future","parent":{"krate":0,"index":2634},"children":[],"decl_id":null,"docs":" Create a future from a value\n","sig":null,"attributes":[{"value":"/ Create a future from a value","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13204907,"byte_end":13204939,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":1690},{"krate":0,"index":1713},{"krate":0,"index":1737},{"krate":0,"index":1766},{"krate":0,"index":1795},{"krate":0,"index":1815},{"krate":0,"index":3250},{"krate":0,"index":3448},{"krate":0,"index":3457},{"krate":0,"index":3479},{"krate":0,"index":3494},{"krate":0,"index":3501},{"krate":0,"index":3532},{"krate":0,"index":3545},{"krate":0,"index":3586},{"krate":0,"index":3612},{"krate":0,"index":3640},{"krate":0,"index":3666},{"krate":0,"index":3669},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3689},{"krate":0,"index":3692},{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3705},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3712},{"krate":0,"index":3715}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16649,"byte_end":16674,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Composable asynchronous iteration.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897045,"byte_end":12897083,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897084,"byte_end":12897087,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::iter`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897088,"byte_end":12897141,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897142,"byte_end":12897145,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897146,"byte_end":12897220,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ and needed to perform an operation on the elements of said collection,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897221,"byte_end":12897295,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897296,"byte_end":12897372,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897373,"byte_end":12897443,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897444,"byte_end":12897447,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Before explaining more, let's talk about how this module is structured:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897448,"byte_end":12897523,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897524,"byte_end":12897527,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897528,"byte_end":12897546,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897547,"byte_end":12897550,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This module is largely organized by type:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897551,"byte_end":12897596,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897597,"byte_end":12897600,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897601,"byte_end":12897678,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897679,"byte_end":12897759,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   putting some extra study time into.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897760,"byte_end":12897801,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897802,"byte_end":12897875,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ * [Structs] are often the return types of the various methods on this","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897876,"byte_end":12897949,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12897950,"byte_end":12898027,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898028,"byte_end":12898107,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898108,"byte_end":12898164,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898165,"byte_end":12898168,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [Traits]: #traits","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898169,"byte_end":12898190,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ [Functions]: #functions","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898191,"byte_end":12898218,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ [Structs]: #structs","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898219,"byte_end":12898242,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898243,"byte_end":12898246,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ That's it! Let's dig into streams.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898247,"byte_end":12898285,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898286,"byte_end":12898289,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Stream","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898290,"byte_end":12898302,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898303,"byte_end":12898306,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898307,"byte_end":12898381,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ [`Stream`] looks like this:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898382,"byte_end":12898413,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898414,"byte_end":12898417,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898418,"byte_end":12898425,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898426,"byte_end":12898469,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898470,"byte_end":12898494,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ trait Stream {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898495,"byte_end":12898513,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     type Item;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898514,"byte_end":12898532,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898533,"byte_end":12898626,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898627,"byte_end":12898632,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898633,"byte_end":12898640,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898641,"byte_end":12898644,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A stream has a method, [`next`], which when called, returns an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898645,"byte_end":12898711,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898712,"byte_end":12898786,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898787,"byte_end":12898863,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898864,"byte_end":12898941,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ something asynchronous to resolve `Pending` is returned.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12898942,"byte_end":12899002,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899003,"byte_end":12899006,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Individual streams may choose to resume iteration, and so calling","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899007,"byte_end":12899076,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899077,"byte_end":12899157,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ again at some point.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899158,"byte_end":12899182,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899183,"byte_end":12899186,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899187,"byte_end":12899263,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899264,"byte_end":12899338,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ them for free.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899339,"byte_end":12899357,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899358,"byte_end":12899361,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Streams are also composable, and it's common to chain them together to do","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899362,"byte_end":12899439,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899440,"byte_end":12899515,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ below for more details.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899516,"byte_end":12899543,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899544,"byte_end":12899547,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899548,"byte_end":12899584,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899585,"byte_end":12899618,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899619,"byte_end":12899664,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899665,"byte_end":12899714,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899715,"byte_end":12899718,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # The three forms of streaming","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899719,"byte_end":12899753,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899754,"byte_end":12899757,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ There are three common methods which can create streams from a collection:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899758,"byte_end":12899836,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899837,"byte_end":12899840,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `stream()`, which iterates over `&T`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899841,"byte_end":12899884,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/ * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899885,"byte_end":12899936,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ * `into_stream()`, which iterates over `T`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899937,"byte_end":12899984,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899985,"byte_end":12899988,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Various things in async-std may implement one or more of the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12899989,"byte_end":12900053,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ three, where appropriate.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900054,"byte_end":12900083,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900084,"byte_end":12900087,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Implementing Stream","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900088,"byte_end":12900113,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900114,"byte_end":12900117,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900118,"byte_end":12900194,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900195,"byte_end":12900267,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900268,"byte_end":12900346,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ one for each stream and iterator adapter.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900347,"byte_end":12900392,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900393,"byte_end":12900396,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900397,"byte_end":12900466,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900467,"byte_end":12900470,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900471,"byte_end":12900478,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900479,"byte_end":12900511,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900512,"byte_end":12900555,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900556,"byte_end":12900580,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ // First, the struct:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900581,"byte_end":12900606,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900607,"byte_end":12900610,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ /// A stream which counts from one to five","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900611,"byte_end":12900657,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/ struct Counter {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900658,"byte_end":12900678,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900679,"byte_end":12900700,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900701,"byte_end":12900706,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900707,"byte_end":12900710,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900711,"byte_end":12900789,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900790,"byte_end":12900865,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900866,"byte_end":12900939,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ impl Counter {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900940,"byte_end":12900958,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/     fn new() -> Counter {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900959,"byte_end":12900988,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/         Counter { count: 0 }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12900989,"byte_end":12901021,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901022,"byte_end":12901031,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901032,"byte_end":12901037,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901038,"byte_end":12901041,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901042,"byte_end":12901095,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901096,"byte_end":12901099,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ impl Stream for Counter {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901100,"byte_end":12901129,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/     // we will be counting with usize","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901130,"byte_end":12901171,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/     type Item = usize;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901172,"byte_end":12901198,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901199,"byte_end":12901202,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     // poll_next() is the only required method","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901203,"byte_end":12901253,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901254,"byte_end":12901352,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/         // Increment our count. This is why we started at zero.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901353,"byte_end":12901420,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/         self.count += 1;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901421,"byte_end":12901449,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901450,"byte_end":12901453,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/         // Check to see if we've finished counting or not.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901454,"byte_end":12901516,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/         if self.count < 6 {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901517,"byte_end":12901548,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/             Poll::Ready(Some(self.count))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901549,"byte_end":12901594,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901595,"byte_end":12901615,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901616,"byte_end":12901649,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901650,"byte_end":12901663,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901664,"byte_end":12901673,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901674,"byte_end":12901679,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901680,"byte_end":12901683,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901684,"byte_end":12901713,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901714,"byte_end":12901788,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901789,"byte_end":12901794,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ let mut counter = Counter::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901795,"byte_end":12901832,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901833,"byte_end":12901836,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901837,"byte_end":12901879,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901880,"byte_end":12901902,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901903,"byte_end":12901906,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901907,"byte_end":12901949,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901950,"byte_end":12901972,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901973,"byte_end":12901976,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12901977,"byte_end":12902019,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902020,"byte_end":12902042,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902043,"byte_end":12902046,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902047,"byte_end":12902089,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902090,"byte_end":12902112,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902113,"byte_end":12902116,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902117,"byte_end":12902159,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902160,"byte_end":12902182,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902183,"byte_end":12902188,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902189,"byte_end":12902206,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902207,"byte_end":12902214,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902215,"byte_end":12902218,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This will print `1` through `5`, each on their own line.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902219,"byte_end":12902279,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902280,"byte_end":12902283,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902284,"byte_end":12902363,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902364,"byte_end":12902440,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ that next.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902441,"byte_end":12902455,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902456,"byte_end":12902459,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # while let Loops and IntoStream","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902460,"byte_end":12902496,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902497,"byte_end":12902500,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902501,"byte_end":12902595,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"/ example of `while let`:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902596,"byte_end":12902623,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902624,"byte_end":12902627,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902628,"byte_end":12902635,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902636,"byte_end":12902710,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902711,"byte_end":12902716,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902717,"byte_end":12902749,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902750,"byte_end":12902778,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"/ let mut values = stream::repeat(1u8).take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902779,"byte_end":12902828,"line_start":167,"line_end":167,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902829,"byte_end":12902832,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = values.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902833,"byte_end":12902878,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902879,"byte_end":12902905,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902906,"byte_end":12902911,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902912,"byte_end":12902917,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902918,"byte_end":12902935,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902936,"byte_end":12902943,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902944,"byte_end":12902947,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers one through five, each on their own line. But","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12902948,"byte_end":12903025,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ you'll notice something here: we never called anything on our vector to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903026,"byte_end":12903101,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ produce a stream. What gives?","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903102,"byte_end":12903135,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903136,"byte_end":12903139,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ There's a trait in the standard library for converting something into an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903140,"byte_end":12903216,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903217,"byte_end":12903288,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"/ which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903289,"byte_end":12903360,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903361,"byte_end":12903364,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903365,"byte_end":12903438,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903439,"byte_end":12903515,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ doesn't occur yet, and `into_stream` will always have to be called manually.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903516,"byte_end":12903596,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903597,"byte_end":12903600,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903601,"byte_end":12903642,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903643,"byte_end":12903706,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903707,"byte_end":12903710,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Adapters","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903711,"byte_end":12903725,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903726,"byte_end":12903729,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903730,"byte_end":12903802,"line_start":193,"line_end":193,"column_start":1,"column_end":73}},{"value":"/ often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903803,"byte_end":12903873,"line_start":194,"line_end":194,"column_start":1,"column_end":71}},{"value":"/ pattern'.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903874,"byte_end":12903887,"line_start":195,"line_end":195,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903888,"byte_end":12903891,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903892,"byte_end":12903961,"line_start":197,"line_end":197,"column_start":1,"column_end":70}},{"value":"/ For more, see their documentation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12903962,"byte_end":12904000,"line_start":198,"line_end":198,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904001,"byte_end":12904004,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904005,"byte_end":12904046,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904047,"byte_end":12904090,"line_start":201,"line_end":201,"column_start":1,"column_end":44}},{"value":"/ [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904091,"byte_end":12904138,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904139,"byte_end":12904142,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ # Laziness","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904143,"byte_end":12904157,"line_start":204,"line_end":204,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904158,"byte_end":12904161,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904162,"byte_end":12904236,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"/ just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904237,"byte_end":12904312,"line_start":207,"line_end":207,"column_start":1,"column_end":76}},{"value":"/ until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904313,"byte_end":12904386,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"/ creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904387,"byte_end":12904462,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"/ method calls a closure on each element it iterates over:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904463,"byte_end":12904523,"line_start":210,"line_end":210,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904524,"byte_end":12904527,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904528,"byte_end":12904535,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904536,"byte_end":12904568,"line_start":213,"line_end":213,"column_start":1,"column_end":33}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904569,"byte_end":12904643,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904644,"byte_end":12904649,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904650,"byte_end":12904682,"line_start":216,"line_end":216,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904683,"byte_end":12904711,"line_start":217,"line_end":217,"column_start":1,"column_end":29}},{"value":"/ let v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904712,"byte_end":12904752,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/ v.map(|x| println!(\"{}\", x));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904753,"byte_end":12904786,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904787,"byte_end":12904792,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904793,"byte_end":12904810,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904811,"byte_end":12904818,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904819,"byte_end":12904822,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ This will not print any values, as we only created a stream, rather than","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904823,"byte_end":12904899,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904900,"byte_end":12904968,"line_start":225,"line_end":225,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904969,"byte_end":12904972,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904973,"byte_end":12904984,"line_start":227,"line_end":227,"column_start":1,"column_end":12}},{"value":"/ warning: unused result that must be used: streams are lazy and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12904985,"byte_end":12905051,"line_start":228,"line_end":228,"column_start":1,"column_end":67}},{"value":"/ do nothing unless consumed","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905052,"byte_end":12905082,"line_start":229,"line_end":229,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905083,"byte_end":12905090,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905091,"byte_end":12905094,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905095,"byte_end":12905168,"line_start":232,"line_end":232,"column_start":1,"column_end":74}},{"value":"/ `while let` loop instead:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905169,"byte_end":12905198,"line_start":233,"line_end":233,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905199,"byte_end":12905202,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905203,"byte_end":12905210,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905211,"byte_end":12905285,"line_start":236,"line_end":236,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905286,"byte_end":12905291,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905292,"byte_end":12905324,"line_start":238,"line_end":238,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905325,"byte_end":12905353,"line_start":239,"line_end":239,"column_start":1,"column_end":29}},{"value":"/ let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905354,"byte_end":12905398,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905399,"byte_end":12905402,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = &v.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905403,"byte_end":12905444,"line_start":242,"line_end":242,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905445,"byte_end":12905471,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905472,"byte_end":12905477,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905478,"byte_end":12905483,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905484,"byte_end":12905501,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905502,"byte_end":12905509,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905510,"byte_end":12905513,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905514,"byte_end":12905555,"line_start":249,"line_end":249,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905556,"byte_end":12905559,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905560,"byte_end":12905639,"line_start":251,"line_end":251,"column_start":1,"column_end":80}},{"value":"/ like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905640,"byte_end":12905715,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905716,"byte_end":12905719,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905720,"byte_end":12905769,"line_start":254,"line_end":254,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905770,"byte_end":12905773,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Infinity","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905774,"byte_end":12905788,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905789,"byte_end":12905792,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Streams do not have to be finite. As an example, a repeat stream is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905793,"byte_end":12905864,"line_start":258,"line_end":258,"column_start":1,"column_end":72}},{"value":"/ an infinite stream:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905865,"byte_end":12905888,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905889,"byte_end":12905892,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905893,"byte_end":12905900,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905901,"byte_end":12905929,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905930,"byte_end":12905968,"line_start":263,"line_end":263,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905969,"byte_end":12905976,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905977,"byte_end":12905980,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12905981,"byte_end":12906052,"line_start":266,"line_end":266,"column_start":1,"column_end":72}},{"value":"/ stream into a finite one:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906053,"byte_end":12906082,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906083,"byte_end":12906086,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906087,"byte_end":12906094,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906095,"byte_end":12906169,"line_start":270,"line_end":270,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906170,"byte_end":12906175,"line_start":271,"line_end":271,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906176,"byte_end":12906208,"line_start":272,"line_end":272,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906209,"byte_end":12906237,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906238,"byte_end":12906276,"line_start":274,"line_end":274,"column_start":1,"column_end":39}},{"value":"/ let mut five_numbers = numbers.take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906277,"byte_end":12906320,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906321,"byte_end":12906324,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ while let Some(number) = five_numbers.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906325,"byte_end":12906381,"line_start":277,"line_end":277,"column_start":1,"column_end":57}},{"value":"/     println!(\"{}\", number);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906382,"byte_end":12906413,"line_start":278,"line_end":278,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906414,"byte_end":12906419,"line_start":279,"line_end":279,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906420,"byte_end":12906425,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906426,"byte_end":12906443,"line_start":281,"line_end":281,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906444,"byte_end":12906451,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906452,"byte_end":12906455,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906456,"byte_end":12906528,"line_start":284,"line_end":284,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906529,"byte_end":12906532,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906533,"byte_end":12906606,"line_start":286,"line_end":286,"column_start":1,"column_end":74}},{"value":"/ result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906607,"byte_end":12906685,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906686,"byte_end":12906762,"line_start":288,"line_end":288,"column_start":1,"column_end":77}},{"value":"/ traversing every element in the stream, are likely not to return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906763,"byte_end":12906831,"line_start":289,"line_end":289,"column_start":1,"column_end":69}},{"value":"/ successfully for any infinite streams.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906832,"byte_end":12906874,"line_start":290,"line_end":290,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906875,"byte_end":12906878,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906879,"byte_end":12906892,"line_start":292,"line_end":292,"column_start":1,"column_end":14}},{"value":"/ let ones = async_std::stream::repeat(1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906893,"byte_end":12906937,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"/ let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12906938,"byte_end":12907008,"line_start":294,"line_end":294,"column_start":1,"column_end":71}},{"value":"/ // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907009,"byte_end":12907083,"line_start":295,"line_end":295,"column_start":1,"column_end":75}},{"value":"/ println!(\"The smallest number one is {}.\", least);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907084,"byte_end":12907138,"line_start":296,"line_end":296,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907139,"byte_end":12907146,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907147,"byte_end":12907150,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907151,"byte_end":12907215,"line_start":299,"line_end":299,"column_start":1,"column_end":65}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907216,"byte_end":12907259,"line_start":300,"line_end":300,"column_start":1,"column_end":44}},{"value":"/ [`min`]: trait.Stream.html#method.min","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/mod.rs","byte_start":12907260,"byte_end":12907301,"line_start":301,"line_end":301,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/all.rs","byte_start":12979230,"byte_end":12979239,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/all.rs","byte_start":12979179,"byte_end":12979218,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":223},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/any.rs","byte_start":12980585,"byte_end":12980594,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/any.rs","byte_start":12980534,"byte_end":12980573,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11988},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/chain.rs","byte_start":12982241,"byte_end":12982246,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11991},{"krate":0,"index":11992}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11952},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cloned.rs","byte_start":12983573,"byte_end":12983579,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":11954}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11899},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cmp.rs","byte_start":12984503,"byte_end":12984512,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":11902},{"krate":0,"index":11903},{"krate":0,"index":11904},{"krate":0,"index":11905}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11863},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/copied.rs","byte_start":12987194,"byte_end":12987200,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":11865}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11823},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cycle.rs","byte_start":12987959,"byte_end":12987964,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11825},{"krate":0,"index":11826}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11783},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/enumerate.rs","byte_start":12988842,"byte_end":12988851,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11785},{"krate":0,"index":11786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11738},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/eq.rs","byte_start":12989928,"byte_end":12989936,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":11741},{"krate":0,"index":11742}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11689},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter.rs","byte_start":12991475,"byte_end":12991481,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11692},{"krate":0,"index":11693}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11640},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter_map.rs","byte_start":12992454,"byte_end":12992463,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11643},{"krate":0,"index":11644}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find.rs","byte_start":12993442,"byte_end":12993452,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find.rs","byte_start":12993391,"byte_end":12993430,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":561},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find_map.rs","byte_start":12994438,"byte_end":12994451,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find_map.rs","byte_start":12994387,"byte_end":12994426,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11578},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fold.rs","byte_start":12995528,"byte_end":12995538,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":11582},{"krate":0,"index":11583},{"krate":0,"index":11584}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11533},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/for_each.rs","byte_start":12996728,"byte_end":12996741,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":11536},{"krate":0,"index":11537}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11490},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fuse.rs","byte_start":12997921,"byte_end":12997925,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11492},{"krate":0,"index":11493}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11449},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ge.rs","byte_start":12999081,"byte_end":12999089,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":11452}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11408},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/gt.rs","byte_start":13000314,"byte_end":13000322,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":11411}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11359},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/inspect.rs","byte_start":13001551,"byte_end":13001558,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":11362},{"krate":0,"index":11363}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11314},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/last.rs","byte_start":13002420,"byte_end":13002430,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":11317},{"krate":0,"index":11318}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11273},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/le.rs","byte_start":13003643,"byte_end":13003651,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":11276}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11232},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/lt.rs","byte_start":13004886,"byte_end":13004894,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":11235}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11183},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/map.rs","byte_start":13005892,"byte_end":13005895,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":11186},{"krate":0,"index":11187}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11138},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max.rs","byte_start":13006719,"byte_end":13006728,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":11141},{"krate":0,"index":11142}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11081},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by.rs","byte_start":13007996,"byte_end":13008007,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":11085},{"krate":0,"index":11086},{"krate":0,"index":11087}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11024},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by_key.rs","byte_start":13009420,"byte_end":13009434,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":11028},{"krate":0,"index":11029},{"krate":0,"index":11030}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10979},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min.rs","byte_start":13011074,"byte_end":13011083,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":10982},{"krate":0,"index":10983}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10922},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by.rs","byte_start":13012348,"byte_end":13012359,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":10926},{"krate":0,"index":10927},{"krate":0,"index":10928}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10865},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by_key.rs","byte_start":13013798,"byte_end":13013812,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":10869},{"krate":0,"index":10870},{"krate":0,"index":10871}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10820},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ne.rs","byte_start":13015572,"byte_end":13015580,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":10823},{"krate":0,"index":10824}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1168},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/next.rs","byte_start":13016880,"byte_end":13016890,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":1171}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/next.rs","byte_start":13016829,"byte_end":13016868,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1193},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/nth.rs","byte_start":13017370,"byte_end":13017379,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/nth.rs","byte_start":13017319,"byte_end":13017358,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10767},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partial_cmp.rs","byte_start":13018633,"byte_end":13018649,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":10770},{"krate":0,"index":10771},{"krate":0,"index":10772},{"krate":0,"index":10773}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1264},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/position.rs","byte_start":13021378,"byte_end":13021392,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/position.rs","byte_start":13021327,"byte_end":13021366,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10709},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/scan.rs","byte_start":13022864,"byte_end":13022868,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":10713},{"krate":0,"index":10714}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10669},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip.rs","byte_start":13024084,"byte_end":13024088,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10671},{"krate":0,"index":10672}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10620},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip_while.rs","byte_start":13025303,"byte_end":13025312,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10623},{"krate":0,"index":10624}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10576},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/step_by.rs","byte_start":13026846,"byte_end":13026852,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":10578},{"krate":0,"index":10579},{"krate":0,"index":10580}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10533},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take.rs","byte_start":13028255,"byte_end":13028259,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10535},{"krate":0,"index":10536}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10484},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take_while.rs","byte_start":13029494,"byte_end":13029503,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10487},{"krate":0,"index":10488}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1458},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_fold.rs","byte_start":13030512,"byte_end":13030525,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_fold.rs","byte_start":13030461,"byte_end":13030500,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_for_each.rs","byte_start":13031852,"byte_end":13031868,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_for_each.rs","byte_start":13031801,"byte_end":13031840,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10435},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/zip.rs","byte_start":13033226,"byte_end":13033229,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":10438},{"krate":0,"index":10439},{"krate":0,"index":10440}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10398},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/count.rs","byte_start":13237475,"byte_end":13237486,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"name":"CountFuture","qualname":"::stream::stream::count::CountFuture","value":"CountFuture {  }","parent":null,"children":[{"krate":0,"index":10400},{"krate":0,"index":10401}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10349},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/merge.rs","byte_start":13238788,"byte_end":13238793,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":10352},{"krate":0,"index":10353}],"decl_id":null,"docs":" A stream that merges two other streams into a single stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10312},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flatten.rs","byte_start":13240529,"byte_end":13240536,"line_start":18,"line_end":18,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":10314},{"krate":0,"index":10315}],"decl_id":null,"docs":" A stream that flattens one level of nesting in an stream of things that can be turned into\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10259},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flat_map.rs","byte_start":13242674,"byte_end":13242681,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"name":"FlatMap","qualname":"::stream::stream::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":10263},{"krate":0,"index":10264}],"decl_id":null,"docs":" A stream that maps each element to a stream, and yields the elements of the produced\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10197},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partition.rs","byte_start":13244181,"byte_end":13244196,"line_start":13,"line_end":13,"column_start":16,"column_end":31},"name":"PartitionFuture","qualname":"::stream::stream::partition::PartitionFuture","value":"PartitionFuture {  }","parent":null,"children":[{"krate":0,"index":10201},{"krate":0,"index":10202},{"krate":0,"index":10203}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10153},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13245656,"byte_end":13245663,"line_start":16,"line_end":16,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":10155},{"krate":0,"index":10156},{"krate":0,"index":10157}],"decl_id":null,"docs":" A stream with timeout time set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3069},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13246871,"byte_end":13246883,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::stream::stream::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":3070}],"decl_id":null,"docs":" An error returned when a stream times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a stream times out.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13246666,"byte_end":13246712,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13246763,"byte_end":13246814,"line_start":56,"line_end":56,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10108},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/throttle.rs","byte_start":13247681,"byte_end":13247689,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::stream::stream::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":10110},{"krate":0,"index":10111},{"krate":0,"index":10112},{"krate":0,"index":10113}],"decl_id":null,"docs":" A stream that only yields one element once every `duration`.","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10067},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/delay.rs","byte_start":13249193,"byte_end":13249198,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Delay","qualname":"::stream::stream::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":10069},{"krate":0,"index":10070},{"krate":0,"index":10071}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10004},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/unzip.rs","byte_start":13250181,"byte_end":13250192,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"UnzipFuture","qualname":"::stream::stream::unzip::UnzipFuture","value":"UnzipFuture {  }","parent":null,"children":[{"krate":0,"index":10008},{"krate":0,"index":10009}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3097},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12913949,"byte_end":12913958,"line_start":237,"line_end":237,"column_start":15,"column_end":24},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3111},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3120},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3133},{"krate":0,"index":3136},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3148},{"krate":0,"index":3150},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3159},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3168},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3177},{"krate":0,"index":3180},{"krate":0,"index":3182},{"krate":0,"index":3187},{"krate":0,"index":3190},{"krate":0,"index":3192},{"krate":0,"index":3194},{"krate":0,"index":3196},{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3201},{"krate":0,"index":3203},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3214}],"decl_id":null,"docs":"        Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12914793,"byte_end":12914797,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> NextFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12915477,"byte_end":12915481,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12916210,"byte_end":12916220,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<P>(Self, P) -> TakeWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12917539,"byte_end":12917547,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"throttle","qualname":"::stream::stream::StreamExt::throttle","value":"pub fn throttle(Self, Duration) -> Throttle<Self> where Self: Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Limit the amount of items yielded per timeslice in a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12917441,"byte_end":12917469,"line_start":358,"line_end":358,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12918461,"byte_end":12918468,"line_start":396,"line_end":396,"column_start":12,"column_end":19},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"pub fn step_by(Self, usize) -> StepBy<Self> where Self: Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12919388,"byte_end":12919393,"line_start":430,"line_end":430,"column_start":12,"column_end":17},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12920277,"byte_end":12920283,"line_start":464,"line_end":464,"column_start":12,"column_end":18},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Clone + 'a","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12921149,"byte_end":12921155,"line_start":497,"line_end":497,"column_start":12,"column_end":18},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Copy + 'a","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12921999,"byte_end":12922004,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Clone + Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12922914,"byte_end":12922923,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12924254,"byte_end":12924259,"line_start":603,"line_end":603,"column_start":12,"column_end":17},"name":"delay","qualname":"::stream::stream::StreamExt::delay","value":"pub fn delay(Self, std::time::Duration) -> Delay<Self> where Self: Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates a stream that is delayed before it starts yielding items.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12924133,"byte_end":12924184,"line_start":601,"line_end":601,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12925080,"byte_end":12925083,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<B, F>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> B","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12926023,"byte_end":12926030,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> ()","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            A combinator that does something with each element in the stream, passing the value\n            on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12927079,"byte_end":12927083,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"pub fn last(Self) -> LastFuture<Self, Self::Item> where Self: Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12928042,"byte_end":12928046,"line_start":745,"line_end":745,"column_start":12,"column_end":16},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12928812,"byte_end":12928818,"line_start":775,"line_end":775,"column_start":12,"column_end":18},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12930034,"byte_end":12930042,"line_start":815,"line_end":815,"column_start":12,"column_end":20},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where Self: Sized,\nU: IntoStream, F: FnMut(Self::Item) -> U","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates an stream that works like map, but flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12929936,"byte_end":12929964,"line_start":813,"line_end":813,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12930955,"byte_end":12930962,"line_start":849,"line_end":849,"column_start":12,"column_end":19},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self: Sized,\nSelf::Item: IntoStream","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates an stream that flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12930857,"byte_end":12930885,"line_start":847,"line_end":847,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12931942,"byte_end":12931952,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<B, F>(Self, F) -> FilterMap<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12932941,"byte_end":12932951,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"pub fn min_by_key<B, F>(Self, F) -> MinByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Returns the element that gives the minimum value with respect to the\n            specified key function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12934070,"byte_end":12934080,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"pub fn max_by_key<B, F>(Self, F) -> MaxByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Returns the element that gives the maximum value with respect to the\n            specified key function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12935284,"byte_end":12935290,"line_start":997,"line_end":997,"column_start":12,"column_end":18},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"pub fn min_by<F>(Self, F) -> MinByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Returns the element that gives the minimum value with respect to the\n            specified comparison function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12936301,"byte_end":12936304,"line_start":1031,"line_end":1031,"column_start":12,"column_end":15},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"pub fn max(Self) -> MaxFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Returns the element that gives the maximum value. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12937249,"byte_end":12937252,"line_start":1064,"line_end":1064,"column_start":12,"column_end":15},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"pub fn min(Self) -> MinFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Returns the element that gives the minimum value. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3143},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12938379,"byte_end":12938385,"line_start":1101,"line_end":1101,"column_start":12,"column_end":18},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"pub fn max_by<F>(Self, F) -> MaxByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Returns the element that gives the maximum value with respect to the\n            specified comparison function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3145},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12940110,"byte_end":12940113,"line_start":1165,"line_end":1165,"column_start":12,"column_end":15},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"pub fn nth(&mut Self, usize) -> NthFuture<, Self> where Self: Unpin + Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12941703,"byte_end":12941706,"line_start":1221,"line_end":1221,"column_start":12,"column_end":15},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12941682,"byte_end":12941691,"line_start":1220,"line_end":1220,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12942991,"byte_end":12942995,"line_start":1270,"line_end":1270,"column_start":12,"column_end":16},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"pub fn find<P>(&mut Self, P) -> FindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3150},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12943816,"byte_end":12943824,"line_start":1298,"line_end":1298,"column_start":12,"column_end":20},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"pub fn find_map<F, B>(&mut Self, F) -> FindMapFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12944684,"byte_end":12944688,"line_start":1331,"line_end":1331,"column_start":12,"column_end":16},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            A combinator that applies a function to every element in a stream\n            producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12945705,"byte_end":12945714,"line_start":1369,"line_end":1369,"column_start":12,"column_end":21},"name":"partition","qualname":"::stream::stream::StreamExt::partition","value":"pub fn partition<B, F>(Self, F) -> PartitionFuture<Self, F, B> where\nSelf: Sized, F: FnMut(&Self::Item) -> bool, B: Default + Extend<Self::Item>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            A combinator that applies a function to every element in a stream\n            creating two collections from it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12945607,"byte_end":12945635,"line_start":1367,"line_end":1367,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12946671,"byte_end":12946679,"line_start":1405,"line_end":1405,"column_start":12,"column_end":20},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<F>(Self, F) -> ForEachFuture<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> ()","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12948272,"byte_end":12948275,"line_start":1461,"line_end":1461,"column_start":12,"column_end":15},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12948251,"byte_end":12948260,"line_start":1460,"line_end":1460,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12949885,"byte_end":12949891,"line_start":1516,"line_end":1516,"column_start":12,"column_end":18},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Borrows an stream, rather than consuming it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12949787,"byte_end":12949815,"line_start":1514,"line_end":1514,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12951291,"byte_end":12951295,"line_start":1557,"line_end":1557,"column_start":12,"column_end":16},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<St, B, F>(Self, St, F) -> Scan<Self, St, F> where Self: Sized,\nF: FnMut(&mut St, Self::Item) -> Option<B>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            A stream adaptor similar to [`fold`] that holds internal state and produces a new\n            stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12951270,"byte_end":12951279,"line_start":1556,"line_end":1556,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12952415,"byte_end":12952425,"line_start":1592,"line_end":1592,"column_start":12,"column_end":22},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<P>(Self, P) -> SkipWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12953174,"byte_end":12953178,"line_start":1620,"line_end":1620,"column_start":12,"column_end":16},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12954390,"byte_end":12954397,"line_start":1661,"line_end":1661,"column_start":12,"column_end":19},"name":"timeout","qualname":"::stream::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Stream + Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Await a stream or times out after a duration of time.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12954269,"byte_end":12954320,"line_start":1659,"line_end":1659,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12955367,"byte_end":12955375,"line_start":1696,"line_end":1696,"column_start":12,"column_end":20},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"pub fn try_fold<B, F, T, E>(&mut Self, T, F) -> TryFoldFuture<, Self, F, T>\nwhere Self: Unpin + Sized, F: FnMut(B, Self::Item) -> Result<T, E>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12956670,"byte_end":12956682,"line_start":1742,"line_end":1742,"column_start":12,"column_end":24},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"pub fn try_for_each<F, E>(&mut Self, F) -> TryForEachFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Result<(), E>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12958389,"byte_end":12958392,"line_start":1790,"line_end":1790,"column_start":12,"column_end":15},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<U>(Self, U) -> Zip<Self, U> where Self: Sized, U: Stream","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12958368,"byte_end":12958377,"line_start":1789,"line_end":1789,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12959476,"byte_end":12959481,"line_start":1827,"line_end":1827,"column_start":12,"column_end":17},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> UnzipFuture<Self, FromA, FromB>\nwhere FromA: Default + Extend<A>, FromB: Default + Extend<B>,\nSelf: Stream<Item = (A, B)> + Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Converts an stream of pairs into a pair of containers.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12959378,"byte_end":12959406,"line_start":1825,"line_end":1825,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12961864,"byte_end":12961871,"line_start":1889,"line_end":1889,"column_start":12,"column_end":19},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<'a, B>(Self) -> Pin<Box<dyn Future<Output = B> + Send + 'a>>\nwhere Self: Sized + 'a + Send, B: FromStream<Self::Item>, Self::Item: Send","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Transforms a stream into a collection.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12961766,"byte_end":12961794,"line_start":1887,"line_end":1887,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12963099,"byte_end":12963104,"line_start":1927,"line_end":1927,"column_start":12,"column_end":17},"name":"merge","qualname":"::stream::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Combines multiple streams into a single stream of all their outputs.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12963001,"byte_end":12963029,"line_start":1925,"line_end":1925,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12964369,"byte_end":12964380,"line_start":1962,"line_end":1962,"column_start":12,"column_end":23},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"pub fn partial_cmp<S>(Self, S) -> PartialCmpFuture<Self, S> where\nSelf: Sized + Stream, S: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Lexicographically compares the elements of this `Stream` with those\n            of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12965541,"byte_end":12965549,"line_start":2002,"line_end":2002,"column_start":12,"column_end":20},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"pub fn position<P>(&mut Self, P) -> PositionFuture<, Self, P> where\nSelf: Unpin + Sized, P: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Searches for an element in a Stream that satisfies a predicate, returning\n            its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12966867,"byte_end":12966870,"line_start":2040,"line_end":2040,"column_start":12,"column_end":15},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"pub fn cmp<S>(Self, S) -> CmpFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: Ord","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Lexicographically compares the elements of this `Stream` with those\n            of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12967778,"byte_end":12967783,"line_start":2074,"line_end":2074,"column_start":12,"column_end":17},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> CountFuture<Self> where Self: Sized","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Counts the number of elements in the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12967680,"byte_end":12967708,"line_start":2072,"line_end":2072,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12968884,"byte_end":12968886,"line_start":2106,"line_end":2106,"column_start":12,"column_end":14},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"pub fn ne<S>(Self, S) -> NeFuture<Self, S> where Self: Sized, S: Sized +\nStream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12970110,"byte_end":12970112,"line_start":2143,"line_end":2143,"column_start":12,"column_end":14},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"pub fn ge<S>(Self, S) -> GeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12971328,"byte_end":12971330,"line_start":2180,"line_end":2180,"column_start":12,"column_end":14},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"pub fn eq<S>(Self, S) -> EqFuture<Self, S> where Self: Sized + Stream,\nS: Sized + Stream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12972544,"byte_end":12972546,"line_start":2217,"line_end":2217,"column_start":12,"column_end":14},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"pub fn gt<S>(Self, S) -> GtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12973756,"byte_end":12973758,"line_start":2254,"line_end":2254,"column_start":12,"column_end":14},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"pub fn le<S>(Self, S) -> LeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12974962,"byte_end":12974964,"line_start":2291,"line_end":2291,"column_start":12,"column_end":14},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"pub fn lt<S>(Self, S) -> LtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            less than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12976194,"byte_end":12976197,"line_start":2336,"line_end":2336,"column_start":12,"column_end":15},"name":"sum","qualname":"::stream::stream::StreamExt::sum","value":"pub fn sum<'a, S>(Self) -> Pin<Box<dyn Future<Output = S> + 'a>> where\nSelf: Sized + Stream<Item = S> + 'a, S: Sum<Self::Item>","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Sums the elements of a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12976096,"byte_end":12976124,"line_start":2334,"line_end":2334,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12977578,"byte_end":12977585,"line_start":2382,"line_end":2382,"column_start":12,"column_end":19},"name":"product","qualname":"::stream::stream::StreamExt::product","value":"pub fn product<'a, P>(Self) -> Pin<Box<dyn Future<Output = P> + 'a>> where\nSelf: Sized + Stream<Item = P> + 'a, P: Product","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"            Multiplies all elements of the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12977480,"byte_end":12977508,"line_start":2380,"line_end":2380,"column_start":9,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1707},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035102,"byte_end":13035107,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034671,"byte_end":13034721,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034722,"byte_end":13034725,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034726,"byte_end":13034789,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034790,"byte_end":13034817,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034818,"byte_end":13034821,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034822,"byte_end":13034850,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034851,"byte_end":13034854,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034855,"byte_end":13034869,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034870,"byte_end":13034873,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034874,"byte_end":13034881,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034882,"byte_end":13034921,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034922,"byte_end":13034927,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034928,"byte_end":13034958,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034959,"byte_end":13034985,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034986,"byte_end":13034989,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13034990,"byte_end":13035029,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035030,"byte_end":13035033,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035034,"byte_end":13035071,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035072,"byte_end":13035077,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035078,"byte_end":13035086,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035087,"byte_end":13035094,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3217},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035344,"byte_end":13035349,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3219}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035178,"byte_end":13035220,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035221,"byte_end":13035224,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035225,"byte_end":13035282,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035283,"byte_end":13035286,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035287,"byte_end":13035315,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3223},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035869,"byte_end":13035875,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":3225}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035645,"byte_end":13035700,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035701,"byte_end":13035704,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035705,"byte_end":13035768,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035769,"byte_end":13035796,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035797,"byte_end":13035800,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035801,"byte_end":13035833,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1729},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036735,"byte_end":13036742,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"pub fn from_fn<T, F>(F) -> FromFn<F> where F: FnMut() -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035926,"byte_end":13036014,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036015,"byte_end":13036018,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036019,"byte_end":13036109,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036110,"byte_end":13036191,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036192,"byte_end":13036195,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036196,"byte_end":13036210,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036211,"byte_end":13036214,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036215,"byte_end":13036222,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036223,"byte_end":13036262,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036263,"byte_end":13036268,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036269,"byte_end":13036299,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036300,"byte_end":13036326,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036327,"byte_end":13036330,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036331,"byte_end":13036355,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036356,"byte_end":13036388,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036389,"byte_end":13036408,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036409,"byte_end":13036431,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036432,"byte_end":13036448,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036449,"byte_end":13036465,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036466,"byte_end":13036489,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036490,"byte_end":13036499,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036500,"byte_end":13036507,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036508,"byte_end":13036511,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036512,"byte_end":13036539,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036540,"byte_end":13036543,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036544,"byte_end":13036584,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036585,"byte_end":13036625,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036626,"byte_end":13036666,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036667,"byte_end":13036704,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036705,"byte_end":13036710,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036711,"byte_end":13036719,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036720,"byte_end":13036727,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9965},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037551,"byte_end":13037559,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":9967}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1757},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13038059,"byte_end":13038068,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"pub fn from_iter<I: IntoIterator>(I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037591,"byte_end":13037630,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037631,"byte_end":13037634,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037635,"byte_end":13037649,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037650,"byte_end":13037653,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037654,"byte_end":13037661,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037662,"byte_end":13037701,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037702,"byte_end":13037707,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037708,"byte_end":13037738,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037739,"byte_end":13037765,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037766,"byte_end":13037769,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037770,"byte_end":13037822,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037823,"byte_end":13037826,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037827,"byte_end":13037867,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037868,"byte_end":13037908,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037909,"byte_end":13037949,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037950,"byte_end":13037990,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13037991,"byte_end":13038028,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13038029,"byte_end":13038034,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13038035,"byte_end":13038043,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13038044,"byte_end":13038051,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1786},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039154,"byte_end":13039158,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13038821,"byte_end":13038868,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13038869,"byte_end":13038872,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13038873,"byte_end":13038887,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13038888,"byte_end":13038891,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13038892,"byte_end":13038899,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13038900,"byte_end":13038939,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13038940,"byte_end":13038945,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13038946,"byte_end":13038976,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13038977,"byte_end":13039003,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039004,"byte_end":13039007,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039008,"byte_end":13039040,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039041,"byte_end":13039044,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039045,"byte_end":13039085,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039086,"byte_end":13039123,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039124,"byte_end":13039129,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039130,"byte_end":13039138,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039139,"byte_end":13039146,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9926},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039458,"byte_end":13039462,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9928}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1809},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040348,"byte_end":13040354,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13039999,"byte_end":13040057,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040058,"byte_end":13040061,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040062,"byte_end":13040076,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040077,"byte_end":13040080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040081,"byte_end":13040088,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040089,"byte_end":13040128,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040129,"byte_end":13040134,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040135,"byte_end":13040165,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040166,"byte_end":13040192,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040193,"byte_end":13040196,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040197,"byte_end":13040231,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040232,"byte_end":13040235,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040236,"byte_end":13040276,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040277,"byte_end":13040317,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040318,"byte_end":13040323,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040324,"byte_end":13040332,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040333,"byte_end":13040340,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3232},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040641,"byte_end":13040647,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3234}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040425,"byte_end":13040475,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040476,"byte_end":13040479,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040480,"byte_end":13040542,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040543,"byte_end":13040570,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040571,"byte_end":13040574,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040575,"byte_end":13040605,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3241},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041223,"byte_end":13041233,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":3243}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13040954,"byte_end":13041042,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041043,"byte_end":13041046,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041047,"byte_end":13041114,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041115,"byte_end":13041142,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041143,"byte_end":13041146,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041147,"byte_end":13041187,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1831},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042339,"byte_end":13042350,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<T, F>(F) -> RepeatWith<F> where F: FnMut() -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041288,"byte_end":13041390,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041391,"byte_end":13041394,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041395,"byte_end":13041409,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041410,"byte_end":13041413,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041414,"byte_end":13041430,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041431,"byte_end":13041434,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041435,"byte_end":13041442,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041443,"byte_end":13041482,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041483,"byte_end":13041488,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041489,"byte_end":13041519,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041520,"byte_end":13041546,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041547,"byte_end":13041550,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041551,"byte_end":13041589,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041590,"byte_end":13041593,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041594,"byte_end":13041621,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041622,"byte_end":13041625,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041626,"byte_end":13041666,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041667,"byte_end":13041707,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041708,"byte_end":13041748,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041749,"byte_end":13041789,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041790,"byte_end":13041798,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041799,"byte_end":13041806,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041807,"byte_end":13041810,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041811,"byte_end":13041828,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041829,"byte_end":13041832,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041833,"byte_end":13041840,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041841,"byte_end":13041880,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041881,"byte_end":13041886,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041887,"byte_end":13041917,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041918,"byte_end":13041944,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041945,"byte_end":13041948,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041949,"byte_end":13041967,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041968,"byte_end":13042004,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042005,"byte_end":13042026,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042027,"byte_end":13042042,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042043,"byte_end":13042055,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042056,"byte_end":13042062,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042063,"byte_end":13042076,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042077,"byte_end":13042080,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042081,"byte_end":13042108,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042109,"byte_end":13042112,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042113,"byte_end":13042153,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042154,"byte_end":13042194,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042195,"byte_end":13042235,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042236,"byte_end":13042276,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042277,"byte_end":13042314,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042315,"byte_end":13042323,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042324,"byte_end":13042331,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3281},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/next_back.rs","byte_start":13258506,"byte_end":13258520,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"NextBackFuture","qualname":"::stream::double_ended_stream::next_back::NextBackFuture","value":"NextBackFuture {  }","parent":null,"children":[{"krate":0,"index":3284}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/next_back.rs","byte_start":13258455,"byte_end":13258494,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3306},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13259031,"byte_end":13259044,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"NthBackFuture","qualname":"::stream::double_ended_stream::nth_back::NthBackFuture","value":"NthBackFuture {  }","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13258980,"byte_end":13259019,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3337},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfind.rs","byte_start":13260053,"byte_end":13260064,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"RFindFuture","qualname":"::stream::double_ended_stream::rfind::RFindFuture","value":"RFindFuture {  }","parent":null,"children":[{"krate":0,"index":3341},{"krate":0,"index":3342}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfind.rs","byte_start":13260002,"byte_end":13260041,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9869},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfold.rs","byte_start":13261150,"byte_end":13261161,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"RFoldFuture","qualname":"::stream::double_ended_stream::rfold::RFoldFuture","value":"RFoldFuture {  }","parent":null,"children":[{"krate":0,"index":9873},{"krate":0,"index":9874},{"krate":0,"index":9875}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9812},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13262388,"byte_end":13262402,"line_start":12,"line_end":12,"column_start":16,"column_end":30},"name":"TryRFoldFuture","qualname":"::stream::double_ended_stream::try_rfold::TryRFoldFuture","value":"TryRFoldFuture {  }","parent":null,"children":[{"krate":0,"index":9816},{"krate":0,"index":9817},{"krate":0,"index":9818}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3435},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251976,"byte_end":13251993,"line_start":27,"line_end":27,"column_start":11,"column_end":28},"name":"DoubleEndedStream","qualname":"::stream::double_ended_stream::DoubleEndedStream","value":"DoubleEndedStream: Stream","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3441},{"krate":0,"index":3444}],"decl_id":null,"docs":" A stream able to yield elements from both ends.","sig":null,"attributes":[{"value":"/ A stream able to yield elements from both ends.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251597,"byte_end":13251648,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251649,"byte_end":13251652,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Something that implements `DoubleEndedStream` has one extra capability","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251653,"byte_end":13251727,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ over something that implements [`Stream`]: the ability to also take","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251728,"byte_end":13251799,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ `Item`s from the back, as well as the front.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251800,"byte_end":13251848,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251849,"byte_end":13251852,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251853,"byte_end":13251886,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251887,"byte_end":13251915,"line_start":25,"line_end":25,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13254221,"byte_end":13254235,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"poll_next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::poll_next_back","value":"pub fn poll_next_back(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"        Attempts to receive the next item from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13255127,"byte_end":13255136,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::next_back","value":"pub fn next_back(&mut Self) -> NextBackFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13255779,"byte_end":13255787,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"nth_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::nth_back","value":"pub fn nth_back(&mut Self, usize) -> NthBackFuture<, Self> where Self: Unpin +\nSized","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"            Returns the nth element from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13256469,"byte_end":13256474,"line_start":175,"line_end":175,"column_start":8,"column_end":13},"name":"rfind","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfind","value":"pub fn rfind<P>(&mut Self, P) -> RFindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"            Returns the first element from the right that matches the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13257108,"byte_end":13257113,"line_start":203,"line_end":203,"column_start":8,"column_end":13},"name":"rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfold","value":"pub fn rfold<B, F>(Self, B, F) -> RFoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"            # Examples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13258110,"byte_end":13258119,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::try_rfold","value":"pub fn try_rfold<B, F, E>(Self, B, F) -> TryRFoldFuture<Self, F, B> where\nSelf: Sized, F: FnMut(B, Self::Item) -> Result<B, E>","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3452},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265972,"byte_end":13265987,"line_start":81,"line_end":81,"column_start":11,"column_end":26},"name":"ExactSizeStream","qualname":"::stream::exact_size_stream::ExactSizeStream","value":"ExactSizeStream: Stream","parent":null,"children":[{"krate":0,"index":3453}],"decl_id":null,"docs":" A stream that knows its exact length.","sig":null,"attributes":[{"value":"/ A stream that knows its exact length.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13263577,"byte_end":13263618,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13263619,"byte_end":13263622,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Many [`Stream`]s don't know how many times they will iterate, but some do.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13263623,"byte_end":13263701,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ If a stream knows how many times it can iterate, providing access to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13263702,"byte_end":13263774,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ that information can be useful. For example, if you want to iterate","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13263775,"byte_end":13263846,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ backwards, a good start is to know where the end is.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13263847,"byte_end":13263903,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13263904,"byte_end":13263907,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ When implementing an `ExactSizeStream`, you must also implement","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13263908,"byte_end":13263975,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`Stream`]. When doing so, the implementation of [`size_hint`] *must*","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13263976,"byte_end":13264049,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ return the exact size of the stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264050,"byte_end":13264090,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264091,"byte_end":13264094,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264095,"byte_end":13264128,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264129,"byte_end":13264182,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264183,"byte_end":13264186,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The [`len`] method has a default implementation, so you usually shouldn't","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264187,"byte_end":13264264,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ implement it. However, you may be able to provide a more performant","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264265,"byte_end":13264336,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ implementation than the default, so overriding it in this case makes sense.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264337,"byte_end":13264416,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264417,"byte_end":13264420,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`len`]: #method.len","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264421,"byte_end":13264445,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264446,"byte_end":13264449,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264450,"byte_end":13264464,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264465,"byte_end":13264468,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264469,"byte_end":13264485,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264486,"byte_end":13264489,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264490,"byte_end":13264497,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264498,"byte_end":13264564,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264565,"byte_end":13264585,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264586,"byte_end":13264589,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264590,"byte_end":13264620,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264621,"byte_end":13264628,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264629,"byte_end":13264632,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ In the [module level docs][moddocs], we implemented an [`Stream`],","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264633,"byte_end":13264703,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ `Counter`. Let's implement `ExactSizeStream` for it as well:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264704,"byte_end":13264768,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264769,"byte_end":13264772,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [moddocs]: index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264773,"byte_end":13264798,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264799,"byte_end":13264802,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264803,"byte_end":13264810,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264811,"byte_end":13264848,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264849,"byte_end":13264873,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264874,"byte_end":13264906,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ # struct Counter {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264907,"byte_end":13264929,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ #     count: usize,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264930,"byte_end":13264953,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264954,"byte_end":13264961,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # impl Counter {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264962,"byte_end":13264982,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/ #     fn new() -> Counter {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13264983,"byte_end":13265014,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ #         Counter { count: 0 }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265015,"byte_end":13265049,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265050,"byte_end":13265061,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265062,"byte_end":13265069,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ # impl Stream for Counter {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265070,"byte_end":13265101,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ #     type Item = usize;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265102,"byte_end":13265130,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ #     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265131,"byte_end":13265232,"line_start":53,"line_end":53,"column_start":1,"column_end":102}},{"value":"/ #         self.count += 1;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265233,"byte_end":13265263,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ #         if self.count < 6 {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265264,"byte_end":13265297,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/ #             Poll::Ready(Some(self.count))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265298,"byte_end":13265345,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #         } else {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265346,"byte_end":13265368,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/ #             Poll::Ready(None)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265369,"byte_end":13265404,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ #         }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265405,"byte_end":13265420,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/ #     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265421,"byte_end":13265432,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265433,"byte_end":13265440,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265441,"byte_end":13265480,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265481,"byte_end":13265486,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ impl ExactSizeStream for Counter {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265487,"byte_end":13265525,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/     // We can easily calculate the remaining number of iterations.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265526,"byte_end":13265596,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/     fn len(&self) -> usize {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265597,"byte_end":13265629,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/         5 - self.count","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265630,"byte_end":13265656,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265657,"byte_end":13265666,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265667,"byte_end":13265672,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265673,"byte_end":13265676,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265677,"byte_end":13265706,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265707,"byte_end":13265710,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let counter = Counter::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265711,"byte_end":13265744,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265745,"byte_end":13265748,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, counter.len());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265749,"byte_end":13265782,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265783,"byte_end":13265792,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265793,"byte_end":13265800,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265801,"byte_end":13265839,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265883,"byte_end":13265911,"line_start":79,"line_end":79,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3453},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266765,"byte_end":13266768,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"len","qualname":"::stream::exact_size_stream::ExactSizeStream::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":3452},"children":[],"decl_id":null,"docs":" Returns the exact number of times the stream will iterate.","sig":null,"attributes":[{"value":"/ Returns the exact number of times the stream will iterate.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266002,"byte_end":13266064,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266069,"byte_end":13266072,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method has a default implementation, so you usually should not","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266077,"byte_end":13266148,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ implement it directly. However, if you can provide a more efficient","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266153,"byte_end":13266224,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ implementation, you can do so. See the [trait-level] docs for an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266229,"byte_end":13266297,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ example.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266302,"byte_end":13266314,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266319,"byte_end":13266322,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function has the same safety guarantees as the [`size_hint`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266327,"byte_end":13266396,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/ function.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266401,"byte_end":13266414,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266419,"byte_end":13266422,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [trait-level]: trait.ExactSizeStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266427,"byte_end":13266472,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266477,"byte_end":13266530,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266535,"byte_end":13266538,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266543,"byte_end":13266557,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266562,"byte_end":13266565,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266570,"byte_end":13266586,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266591,"byte_end":13266594,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266599,"byte_end":13266606,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266611,"byte_end":13266677,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266682,"byte_end":13266702,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266707,"byte_end":13266710,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266715,"byte_end":13266745,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13266750,"byte_end":13266757,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3467},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268295,"byte_end":13268301,"line_start":32,"line_end":32,"column_start":11,"column_end":17},"name":"Extend","qualname":"::stream::extend::Extend","value":"Extend<A>","parent":null,"children":[{"krate":0,"index":3469}],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267366,"byte_end":13267421,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267422,"byte_end":13267425,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267426,"byte_end":13267524,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ series of values. The `Extend` trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267525,"byte_end":13267619,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267620,"byte_end":13267716,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267717,"byte_end":13267816,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267817,"byte_end":13267869,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267870,"byte_end":13267873,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267874,"byte_end":13267889,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267890,"byte_end":13267893,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267894,"byte_end":13267901,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267902,"byte_end":13267941,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267942,"byte_end":13267947,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267948,"byte_end":13267978,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13267979,"byte_end":13268005,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268006,"byte_end":13268009,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268010,"byte_end":13268049,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268050,"byte_end":13268093,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ stream::Extend::extend(&mut v, s).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268094,"byte_end":13268138,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268139,"byte_end":13268142,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268143,"byte_end":13268182,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268183,"byte_end":13268188,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268189,"byte_end":13268197,"line_start":28,"line_end":28,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268198,"byte_end":13268205,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268206,"byte_end":13268234,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268374,"byte_end":13268380,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"extend","qualname":"::stream::extend::Extend::extend","value":"pub fn extend<'a, T: IntoStream<Item = A> + 'a>(&'a mut Self, T)\n-> Pin<Box<dyn Future<Output = ()> + Send + 'a>> where\n<T as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":3467},"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.\n","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268311,"byte_end":13268366,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":3472},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269534,"byte_end":13269540,"line_start":70,"line_end":70,"column_start":14,"column_end":20},"name":"extend","qualname":"::stream::extend::extend","value":"pub async fn extend<'a, C, T, S, '_>(&'_ mut C, S) -> /*impl Trait*/ where\nC: Extend<T>, S: IntoStream<Item = T> + 'a,\n<S as IntoStream>::IntoStream: Send","parent":null,"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268570,"byte_end":13268625,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268626,"byte_end":13268629,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268630,"byte_end":13268728,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ series of values. The [`Extend`] trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268729,"byte_end":13268825,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268826,"byte_end":13268922,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13268923,"byte_end":13269022,"line_start":47,"line_end":47,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269023,"byte_end":13269075,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269076,"byte_end":13269079,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Extend`]: trait.Extend.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269080,"byte_end":13269113,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269114,"byte_end":13269117,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269118,"byte_end":13269133,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269134,"byte_end":13269137,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269138,"byte_end":13269145,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269146,"byte_end":13269185,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269186,"byte_end":13269191,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269192,"byte_end":13269222,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269223,"byte_end":13269249,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269250,"byte_end":13269253,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269254,"byte_end":13269293,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269294,"byte_end":13269337,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ stream::extend(&mut v, s).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269338,"byte_end":13269374,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269375,"byte_end":13269378,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269379,"byte_end":13269418,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269419,"byte_end":13269424,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269425,"byte_end":13269433,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269434,"byte_end":13269441,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/extend.rs","byte_start":13269442,"byte_end":13269470,"line_start":68,"line_end":68,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3489},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272720,"byte_end":13272730,"line_start":118,"line_end":118,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::from_stream::FromStream","value":"FromStream<T: Send>","parent":null,"children":[{"krate":0,"index":3491}],"decl_id":null,"docs":" Conversion from a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion from a `Stream`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13269813,"byte_end":13269844,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13269845,"byte_end":13269848,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ By implementing `FromStream` for a type, you define how it will be created from a stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13269849,"byte_end":13269942,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ This is common for types which describe a collection of some kind.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13269943,"byte_end":13270013,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270014,"byte_end":13270017,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See also: [`IntoStream`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270018,"byte_end":13270047,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270048,"byte_end":13270051,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270052,"byte_end":13270066,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270067,"byte_end":13270070,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270071,"byte_end":13270087,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270088,"byte_end":13270091,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270092,"byte_end":13270099,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270100,"byte_end":13270174,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270175,"byte_end":13270180,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270181,"byte_end":13270211,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270212,"byte_end":13270258,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270259,"byte_end":13270262,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270263,"byte_end":13270310,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270311,"byte_end":13270314,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270315,"byte_end":13270362,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270363,"byte_end":13270366,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270367,"byte_end":13270406,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270407,"byte_end":13270412,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270413,"byte_end":13270430,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270431,"byte_end":13270438,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270439,"byte_end":13270442,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Using `collect` to  implicitly use `FromStream`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270443,"byte_end":13270494,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270495,"byte_end":13270498,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270499,"byte_end":13270506,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270507,"byte_end":13270581,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270582,"byte_end":13270587,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270588,"byte_end":13270618,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270619,"byte_end":13270645,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270646,"byte_end":13270693,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270694,"byte_end":13270697,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let v: Vec<i32> = five_fives.collect().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270698,"byte_end":13270747,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270748,"byte_end":13270751,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270752,"byte_end":13270791,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270792,"byte_end":13270797,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270798,"byte_end":13270815,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270816,"byte_end":13270823,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270824,"byte_end":13270827,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromStream` for your type:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270828,"byte_end":13270872,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270873,"byte_end":13270876,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270877,"byte_end":13270884,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270885,"byte_end":13270915,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream, IntoStream};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270916,"byte_end":13270974,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270975,"byte_end":13270997,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13270998,"byte_end":13271001,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // A sample collection, that's just a wrapper over Vec<T>","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271002,"byte_end":13271063,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271064,"byte_end":13271084,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/ struct MyCollection(Vec<i32>);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271085,"byte_end":13271119,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271120,"byte_end":13271123,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Let's give it some methods so we can create one and add things","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271124,"byte_end":13271193,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ // to it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271194,"byte_end":13271207,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ impl MyCollection {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271208,"byte_end":13271231,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/     fn new() -> MyCollection {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271232,"byte_end":13271266,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/         MyCollection(Vec::new())","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271267,"byte_end":13271303,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271304,"byte_end":13271313,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271314,"byte_end":13271317,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     fn add(&mut self, elem: i32) {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271318,"byte_end":13271356,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/         self.0.push(elem);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271357,"byte_end":13271387,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271388,"byte_end":13271397,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271398,"byte_end":13271403,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271404,"byte_end":13271407,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // and we'll implement FromIterator","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271408,"byte_end":13271447,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ impl FromStream<i32> for MyCollection {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271448,"byte_end":13271491,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/     fn from_stream<'a, S: IntoStream<Item = i32> + 'a>(","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271492,"byte_end":13271551,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/         stream: S,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271552,"byte_end":13271574,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/     ) -> Pin<Box<dyn Future<Output = Self> + 'a + Send>>","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271575,"byte_end":13271635,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/    where","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271636,"byte_end":13271648,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"/        <S as IntoStream>::IntoStream: Send,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271649,"byte_end":13271696,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/    {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271697,"byte_end":13271705,"line_start":78,"line_end":78,"column_start":1,"column_end":9}},{"value":"/         let stream = stream.into_stream();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271706,"byte_end":13271752,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271753,"byte_end":13271756,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/         Box::pin(async move {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271757,"byte_end":13271790,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/             let mut c = MyCollection::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271791,"byte_end":13271839,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271840,"byte_end":13271843,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/             let mut v = vec![];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271844,"byte_end":13271879,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/             stream::extend(&mut v, stream).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271880,"byte_end":13271933,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271934,"byte_end":13271937,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/             for i in v {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271938,"byte_end":13271966,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/                 c.add(i);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271967,"byte_end":13271996,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/             }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13271997,"byte_end":13272014,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/             c","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272015,"byte_end":13272032,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272033,"byte_end":13272047,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272048,"byte_end":13272057,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272058,"byte_end":13272063,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272064,"byte_end":13272067,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272068,"byte_end":13272142,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272143,"byte_end":13272148,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ // Now we can make a new stream...","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272149,"byte_end":13272187,"line_start":97,"line_end":97,"column_start":1,"column_end":39}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272188,"byte_end":13272231,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272232,"byte_end":13272235,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // ...and make a MyCollection out of it","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272236,"byte_end":13272279,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"/ let c = MyCollection::from_stream(stream).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272280,"byte_end":13272332,"line_start":101,"line_end":101,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272333,"byte_end":13272336,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272337,"byte_end":13272378,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272379,"byte_end":13272382,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // collect works too!","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272383,"byte_end":13272408,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272409,"byte_end":13272412,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272413,"byte_end":13272456,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ let c: MyCollection = stream.collect().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272457,"byte_end":13272506,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272507,"byte_end":13272510,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272511,"byte_end":13272552,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272553,"byte_end":13272558,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272559,"byte_end":13272576,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272577,"byte_end":13272584,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272585,"byte_end":13272588,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272589,"byte_end":13272630,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272631,"byte_end":13272659,"line_start":116,"line_end":116,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273255,"byte_end":13273266,"line_start":139,"line_end":139,"column_start":8,"column_end":19},"name":"from_stream","qualname":"::stream::from_stream::FromStream::from_stream","value":"pub fn from_stream<'a, S: IntoStream<Item = T> + 'a>(S)\n-> Pin<Box<dyn Future<Output = Self> + Send + 'a>> where\n<S as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":3489},"children":[],"decl_id":null,"docs":" Creates a value from a stream.","sig":null,"attributes":[{"value":"/ Creates a value from a stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272746,"byte_end":13272780,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272785,"byte_end":13272788,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272793,"byte_end":13272807,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272812,"byte_end":13272815,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272820,"byte_end":13272836,"line_start":123,"line_end":123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272841,"byte_end":13272844,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272849,"byte_end":13272856,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272861,"byte_end":13272935,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272940,"byte_end":13272945,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272950,"byte_end":13272980,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13272985,"byte_end":13273031,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273036,"byte_end":13273039,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273044,"byte_end":13273091,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273096,"byte_end":13273099,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273104,"byte_end":13273151,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273156,"byte_end":13273159,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273164,"byte_end":13273203,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273208,"byte_end":13273213,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273218,"byte_end":13273235,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_stream.rs","byte_start":13273240,"byte_end":13273247,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3498},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13274309,"byte_end":13274320,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::fused_stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[],"decl_id":null,"docs":" A stream that always continues to yield `None` when exhausted.","sig":null,"attributes":[{"value":"/ A stream that always continues to yield `None` when exhausted.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273464,"byte_end":13273530,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273531,"byte_end":13273534,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Calling next on a fused stream that has returned `None` once is guaranteed","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273535,"byte_end":13273613,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to return [`None`] again. This trait should be implemented by all streams","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273614,"byte_end":13273691,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ that behave this way because it allows optimizing [`Stream::fuse`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273692,"byte_end":13273763,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273764,"byte_end":13273767,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Note: In general, you should not use `FusedStream` in generic bounds if","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273768,"byte_end":13273843,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ you need a fused stream. Instead, you should just call [`Stream::fuse`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273844,"byte_end":13273919,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ on the stream. If the stream is already fused, the additional [`Fuse`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273920,"byte_end":13273994,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ wrapper will be a no-op with no performance penalty.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13273995,"byte_end":13274051,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13274052,"byte_end":13274055,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13274056,"byte_end":13274136,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`Stream::fuse`]: trait.Stream.html#method.fuse","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13274137,"byte_end":13274188,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Fuse`]: struct.Fuse.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13274189,"byte_end":13274219,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13274220,"byte_end":13274248,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3528},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275719,"byte_end":13275727,"line_start":46,"line_end":46,"column_start":8,"column_end":16},"name":"interval","qualname":"::stream::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that yields at a set interval.","sig":null,"attributes":[{"value":"/ Creates a new stream that yields at a set interval.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274568,"byte_end":13274623,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274624,"byte_end":13274627,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The stream first yields after `dur`, and continues to yield every","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274628,"byte_end":13274697,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ `dur` after that. The stream accounts for time elapsed between calls, and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274698,"byte_end":13274775,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ will adjust accordingly to prevent time skews.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274776,"byte_end":13274826,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274827,"byte_end":13274830,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each interval may be slightly longer than the specified duration, but never","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274831,"byte_end":13274910,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ less.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274911,"byte_end":13274920,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274921,"byte_end":13274924,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note that intervals are not intended for high resolution timers, but rather","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13274925,"byte_end":13275004,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ they will likely fire some granularity after the exact instant that they're","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275005,"byte_end":13275084,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ otherwise indicated to fire at.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275085,"byte_end":13275120,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275121,"byte_end":13275124,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::sleep`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275125,"byte_end":13275155,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275156,"byte_end":13275159,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: ../task/fn.sleep.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275160,"byte_end":13275202,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275203,"byte_end":13275206,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275207,"byte_end":13275221,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275222,"byte_end":13275225,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Basic example:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275226,"byte_end":13275244,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275245,"byte_end":13275248,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275249,"byte_end":13275262,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275263,"byte_end":13275293,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275294,"byte_end":13275320,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275321,"byte_end":13275349,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275350,"byte_end":13275353,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275354,"byte_end":13275428,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275429,"byte_end":13275434,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ let mut interval = stream::interval(Duration::from_secs(4));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275435,"byte_end":13275499,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ while let Some(_) = interval.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275500,"byte_end":13275547,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/     println!(\"prints every four seconds\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275548,"byte_end":13275594,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275595,"byte_end":13275600,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275601,"byte_end":13275606,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275607,"byte_end":13275624,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275625,"byte_end":13275632,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275633,"byte_end":13275661,"line_start":44,"line_end":44,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3718},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13276138,"byte_end":13276146,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"Interval","qualname":"::stream::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720}],"decl_id":null,"docs":" A stream representing notifications at fixed interval","sig":null,"attributes":[{"value":"/ A stream representing notifications at fixed interval","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275837,"byte_end":13275894,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275895,"byte_end":13275898,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`interval`] function. See its","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275899,"byte_end":13275963,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/ documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275964,"byte_end":13275991,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275992,"byte_end":13275995,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: fn.interval.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13275996,"byte_end":13276030,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13276031,"byte_end":13276059,"line_start":59,"line_end":59,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3536},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277132,"byte_end":13277142,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream","value":"IntoStream","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539}],"decl_id":null,"docs":" Conversion into a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion into a `Stream`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276622,"byte_end":13276653,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276654,"byte_end":13276657,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoIterator` for a type, you define how it will be","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276658,"byte_end":13276730,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ converted to an iterator. This is common for types which describe a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276731,"byte_end":13276802,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ collection of some kind.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276803,"byte_end":13276831,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276832,"byte_end":13276835,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`from_stream`]: #tymethod.from_stream","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276836,"byte_end":13276878,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276879,"byte_end":13276912,"line_start":10,"line_end":10,"column_start":1,"column_end":34}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276913,"byte_end":13276962,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276963,"byte_end":13276966,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See also: [`FromStream`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276967,"byte_end":13276996,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13276997,"byte_end":13277000,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277001,"byte_end":13277042,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277043,"byte_end":13277071,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":3537},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277208,"byte_end":13277212,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::into_stream::IntoStream::Item","value":"type Item;","parent":{"krate":0,"index":3536},"children":[],"decl_id":null,"docs":" The type of the elements being iterated over.\n","sig":null,"attributes":[{"value":"/ The type of the elements being iterated over.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277149,"byte_end":13277198,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":3538},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277279,"byte_end":13277289,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream::IntoStream","value":"type IntoStream: Stream<Item = Self::Item>;","parent":{"krate":0,"index":3536},"children":[],"decl_id":null,"docs":" Which kind of stream are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of stream are we turning this into?","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277219,"byte_end":13277269,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3539},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277365,"byte_end":13277376,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::into_stream::IntoStream::into_stream","value":"pub fn into_stream(Self) -> Self::IntoStream","parent":{"krate":0,"index":3536},"children":[],"decl_id":null,"docs":" Creates a stream from a value.\n","sig":null,"attributes":[{"value":"/ Creates a stream from a value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277323,"byte_end":13277357,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3723},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13277929,"byte_end":13277936,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":3725}],"decl_id":null,"docs":" A stream that never returns any items.","sig":null,"attributes":[{"value":"/ A stream that never returns any items.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13277725,"byte_end":13277767,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13277768,"byte_end":13277771,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`pending`] function. See its","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13277772,"byte_end":13277835,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13277836,"byte_end":13277863,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13277864,"byte_end":13277867,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`pending`]: fn.pending.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13277868,"byte_end":13277900,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":3572},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278498,"byte_end":13278505,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that never returns any items.","sig":null,"attributes":[{"value":"/ Creates a stream that never returns any items.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13277974,"byte_end":13278024,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278025,"byte_end":13278028,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278029,"byte_end":13278094,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278095,"byte_end":13278109,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278110,"byte_end":13278113,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278114,"byte_end":13278121,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278122,"byte_end":13278161,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278162,"byte_end":13278167,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278168,"byte_end":13278196,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278197,"byte_end":13278200,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278201,"byte_end":13278231,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278232,"byte_end":13278258,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278259,"byte_end":13278262,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_millis(100);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278263,"byte_end":13278304,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ let mut s = stream::pending::<()>().timeout(dur);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278305,"byte_end":13278358,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278359,"byte_end":13278362,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let item = s.next().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278363,"byte_end":13278393,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278394,"byte_end":13278397,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ assert!(item.is_some());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278398,"byte_end":13278426,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ assert!(item.unwrap().is_err());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278427,"byte_end":13278463,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278464,"byte_end":13278467,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278468,"byte_end":13278473,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278474,"byte_end":13278482,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278483,"byte_end":13278490,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":3596},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279727,"byte_end":13279734,"line_start":18,"line_end":18,"column_start":11,"column_end":18},"name":"Product","qualname":"::stream::product::Product","value":"Product<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":3598}],"decl_id":null,"docs":" Trait to represent types that can be created by multiplying the elements of a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by multiplying the elements of a stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279107,"byte_end":13279196,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279197,"byte_end":13279200,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`product`] method on streams. Types which","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279201,"byte_end":13279283,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ implement the trait can be generated by the [`product`] method. Like","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279284,"byte_end":13279356,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279357,"byte_end":13279431,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::product`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279432,"byte_end":13279480,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279481,"byte_end":13279484,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`product`]: trait.Product.html#tymethod.product","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279485,"byte_end":13279537,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279538,"byte_end":13279579,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::product`]: trait.Stream.html#method.product","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279580,"byte_end":13279637,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279638,"byte_end":13279666,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279870,"byte_end":13279877,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"product","qualname":"::stream::product::Product::product","value":"pub fn product<'a, S>(S) -> Pin<Box<dyn Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":3596},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n multiplying the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279758,"byte_end":13279831,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ multiplying the items.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279836,"byte_end":13279862,"line_start":20,"line_end":20,"column_start":5,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3632},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282476,"byte_end":13282486,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"successors","qualname":"::stream::successors::successors","value":"pub fn successors<F, T>(Option<T>, F) -> Successors<F, T> where F: FnMut(&T)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a closure is called with the previous\n value.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a closure is called with the previous","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13281862,"byte_end":13281958,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13281959,"byte_end":13281969,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13281970,"byte_end":13281973,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13281974,"byte_end":13281988,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13281989,"byte_end":13281992,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13281993,"byte_end":13282000,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282001,"byte_end":13282052,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282053,"byte_end":13282058,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282059,"byte_end":13282089,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282090,"byte_end":13282116,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282117,"byte_end":13282120,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::successors(Some(22), |&val| Some(val + 1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282121,"byte_end":13282188,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282189,"byte_end":13282192,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(22));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282193,"byte_end":13282234,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(23));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282235,"byte_end":13282276,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(24));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282277,"byte_end":13282318,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(25));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282319,"byte_end":13282360,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282361,"byte_end":13282364,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282365,"byte_end":13282370,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282371,"byte_end":13282381,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282382,"byte_end":13282389,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282390,"byte_end":13282418,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":9763},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13282990,"byte_end":13283000,"line_start":49,"line_end":49,"column_start":16,"column_end":26},"name":"Successors","qualname":"::stream::successors::Successors","value":"Successors {  }","parent":null,"children":[{"krate":0,"index":9766},{"krate":0,"index":9767}],"decl_id":null,"docs":" A stream that yields elements by calling an async closure with the previous value as an\n argument","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13738473,"byte_end":13738482,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3650},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284322,"byte_end":13284325,"line_start":18,"line_end":18,"column_start":11,"column_end":14},"name":"Sum","qualname":"::stream::sum::Sum","value":"Sum<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":3652}],"decl_id":null,"docs":" Trait to represent types that can be created by summing up a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by summing up a stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13283751,"byte_end":13283823,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13283824,"byte_end":13283827,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`sum`] method on streams. Types which","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13283828,"byte_end":13283906,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ implement the trait can be generated by the [`sum`] method. Like","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13283907,"byte_end":13283975,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13283976,"byte_end":13284050,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::sum`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284051,"byte_end":13284095,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284096,"byte_end":13284099,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`sum`]: trait.Sum.html#tymethod.sum","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284100,"byte_end":13284140,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284141,"byte_end":13284182,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::sum`]: trait.Stream.html#method.sum","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284183,"byte_end":13284232,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284233,"byte_end":13284261,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284462,"byte_end":13284465,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"sum","qualname":"::stream::sum::Sum::sum","value":"pub fn sum<'a, S>(S) -> Pin<Box<dyn Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":3650},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n \"summing up\" the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284349,"byte_end":13284422,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ \"summing up\" the items.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284427,"byte_end":13284454,"line_start":20,"line_end":20,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":4309},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":4310},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4350},{"krate":0,"index":4353},{"krate":0,"index":4356},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4369},{"krate":0,"index":4372},{"krate":0,"index":4375},{"krate":0,"index":4378},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4395},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4400},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4413},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4442},{"krate":0,"index":4624},{"krate":0,"index":4956},{"krate":0,"index":4996},{"krate":0,"index":5176},{"krate":0,"index":5202},{"krate":0,"index":5277},{"krate":0,"index":5339},{"krate":0,"index":5386},{"krate":0,"index":5454},{"krate":0,"index":5489},{"krate":0,"index":5517},{"krate":0,"index":5679},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5690},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5697},{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5704},{"krate":0,"index":5707},{"krate":0,"index":5710},{"krate":0,"index":5750},{"krate":0,"index":5787},{"krate":0,"index":5834},{"krate":0,"index":5852}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16447,"byte_end":16470,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286293,"byte_end":13286362,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286363,"byte_end":13286366,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286367,"byte_end":13286444,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ when doing input and output. The most core part of this module is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286445,"byte_end":13286514,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286515,"byte_end":13286571,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ most general interface for reading and writing input and output.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286572,"byte_end":13286640,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286641,"byte_end":13286644,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::io`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286645,"byte_end":13286696,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286697,"byte_end":13286700,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286701,"byte_end":13286761,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286762,"byte_end":13286765,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Read and Write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286766,"byte_end":13286786,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286787,"byte_end":13286790,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286791,"byte_end":13286870,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of other types, and you can implement them for your types too. As such,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286871,"byte_end":13286946,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13286947,"byte_end":13287022,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287023,"byte_end":13287102,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287103,"byte_end":13287182,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ [`File`]s:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287183,"byte_end":13287197,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287198,"byte_end":13287201,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287202,"byte_end":13287215,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287216,"byte_end":13287244,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287245,"byte_end":13287275,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287276,"byte_end":13287279,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287280,"byte_end":13287354,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287355,"byte_end":13287360,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287361,"byte_end":13287406,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287407,"byte_end":13287436,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287437,"byte_end":13287440,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287441,"byte_end":13287467,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287468,"byte_end":13287507,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287508,"byte_end":13287511,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287512,"byte_end":13287558,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287559,"byte_end":13287564,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287565,"byte_end":13287582,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287583,"byte_end":13287590,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287591,"byte_end":13287594,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287595,"byte_end":13287677,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287678,"byte_end":13287755,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287756,"byte_end":13287820,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287821,"byte_end":13287824,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Seek and BufRead","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287825,"byte_end":13287848,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287849,"byte_end":13287852,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287853,"byte_end":13287928,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13287929,"byte_end":13287999,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288000,"byte_end":13288077,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ coming from:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288078,"byte_end":13288094,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288095,"byte_end":13288098,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288099,"byte_end":13288112,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288113,"byte_end":13288141,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288142,"byte_end":13288174,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288175,"byte_end":13288205,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288206,"byte_end":13288209,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288210,"byte_end":13288284,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288285,"byte_end":13288290,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288291,"byte_end":13288336,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288337,"byte_end":13288366,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288367,"byte_end":13288370,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // skip to the last 10 bytes of the file","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288371,"byte_end":13288415,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288416,"byte_end":13288454,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288455,"byte_end":13288458,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288459,"byte_end":13288485,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288486,"byte_end":13288525,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288526,"byte_end":13288529,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288530,"byte_end":13288576,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288577,"byte_end":13288582,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288583,"byte_end":13288600,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288601,"byte_end":13288608,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288609,"byte_end":13288612,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288613,"byte_end":13288699,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/ to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288700,"byte_end":13288778,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288779,"byte_end":13288782,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## BufReader and BufWriter","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288783,"byte_end":13288813,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288814,"byte_end":13288817,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288818,"byte_end":13288899,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288900,"byte_end":13288974,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13288975,"byte_end":13289056,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289057,"byte_end":13289131,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289132,"byte_end":13289206,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289207,"byte_end":13289210,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289211,"byte_end":13289287,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ methods to any reader:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289288,"byte_end":13289314,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289315,"byte_end":13289318,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289319,"byte_end":13289332,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289333,"byte_end":13289361,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289362,"byte_end":13289395,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289396,"byte_end":13289426,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289427,"byte_end":13289430,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289431,"byte_end":13289505,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289506,"byte_end":13289511,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289512,"byte_end":13289553,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ let mut reader = BufReader::new(f);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289554,"byte_end":13289593,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289594,"byte_end":13289629,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289630,"byte_end":13289633,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // read a line into buffer","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289634,"byte_end":13289664,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289665,"byte_end":13289706,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289707,"byte_end":13289710,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", buffer);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289711,"byte_end":13289738,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289739,"byte_end":13289744,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289745,"byte_end":13289762,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289763,"byte_end":13289770,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289771,"byte_end":13289774,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289775,"byte_end":13289856,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/ to [`write`][`Write::write`]:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289857,"byte_end":13289890,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289891,"byte_end":13289894,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289895,"byte_end":13289908,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289909,"byte_end":13289937,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289938,"byte_end":13289972,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13289973,"byte_end":13290006,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290007,"byte_end":13290010,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290011,"byte_end":13290085,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290086,"byte_end":13290091,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290092,"byte_end":13290135,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290136,"byte_end":13290141,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/     let mut writer = BufWriter::new(f);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290142,"byte_end":13290185,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290186,"byte_end":13290189,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // write a byte to the buffer","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290190,"byte_end":13290227,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/     writer.write(&[42]).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290228,"byte_end":13290263,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/ } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290264,"byte_end":13290324,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/ //","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290325,"byte_end":13290331,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290332,"byte_end":13290337,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290338,"byte_end":13290355,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290356,"byte_end":13290363,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290364,"byte_end":13290367,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Standard input and output","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290368,"byte_end":13290400,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290401,"byte_end":13290404,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ A very common source of input is standard input:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290405,"byte_end":13290457,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290458,"byte_end":13290461,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290462,"byte_end":13290475,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290476,"byte_end":13290498,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290499,"byte_end":13290502,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290503,"byte_end":13290577,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290578,"byte_end":13290583,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290584,"byte_end":13290618,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290619,"byte_end":13290622,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290623,"byte_end":13290668,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290669,"byte_end":13290672,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290673,"byte_end":13290717,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290718,"byte_end":13290723,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290724,"byte_end":13290741,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290742,"byte_end":13290749,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290750,"byte_end":13290753,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290754,"byte_end":13290833,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290834,"byte_end":13290903,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ or `match` on the return value to catch any possible errors:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290904,"byte_end":13290968,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290969,"byte_end":13290972,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290973,"byte_end":13290986,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13290987,"byte_end":13291009,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291010,"byte_end":13291013,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291014,"byte_end":13291088,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291089,"byte_end":13291094,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291095,"byte_end":13291129,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291130,"byte_end":13291133,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291134,"byte_end":13291187,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291188,"byte_end":13291193,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291194,"byte_end":13291211,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291212,"byte_end":13291219,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291220,"byte_end":13291223,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ And a very common source of output is standard output:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291224,"byte_end":13291282,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291283,"byte_end":13291286,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291287,"byte_end":13291300,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291301,"byte_end":13291323,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291324,"byte_end":13291358,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291359,"byte_end":13291362,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291363,"byte_end":13291437,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291438,"byte_end":13291443,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ io::stdout().write(&[42]).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291444,"byte_end":13291481,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291482,"byte_end":13291487,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291488,"byte_end":13291505,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291506,"byte_end":13291513,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291514,"byte_end":13291517,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291518,"byte_end":13291597,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ [`println!`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291598,"byte_end":13291615,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291616,"byte_end":13291619,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ## Iterator types","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291620,"byte_end":13291641,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291642,"byte_end":13291645,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ A large number of the structures provided by `std::io` are for various","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291646,"byte_end":13291720,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291721,"byte_end":13291797,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ lines:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291798,"byte_end":13291808,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291809,"byte_end":13291812,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291813,"byte_end":13291826,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291827,"byte_end":13291855,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291856,"byte_end":13291889,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291890,"byte_end":13291920,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291921,"byte_end":13291924,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13291925,"byte_end":13291999,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292000,"byte_end":13292005,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292006,"byte_end":13292047,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ let reader = BufReader::new(f);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292048,"byte_end":13292083,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292084,"byte_end":13292087,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let mut lines = reader.lines();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292088,"byte_end":13292123,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292124,"byte_end":13292171,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292172,"byte_end":13292202,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292203,"byte_end":13292208,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292209,"byte_end":13292214,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292215,"byte_end":13292232,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292233,"byte_end":13292240,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292241,"byte_end":13292244,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292245,"byte_end":13292261,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292262,"byte_end":13292265,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292266,"byte_end":13292348,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ features. For example, we can use three of these functions to copy everything","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292349,"byte_end":13292430,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/ from standard input to standard output:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292431,"byte_end":13292474,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292475,"byte_end":13292478,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292479,"byte_end":13292492,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292493,"byte_end":13292515,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292516,"byte_end":13292519,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292520,"byte_end":13292594,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292595,"byte_end":13292600,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292601,"byte_end":13292658,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292659,"byte_end":13292664,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292665,"byte_end":13292682,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292683,"byte_end":13292690,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292691,"byte_end":13292694,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [functions-list]: #functions-1","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292695,"byte_end":13292729,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292730,"byte_end":13292733,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## io::Result","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292734,"byte_end":13292751,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292752,"byte_end":13292755,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292756,"byte_end":13292827,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292828,"byte_end":13292907,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292908,"byte_end":13292989,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"/ module use the [`?` operator]:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13292990,"byte_end":13293024,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293025,"byte_end":13293028,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293029,"byte_end":13293036,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ #![allow(dead_code)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293037,"byte_end":13293061,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293062,"byte_end":13293084,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293085,"byte_end":13293088,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ async fn read_input() -> io::Result<()> {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293089,"byte_end":13293134,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/     let mut input = String::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293135,"byte_end":13293173,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293174,"byte_end":13293177,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293178,"byte_end":13293227,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293228,"byte_end":13293231,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293232,"byte_end":13293280,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293281,"byte_end":13293284,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293285,"byte_end":13293299,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293300,"byte_end":13293305,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293306,"byte_end":13293313,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293314,"byte_end":13293317,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293318,"byte_end":13293398,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293399,"byte_end":13293483,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"/ return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293484,"byte_end":13293568,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ to read the line and print it, so we use `()`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293569,"byte_end":13293619,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293620,"byte_end":13293623,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ## Platform-specific behavior","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293624,"byte_end":13293657,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293658,"byte_end":13293661,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293662,"byte_end":13293743,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"/ what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293744,"byte_end":13293824,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ applications both understand what's happening under the hood as well as investigate","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293825,"byte_end":13293912,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13293913,"byte_end":13294003,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/ contract. The implementation of many of these functions are subject to change over","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294004,"byte_end":13294090,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"/ time and may call fewer or more syscalls/library functions.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294091,"byte_end":13294154,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294155,"byte_end":13294158,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294159,"byte_end":13294188,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294189,"byte_end":13294220,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294221,"byte_end":13294250,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294251,"byte_end":13294286,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"/ [`File`]: ../fs/struct.File.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294287,"byte_end":13294323,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294324,"byte_end":13294371,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294372,"byte_end":13294410,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"/ [`BufReader`]: struct.BufReader.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294411,"byte_end":13294451,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"/ [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294452,"byte_end":13294492,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"/ [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294493,"byte_end":13294546,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/ [`io::stdout`]: fn.stdout.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294547,"byte_end":13294581,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/ [`println!`]: ../macro.println.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294582,"byte_end":13294621,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"/ [`Lines`]: struct.Lines.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294622,"byte_end":13294654,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294655,"byte_end":13294691,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"/ [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294692,"byte_end":13294776,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"/ [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294777,"byte_end":13294826,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294827,"byte_end":13294896,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13294897,"byte_end":13294983,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":4417},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","parent":null,"children":[{"krate":0,"index":4418},{"krate":0,"index":4421},{"krate":0,"index":4424},{"krate":0,"index":4427},{"krate":0,"index":4430},{"krate":0,"index":4433},{"krate":0,"index":4436},{"krate":0,"index":4439}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16447,"byte_end":16470,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async I/O prelude.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13304993,"byte_end":13305019,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305020,"byte_end":13305023,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305024,"byte_end":13305104,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305105,"byte_end":13305165,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305166,"byte_end":13305169,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305170,"byte_end":13305177,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305178,"byte_end":13305209,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305210,"byte_end":13305244,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/prelude.rs","byte_start":13305245,"byte_end":13305252,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9715},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/lines.rs","byte_start":13318181,"byte_end":13318186,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9717},{"krate":0,"index":9718},{"krate":0,"index":9719},{"krate":0,"index":9720}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4513},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/read_line.rs","byte_start":13320083,"byte_end":13320097,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/read_line.rs","byte_start":13320032,"byte_end":13320071,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4549},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/read_until.rs","byte_start":13321560,"byte_end":13321575,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/read_until.rs","byte_start":13321509,"byte_end":13321548,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9667},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/split.rs","byte_start":13322800,"byte_end":13322805,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9669},{"krate":0,"index":9670},{"krate":0,"index":9671},{"krate":0,"index":9672}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5561},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/mod.rs","byte_start":13308026,"byte_end":13308036,"line_start":72,"line_end":72,"column_start":15,"column_end":25},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":5564},{"krate":0,"index":5566},{"krate":0,"index":5568},{"krate":0,"index":5569}],"decl_id":null,"docs":"        Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5564},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/mod.rs","byte_start":13309800,"byte_end":13309810,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntilFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":"            Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5566},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/mod.rs","byte_start":13311599,"byte_end":13311608,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLineFuture where\nSelf: Unpin","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":"            Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n            reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5568},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/mod.rs","byte_start":13313066,"byte_end":13313071,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Unpin + Sized","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":"            Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5569},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/mod.rs","byte_start":13314835,"byte_end":13314840,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":"            Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5570},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/bytes.rs","byte_start":13339838,"byte_end":13339843,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":5572}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/bytes.rs","byte_start":13339580,"byte_end":13339622,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/bytes.rs","byte_start":13339623,"byte_end":13339626,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/bytes.rs","byte_start":13339627,"byte_end":13339697,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/bytes.rs","byte_start":13339698,"byte_end":13339761,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/bytes.rs","byte_start":13339762,"byte_end":13339765,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/bytes.rs","byte_start":13339766,"byte_end":13339809,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":9618},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341570,"byte_end":13341575,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9621},{"krate":0,"index":9622},{"krate":0,"index":9623}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4683},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342299,"byte_end":13342309,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341748,"byte_end":13341804,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341809,"byte_end":13341812,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341817,"byte_end":13341831,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341836,"byte_end":13341839,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341844,"byte_end":13341857,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341862,"byte_end":13341942,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341947,"byte_end":13341952,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341957,"byte_end":13341987,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341992,"byte_end":13342020,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342025,"byte_end":13342028,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342033,"byte_end":13342081,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342086,"byte_end":13342134,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342139,"byte_end":13342142,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342147,"byte_end":13342188,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342193,"byte_end":13342243,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342248,"byte_end":13342253,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342258,"byte_end":13342275,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342280,"byte_end":13342287,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4684},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342927,"byte_end":13342934,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342373,"byte_end":13342435,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342440,"byte_end":13342443,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342448,"byte_end":13342462,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342467,"byte_end":13342470,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342475,"byte_end":13342488,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342493,"byte_end":13342573,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342578,"byte_end":13342583,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342588,"byte_end":13342618,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342623,"byte_end":13342651,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342656,"byte_end":13342659,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342664,"byte_end":13342712,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342717,"byte_end":13342765,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342770,"byte_end":13342773,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342778,"byte_end":13342819,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342824,"byte_end":13342871,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342876,"byte_end":13342881,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342886,"byte_end":13342903,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13342908,"byte_end":13342915,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4685},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343750,"byte_end":13343757,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343003,"byte_end":13343073,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343078,"byte_end":13343081,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343086,"byte_end":13343159,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343164,"byte_end":13343237,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343242,"byte_end":13343254,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343259,"byte_end":13343262,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343267,"byte_end":13343281,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343286,"byte_end":13343289,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343294,"byte_end":13343307,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343312,"byte_end":13343392,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343397,"byte_end":13343402,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343407,"byte_end":13343437,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343442,"byte_end":13343470,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343475,"byte_end":13343478,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343483,"byte_end":13343531,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343536,"byte_end":13343584,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343589,"byte_end":13343592,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343597,"byte_end":13343642,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343647,"byte_end":13343694,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343699,"byte_end":13343704,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343709,"byte_end":13343726,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343731,"byte_end":13343738,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4721},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read.rs","byte_start":13346848,"byte_end":13346858,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":4724},{"krate":0,"index":4725}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read.rs","byte_start":13346797,"byte_end":13346836,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4754},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_exact.rs","byte_start":13347428,"byte_end":13347443,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":4757},{"krate":0,"index":4758}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_exact.rs","byte_start":13347377,"byte_end":13347416,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4784},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_end.rs","byte_start":13348329,"byte_end":13348344,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":4787},{"krate":0,"index":4788},{"krate":0,"index":4789}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_end.rs","byte_start":13348278,"byte_end":13348317,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4832},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_string.rs","byte_start":13350783,"byte_end":13350801,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4837},{"krate":0,"index":4838}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_string.rs","byte_start":13350732,"byte_end":13350771,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4868},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_vectored.rs","byte_start":13352208,"byte_end":13352226,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":4871},{"krate":0,"index":4872}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_vectored.rs","byte_start":13352157,"byte_end":13352196,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9578},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353114,"byte_end":13353118,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9580},{"krate":0,"index":9581}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4906},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354008,"byte_end":13354013,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353230,"byte_end":13353304,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353309,"byte_end":13353324,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353329,"byte_end":13353332,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353337,"byte_end":13353347,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353352,"byte_end":13353355,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353360,"byte_end":13353437,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353442,"byte_end":13353506,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353511,"byte_end":13353514,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353519,"byte_end":13353548,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353553,"byte_end":13353556,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353561,"byte_end":13353575,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353580,"byte_end":13353583,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353588,"byte_end":13353601,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353606,"byte_end":13353686,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353691,"byte_end":13353696,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353701,"byte_end":13353731,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353736,"byte_end":13353764,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353769,"byte_end":13353772,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353777,"byte_end":13353818,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353823,"byte_end":13353826,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353831,"byte_end":13353861,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353866,"byte_end":13353893,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353898,"byte_end":13353901,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353906,"byte_end":13353948,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353953,"byte_end":13353958,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353963,"byte_end":13353984,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353989,"byte_end":13353996,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4907},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354802,"byte_end":13354811,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354060,"byte_end":13354131,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354136,"byte_end":13354210,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354215,"byte_end":13354290,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354295,"byte_end":13354319,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354324,"byte_end":13354327,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354332,"byte_end":13354346,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354351,"byte_end":13354354,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354359,"byte_end":13354372,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354377,"byte_end":13354457,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354462,"byte_end":13354467,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354472,"byte_end":13354502,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354507,"byte_end":13354535,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354540,"byte_end":13354543,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354548,"byte_end":13354589,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354594,"byte_end":13354597,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354602,"byte_end":13354632,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354637,"byte_end":13354668,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354673,"byte_end":13354698,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354703,"byte_end":13354706,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354711,"byte_end":13354746,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354751,"byte_end":13354756,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354761,"byte_end":13354778,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354783,"byte_end":13354790,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4908},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355428,"byte_end":13355438,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354876,"byte_end":13354930,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354935,"byte_end":13354938,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354943,"byte_end":13354957,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354962,"byte_end":13354965,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354970,"byte_end":13354983,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13354988,"byte_end":13355068,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355073,"byte_end":13355078,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355083,"byte_end":13355113,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355118,"byte_end":13355146,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355151,"byte_end":13355154,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355159,"byte_end":13355203,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355208,"byte_end":13355211,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355216,"byte_end":13355244,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355249,"byte_end":13355283,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355288,"byte_end":13355324,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355329,"byte_end":13355332,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355337,"byte_end":13355372,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355377,"byte_end":13355382,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355387,"byte_end":13355404,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355409,"byte_end":13355416,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4909},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356023,"byte_end":13356030,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355482,"byte_end":13355528,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355533,"byte_end":13355536,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355541,"byte_end":13355555,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355560,"byte_end":13355563,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355568,"byte_end":13355581,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355586,"byte_end":13355666,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355671,"byte_end":13355676,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355681,"byte_end":13355711,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355716,"byte_end":13355744,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355749,"byte_end":13355752,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355757,"byte_end":13355801,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355806,"byte_end":13355809,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355814,"byte_end":13355842,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355847,"byte_end":13355881,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355886,"byte_end":13355922,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355927,"byte_end":13355930,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355935,"byte_end":13355967,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355972,"byte_end":13355977,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13355982,"byte_end":13355999,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356004,"byte_end":13356011,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4910},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356805,"byte_end":13356812,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356077,"byte_end":13356131,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356136,"byte_end":13356139,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356144,"byte_end":13356217,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356222,"byte_end":13356294,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356299,"byte_end":13356310,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356315,"byte_end":13356318,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356323,"byte_end":13356337,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356342,"byte_end":13356345,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356350,"byte_end":13356363,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356368,"byte_end":13356448,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356453,"byte_end":13356458,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356463,"byte_end":13356493,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356498,"byte_end":13356526,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356531,"byte_end":13356534,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356539,"byte_end":13356583,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356588,"byte_end":13356591,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356596,"byte_end":13356624,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356629,"byte_end":13356663,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356668,"byte_end":13356704,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356709,"byte_end":13356712,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356717,"byte_end":13356749,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356754,"byte_end":13356759,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356764,"byte_end":13356781,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356786,"byte_end":13356793,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":5590},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13325785,"byte_end":13325792,"line_start":80,"line_end":80,"column_start":15,"column_end":22},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":5593},{"krate":0,"index":5595},{"krate":0,"index":5597},{"krate":0,"index":5599},{"krate":0,"index":5601},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5605},{"krate":0,"index":5606}],"decl_id":null,"docs":"        Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5593},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13326985,"byte_end":13326989,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"read","qualname":"::io::read::ReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> ReadFuture where Self: Unpin","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"            Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5595},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13327781,"byte_end":13327794,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut])\n-> ReadVectoredFuture where Self: Unpin","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"            Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5597},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13328951,"byte_end":13328962,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEndFuture where\nSelf: Unpin","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"            Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5599},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13330100,"byte_end":13330114,"line_start":210,"line_end":210,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToStringFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"            Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5601},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13332195,"byte_end":13332205,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExactFuture where\nSelf: Unpin","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"            Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5603},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13333559,"byte_end":13333563,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"take","qualname":"::io::read::ReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"            Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5604},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13334778,"byte_end":13334784,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"            Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5605},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13335786,"byte_end":13335791,"line_start":384,"line_end":384,"column_start":12,"column_end":17},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"pub fn bytes(Self) -> Bytes<Self> where Self: Sized","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"            Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5606},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13336926,"byte_end":13336931,"line_start":420,"line_end":420,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"pub fn chain<R: Read>(Self, R) -> Chain<Self, R> where Self: Sized","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"            Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4981},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/seek/seek.rs","byte_start":13362794,"byte_end":13362804,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":4984},{"krate":0,"index":4985}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/seek/seek.rs","byte_start":13362743,"byte_end":13362782,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":5622},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/seek/mod.rs","byte_start":13360676,"byte_end":13360683,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":5625}],"decl_id":null,"docs":"        Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/seek/mod.rs","byte_start":13361417,"byte_end":13361421,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> SeekFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":5622},"children":[],"decl_id":null,"docs":"            Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5018},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/flush.rs","byte_start":13374128,"byte_end":13374139,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":5021}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/flush.rs","byte_start":13374077,"byte_end":13374116,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5047},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write.rs","byte_start":13374621,"byte_end":13374632,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":5050},{"krate":0,"index":5051}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write.rs","byte_start":13374570,"byte_end":13374609,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5080},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_all.rs","byte_start":13375194,"byte_end":13375208,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":5083},{"krate":0,"index":5084}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_all.rs","byte_start":13375143,"byte_end":13375182,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5110},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_fmt.rs","byte_start":13376093,"byte_end":13376107,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_fmt.rs","byte_start":13376030,"byte_end":13376069,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_fmt.rs","byte_start":13376070,"byte_end":13376081,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5145},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_vectored.rs","byte_start":13377663,"byte_end":13377682,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":5148},{"krate":0,"index":5149}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_vectored.rs","byte_start":13377612,"byte_end":13377651,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":5640},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/mod.rs","byte_start":13365719,"byte_end":13365727,"line_start":84,"line_end":84,"column_start":15,"column_end":23},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":5643},{"krate":0,"index":5645},{"krate":0,"index":5646},{"krate":0,"index":5648},{"krate":0,"index":5650}],"decl_id":null,"docs":"        Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5643},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/mod.rs","byte_start":13366644,"byte_end":13366649,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"write","qualname":"::io::write::WriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> WriteFuture where Self: Unpin","parent":{"krate":0,"index":5640},"children":[],"decl_id":null,"docs":"            Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5645},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/mod.rs","byte_start":13367451,"byte_end":13367456,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"pub fn flush(&mut Self) -> FlushFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":5640},"children":[],"decl_id":null,"docs":"            Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5646},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/mod.rs","byte_start":13368179,"byte_end":13368193,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5640},"children":[],"decl_id":null,"docs":"            Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5648},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/mod.rs","byte_start":13369290,"byte_end":13369299,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAllFuture where\nSelf: Unpin","parent":{"krate":0,"index":5640},"children":[],"decl_id":null,"docs":"            Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5650},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/mod.rs","byte_start":13370508,"byte_end":13370517,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"pub fn write_fmt<'a>(&'a mut Self, std::fmt::Arguments) -> WriteFmtFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5640},"children":[],"decl_id":null,"docs":"            Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9533},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13380869,"byte_end":13380878,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":9535},{"krate":0,"index":9536},{"krate":0,"index":9537},{"krate":0,"index":9538}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5251},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381509,"byte_end":13381512,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381027,"byte_end":13381086,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381091,"byte_end":13381094,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381099,"byte_end":13381172,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381177,"byte_end":13381180,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381185,"byte_end":13381199,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381204,"byte_end":13381207,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381212,"byte_end":13381225,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381230,"byte_end":13381304,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381309,"byte_end":13381314,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381319,"byte_end":13381347,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381352,"byte_end":13381385,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381390,"byte_end":13381393,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381398,"byte_end":13381453,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381458,"byte_end":13381463,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381468,"byte_end":13381485,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381490,"byte_end":13381497,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5252},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382025,"byte_end":13382038,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381610,"byte_end":13381672,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381677,"byte_end":13381680,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381685,"byte_end":13381699,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381704,"byte_end":13381707,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381712,"byte_end":13381725,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381730,"byte_end":13381804,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381809,"byte_end":13381814,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381819,"byte_end":13381847,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381852,"byte_end":13381885,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381890,"byte_end":13381893,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381898,"byte_end":13381969,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381974,"byte_end":13381979,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381984,"byte_end":13382001,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382006,"byte_end":13382013,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5255},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382759,"byte_end":13382766,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382264,"byte_end":13382310,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382315,"byte_end":13382318,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382323,"byte_end":13382389,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382394,"byte_end":13382397,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382402,"byte_end":13382416,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382421,"byte_end":13382424,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382429,"byte_end":13382442,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382447,"byte_end":13382521,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382526,"byte_end":13382531,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382536,"byte_end":13382564,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382569,"byte_end":13382602,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382607,"byte_end":13382610,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382615,"byte_end":13382670,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382675,"byte_end":13382703,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382708,"byte_end":13382713,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382718,"byte_end":13382735,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382740,"byte_end":13382747,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5256},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383326,"byte_end":13383333,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382813,"byte_end":13382867,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382872,"byte_end":13382875,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382880,"byte_end":13382946,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382951,"byte_end":13382954,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382959,"byte_end":13382973,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382978,"byte_end":13382981,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382986,"byte_end":13382999,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383004,"byte_end":13383078,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383083,"byte_end":13383088,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383093,"byte_end":13383121,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383126,"byte_end":13383159,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383164,"byte_end":13383167,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383172,"byte_end":13383234,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383239,"byte_end":13383270,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383275,"byte_end":13383280,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383285,"byte_end":13383302,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383307,"byte_end":13383314,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5258},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384130,"byte_end":13384136,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383631,"byte_end":13383678,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383683,"byte_end":13383686,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383691,"byte_end":13383760,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383765,"byte_end":13383768,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383773,"byte_end":13383787,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383792,"byte_end":13383795,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383800,"byte_end":13383813,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383818,"byte_end":13383892,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383897,"byte_end":13383902,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383907,"byte_end":13383935,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383940,"byte_end":13383973,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383978,"byte_end":13383981,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13383986,"byte_end":13384041,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384046,"byte_end":13384074,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384079,"byte_end":13384084,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384089,"byte_end":13384106,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384111,"byte_end":13384118,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5259},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384718,"byte_end":13384728,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384204,"byte_end":13384269,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384274,"byte_end":13384277,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384282,"byte_end":13384345,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384350,"byte_end":13384353,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384358,"byte_end":13384372,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384377,"byte_end":13384380,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384385,"byte_end":13384398,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384403,"byte_end":13384477,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384482,"byte_end":13384487,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384492,"byte_end":13384520,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384525,"byte_end":13384558,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384563,"byte_end":13384566,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384571,"byte_end":13384626,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384631,"byte_end":13384662,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384667,"byte_end":13384672,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384677,"byte_end":13384694,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384699,"byte_end":13384706,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9492},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13393644,"byte_end":13393653,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":9494},{"krate":0,"index":9495},{"krate":0,"index":9496}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5659},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394518,"byte_end":13394532,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13393747,"byte_end":13393813,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13393814,"byte_end":13393887,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13393888,"byte_end":13393940,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13393941,"byte_end":13393944,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13393945,"byte_end":13393959,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13393960,"byte_end":13393963,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13393964,"byte_end":13393977,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13393978,"byte_end":13394052,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394053,"byte_end":13394086,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394087,"byte_end":13394121,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394122,"byte_end":13394125,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394126,"byte_end":13394208,"line_start":103,"line_end":103,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394209,"byte_end":13394212,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394213,"byte_end":13394261,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394262,"byte_end":13394316,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394317,"byte_end":13394336,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394337,"byte_end":13394356,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394357,"byte_end":13394400,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394401,"byte_end":13394441,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394442,"byte_end":13394451,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394452,"byte_end":13394458,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394459,"byte_end":13394464,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394465,"byte_end":13394482,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394483,"byte_end":13394489,"line_start":115,"line_end":115,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5318},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395115,"byte_end":13395118,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394593,"byte_end":13394685,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394690,"byte_end":13394723,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394728,"byte_end":13394731,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394736,"byte_end":13394750,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394755,"byte_end":13394758,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394763,"byte_end":13394776,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394781,"byte_end":13394808,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394813,"byte_end":13394887,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394892,"byte_end":13394925,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394930,"byte_end":13394964,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394969,"byte_end":13394972,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394977,"byte_end":13395059,"line_start":131,"line_end":131,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395064,"byte_end":13395069,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395074,"byte_end":13395091,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395096,"byte_end":13395103,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395785,"byte_end":13395798,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395216,"byte_end":13395281,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395286,"byte_end":13395289,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395294,"byte_end":13395308,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395313,"byte_end":13395316,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395321,"byte_end":13395376,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395381,"byte_end":13395384,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395389,"byte_end":13395402,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395407,"byte_end":13395434,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395439,"byte_end":13395513,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395518,"byte_end":13395551,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395556,"byte_end":13395590,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395595,"byte_end":13395598,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395603,"byte_end":13395665,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395670,"byte_end":13395729,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395734,"byte_end":13395739,"line_start":153,"line_end":153,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395744,"byte_end":13395761,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395766,"byte_end":13395773,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5320},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396512,"byte_end":13396519,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13395975,"byte_end":13396021,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396026,"byte_end":13396029,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396034,"byte_end":13396048,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396053,"byte_end":13396056,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396061,"byte_end":13396074,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396079,"byte_end":13396106,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396111,"byte_end":13396185,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396190,"byte_end":13396223,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396228,"byte_end":13396262,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396267,"byte_end":13396270,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396275,"byte_end":13396357,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396362,"byte_end":13396365,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396370,"byte_end":13396414,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396419,"byte_end":13396456,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396461,"byte_end":13396466,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396471,"byte_end":13396488,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396493,"byte_end":13396500,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5321},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397157,"byte_end":13397164,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396566,"byte_end":13396620,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396625,"byte_end":13396628,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396633,"byte_end":13396698,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396703,"byte_end":13396706,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396711,"byte_end":13396725,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396730,"byte_end":13396733,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396738,"byte_end":13396751,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396756,"byte_end":13396830,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396835,"byte_end":13396868,"line_start":193,"line_end":193,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396873,"byte_end":13396907,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396912,"byte_end":13396915,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13396920,"byte_end":13397002,"line_start":196,"line_end":196,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397007,"byte_end":13397010,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397015,"byte_end":13397059,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397064,"byte_end":13397101,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397106,"byte_end":13397111,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397116,"byte_end":13397133,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397138,"byte_end":13397145,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5323},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398230,"byte_end":13398240,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub async fn into_inner(Self) -> /*impl Trait*/ where Self: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397461,"byte_end":13397516,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397521,"byte_end":13397524,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397529,"byte_end":13397591,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397596,"byte_end":13397689,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397694,"byte_end":13397697,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397702,"byte_end":13397750,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397755,"byte_end":13397769,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397774,"byte_end":13397777,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397782,"byte_end":13397795,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397800,"byte_end":13397874,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397879,"byte_end":13397912,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397917,"byte_end":13397951,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397956,"byte_end":13397959,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13397964,"byte_end":13398046,"line_start":227,"line_end":227,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398051,"byte_end":13398054,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398059,"byte_end":13398107,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398112,"byte_end":13398168,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398173,"byte_end":13398178,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398183,"byte_end":13398200,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398205,"byte_end":13398212,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13399010,"byte_end":13399016,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398477,"byte_end":13398533,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398538,"byte_end":13398541,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398546,"byte_end":13398560,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398565,"byte_end":13398568,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398573,"byte_end":13398586,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398591,"byte_end":13398665,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398670,"byte_end":13398703,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398708,"byte_end":13398742,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398747,"byte_end":13398750,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398755,"byte_end":13398837,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398842,"byte_end":13398845,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398850,"byte_end":13398898,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398903,"byte_end":13398954,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398959,"byte_end":13398964,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398969,"byte_end":13398986,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13398991,"byte_end":13398998,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5375},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13406077,"byte_end":13406081,"line_start":135,"line_end":135,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"pub async fn copy<R, W>(R, W) -> /*impl Trait*/ where R: Read + Unpin,\nW: Write + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13404825,"byte_end":13404882,"line_start":97,"line_end":97,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13404883,"byte_end":13404886,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13404887,"byte_end":13404955,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13404956,"byte_end":13405020,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405021,"byte_end":13405037,"line_start":101,"line_end":101,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405038,"byte_end":13405041,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405042,"byte_end":13405105,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405106,"byte_end":13405143,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405144,"byte_end":13405147,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405148,"byte_end":13405228,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405229,"byte_end":13405294,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405295,"byte_end":13405298,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405299,"byte_end":13405358,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405359,"byte_end":13405362,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405363,"byte_end":13405431,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405432,"byte_end":13405468,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405469,"byte_end":13405472,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405473,"byte_end":13405485,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405486,"byte_end":13405489,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405490,"byte_end":13405565,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405566,"byte_end":13405641,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405642,"byte_end":13405711,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405712,"byte_end":13405715,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405716,"byte_end":13405730,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405731,"byte_end":13405734,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405735,"byte_end":13405742,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405743,"byte_end":13405817,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405818,"byte_end":13405823,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405824,"byte_end":13405846,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405847,"byte_end":13405850,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405851,"byte_end":13405888,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405889,"byte_end":13405923,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405924,"byte_end":13405927,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405928,"byte_end":13405974,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405975,"byte_end":13405980,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405981,"byte_end":13405998,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13405999,"byte_end":13406006,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"cfg(all(feature = \"unstable\", not(feature = \"docs\")))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13406007,"byte_end":13406063,"line_start":134,"line_end":134,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5667},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408401,"byte_end":13408407,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":5669}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13407577,"byte_end":13407640,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13407641,"byte_end":13407669,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13407670,"byte_end":13407673,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13407674,"byte_end":13407742,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13407743,"byte_end":13407815,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13407816,"byte_end":13407895,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13407896,"byte_end":13407921,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13407922,"byte_end":13407925,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13407926,"byte_end":13408000,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408001,"byte_end":13408068,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408069,"byte_end":13408102,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408103,"byte_end":13408106,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408107,"byte_end":13408136,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408137,"byte_end":13408166,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408167,"byte_end":13408198,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408199,"byte_end":13408261,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408262,"byte_end":13408325,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408326,"byte_end":13408356,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5424},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408994,"byte_end":13408997,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408471,"byte_end":13408546,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408551,"byte_end":13408554,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408559,"byte_end":13408633,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408638,"byte_end":13408706,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408711,"byte_end":13408749,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408754,"byte_end":13408757,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408762,"byte_end":13408776,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408781,"byte_end":13408784,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408789,"byte_end":13408796,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408801,"byte_end":13408831,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408836,"byte_end":13408839,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408844,"byte_end":13408883,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408888,"byte_end":13408936,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408941,"byte_end":13408970,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408975,"byte_end":13408982,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5425},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409456,"byte_end":13409466,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409109,"byte_end":13409166,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409171,"byte_end":13409174,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409179,"byte_end":13409193,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409198,"byte_end":13409201,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409206,"byte_end":13409213,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409218,"byte_end":13409248,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409253,"byte_end":13409256,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409261,"byte_end":13409300,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409305,"byte_end":13409353,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409358,"byte_end":13409387,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409392,"byte_end":13409395,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409400,"byte_end":13409432,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409437,"byte_end":13409444,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5426},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409876,"byte_end":13409883,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409523,"byte_end":13409583,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409588,"byte_end":13409591,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409596,"byte_end":13409610,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409615,"byte_end":13409618,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409623,"byte_end":13409630,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409635,"byte_end":13409665,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409670,"byte_end":13409673,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409678,"byte_end":13409717,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409722,"byte_end":13409770,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409775,"byte_end":13409804,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409809,"byte_end":13409812,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409817,"byte_end":13409852,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409857,"byte_end":13409864,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5427},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410457,"byte_end":13410464,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13409939,"byte_end":13410007,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410012,"byte_end":13410015,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410020,"byte_end":13410093,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410098,"byte_end":13410160,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410165,"byte_end":13410168,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410173,"byte_end":13410187,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410192,"byte_end":13410195,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410200,"byte_end":13410207,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410212,"byte_end":13410242,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410247,"byte_end":13410250,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410255,"byte_end":13410298,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410303,"byte_end":13410351,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410356,"byte_end":13410385,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410390,"byte_end":13410393,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410398,"byte_end":13410433,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410438,"byte_end":13410445,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5428},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411185,"byte_end":13411193,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410528,"byte_end":13410576,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410581,"byte_end":13410584,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410589,"byte_end":13410603,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410608,"byte_end":13410611,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410616,"byte_end":13410623,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410628,"byte_end":13410702,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410707,"byte_end":13410712,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410717,"byte_end":13410747,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410752,"byte_end":13410786,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410791,"byte_end":13410823,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410828,"byte_end":13410831,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410836,"byte_end":13410888,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410893,"byte_end":13410896,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410901,"byte_end":13410936,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410941,"byte_end":13410944,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410949,"byte_end":13410992,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13410997,"byte_end":13411032,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411037,"byte_end":13411040,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411045,"byte_end":13411089,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411094,"byte_end":13411129,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411134,"byte_end":13411139,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411144,"byte_end":13411161,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411166,"byte_end":13411173,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5429},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411663,"byte_end":13411675,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411251,"byte_end":13411288,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411293,"byte_end":13411296,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411301,"byte_end":13411315,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411320,"byte_end":13411323,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411328,"byte_end":13411335,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411340,"byte_end":13411370,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411375,"byte_end":13411378,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411383,"byte_end":13411435,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411440,"byte_end":13411443,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411448,"byte_end":13411483,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411488,"byte_end":13411491,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411496,"byte_end":13411521,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411526,"byte_end":13411561,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411566,"byte_end":13411569,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411574,"byte_end":13411599,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411604,"byte_end":13411639,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411644,"byte_end":13411651,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5478},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415219,"byte_end":13415224,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13414824,"byte_end":13414867,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13414868,"byte_end":13414871,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13414872,"byte_end":13414886,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13414887,"byte_end":13414890,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13414891,"byte_end":13414902,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13414903,"byte_end":13414977,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13414978,"byte_end":13414983,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13414984,"byte_end":13415006,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415007,"byte_end":13415037,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415038,"byte_end":13415041,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415042,"byte_end":13415071,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415072,"byte_end":13415105,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415106,"byte_end":13415146,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415147,"byte_end":13415150,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415151,"byte_end":13415179,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415180,"byte_end":13415185,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415186,"byte_end":13415203,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415204,"byte_end":13415211,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5479},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415442,"byte_end":13415447,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":5480}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415268,"byte_end":13415303,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415304,"byte_end":13415307,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415308,"byte_end":13415369,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415370,"byte_end":13415397,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415398,"byte_end":13415401,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415402,"byte_end":13415430,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":5510},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416692,"byte_end":13416698,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416173,"byte_end":13416242,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416243,"byte_end":13416246,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416247,"byte_end":13416343,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416344,"byte_end":13416347,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416348,"byte_end":13416363,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416364,"byte_end":13416367,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416368,"byte_end":13416379,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416380,"byte_end":13416454,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416455,"byte_end":13416460,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416461,"byte_end":13416483,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416484,"byte_end":13416514,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416515,"byte_end":13416518,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416519,"byte_end":13416547,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416548,"byte_end":13416601,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416602,"byte_end":13416605,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416606,"byte_end":13416652,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416653,"byte_end":13416658,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416659,"byte_end":13416676,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416677,"byte_end":13416684,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5511},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416968,"byte_end":13416974,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5512}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416744,"byte_end":13416826,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416827,"byte_end":13416830,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416831,"byte_end":13416893,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416894,"byte_end":13416921,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416922,"byte_end":13416925,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13416926,"byte_end":13416956,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":5538},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417850,"byte_end":13417854,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417508,"byte_end":13417562,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417563,"byte_end":13417566,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417567,"byte_end":13417581,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417582,"byte_end":13417585,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417586,"byte_end":13417597,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417598,"byte_end":13417672,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417673,"byte_end":13417678,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417679,"byte_end":13417701,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417702,"byte_end":13417732,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417733,"byte_end":13417736,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417737,"byte_end":13417769,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417770,"byte_end":13417810,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417811,"byte_end":13417816,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417817,"byte_end":13417834,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417835,"byte_end":13417842,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5539},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13418082,"byte_end":13418086,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":5540}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417896,"byte_end":13417942,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417943,"byte_end":13417946,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13417947,"byte_end":13418025,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13418026,"byte_end":13418039,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13418040,"byte_end":13418043,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13418044,"byte_end":13418070,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":5740},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419530,"byte_end":13419537,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = io::Result<T>>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13418917,"byte_end":13418980,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13418981,"byte_end":13418984,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13418985,"byte_end":13419041,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419042,"byte_end":13419101,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419102,"byte_end":13419105,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419106,"byte_end":13419120,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419121,"byte_end":13419124,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419125,"byte_end":13419138,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419139,"byte_end":13419213,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419214,"byte_end":13419219,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419220,"byte_end":13419248,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419249,"byte_end":13419252,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419253,"byte_end":13419275,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419276,"byte_end":13419279,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419280,"byte_end":13419327,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419328,"byte_end":13419360,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419361,"byte_end":13419398,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419399,"byte_end":13419449,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419450,"byte_end":13419464,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419465,"byte_end":13419471,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419472,"byte_end":13419484,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419485,"byte_end":13419490,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419491,"byte_end":13419508,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13419509,"byte_end":13419516,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5780},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421484,"byte_end":13421490,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13420715,"byte_end":13420788,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13420789,"byte_end":13420792,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13420793,"byte_end":13420854,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13420855,"byte_end":13420858,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13420859,"byte_end":13420931,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13420932,"byte_end":13420935,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13420936,"byte_end":13420983,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13420984,"byte_end":13420987,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13420988,"byte_end":13421079,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421080,"byte_end":13421172,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421173,"byte_end":13421186,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421187,"byte_end":13421190,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421191,"byte_end":13421205,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421206,"byte_end":13421209,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421210,"byte_end":13421223,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421224,"byte_end":13421298,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421299,"byte_end":13421304,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421305,"byte_end":13421327,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421328,"byte_end":13421358,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421359,"byte_end":13421362,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421363,"byte_end":13421397,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421398,"byte_end":13421444,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421445,"byte_end":13421450,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421451,"byte_end":13421468,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421469,"byte_end":13421476,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5889},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13422120,"byte_end":13422126,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421648,"byte_end":13421706,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421707,"byte_end":13421710,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421711,"byte_end":13421791,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421792,"byte_end":13421801,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421802,"byte_end":13421805,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421806,"byte_end":13421853,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421854,"byte_end":13421857,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421858,"byte_end":13421949,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13421950,"byte_end":13422042,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13422043,"byte_end":13422056,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13422057,"byte_end":13422060,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13422061,"byte_end":13422091,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":5823},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427783,"byte_end":13427788,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427029,"byte_end":13427102,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427103,"byte_end":13427106,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427107,"byte_end":13427167,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427168,"byte_end":13427171,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427172,"byte_end":13427242,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427243,"byte_end":13427246,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427247,"byte_end":13427294,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427295,"byte_end":13427298,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427299,"byte_end":13427390,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427391,"byte_end":13427482,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427483,"byte_end":13427496,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427497,"byte_end":13427500,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427501,"byte_end":13427515,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427516,"byte_end":13427519,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427520,"byte_end":13427533,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427534,"byte_end":13427608,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427609,"byte_end":13427614,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427615,"byte_end":13427637,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427638,"byte_end":13427641,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427642,"byte_end":13427670,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427671,"byte_end":13427704,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427705,"byte_end":13427743,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427744,"byte_end":13427749,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427750,"byte_end":13427767,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427768,"byte_end":13427775,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5927},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428439,"byte_end":13428444,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13427971,"byte_end":13428029,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428030,"byte_end":13428033,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428034,"byte_end":13428113,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428114,"byte_end":13428123,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428124,"byte_end":13428127,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428128,"byte_end":13428175,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428176,"byte_end":13428179,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428180,"byte_end":13428271,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428272,"byte_end":13428363,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428364,"byte_end":13428377,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428378,"byte_end":13428381,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13428382,"byte_end":13428410,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5825},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429765,"byte_end":13429774,"line_start":112,"line_end":112,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"pub async fn read_line<'_, '_>(&'_ Self, &'_ mut String) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429360,"byte_end":13429412,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429417,"byte_end":13429420,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429425,"byte_end":13429439,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429444,"byte_end":13429447,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429452,"byte_end":13429465,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429470,"byte_end":13429544,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429549,"byte_end":13429554,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429559,"byte_end":13429581,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429586,"byte_end":13429589,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429594,"byte_end":13429622,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429627,"byte_end":13429660,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429665,"byte_end":13429703,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429708,"byte_end":13429713,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429718,"byte_end":13429735,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429740,"byte_end":13429747,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5846},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdio.rs","byte_start":13434071,"byte_end":13434077,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"pub async fn _print<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5849},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdio.rs","byte_start":13434248,"byte_end":13434255,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"pub async fn _eprint<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5882},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435328,"byte_end":13435334,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434558,"byte_end":13434632,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434633,"byte_end":13434636,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434637,"byte_end":13434698,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434699,"byte_end":13434702,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434703,"byte_end":13434775,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434776,"byte_end":13434779,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434780,"byte_end":13434827,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434828,"byte_end":13434831,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434832,"byte_end":13434923,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13434924,"byte_end":13435016,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435017,"byte_end":13435030,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435031,"byte_end":13435034,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435035,"byte_end":13435049,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435050,"byte_end":13435053,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435054,"byte_end":13435067,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435068,"byte_end":13435142,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435143,"byte_end":13435148,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435149,"byte_end":13435171,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435172,"byte_end":13435202,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435203,"byte_end":13435206,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435207,"byte_end":13435241,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435242,"byte_end":13435288,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435289,"byte_end":13435294,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435295,"byte_end":13435312,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435313,"byte_end":13435320,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5966},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435965,"byte_end":13435971,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435492,"byte_end":13435551,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435552,"byte_end":13435555,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435556,"byte_end":13435632,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435633,"byte_end":13435646,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435647,"byte_end":13435650,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435651,"byte_end":13435698,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435699,"byte_end":13435702,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435703,"byte_end":13435794,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435795,"byte_end":13435887,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435888,"byte_end":13435901,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435902,"byte_end":13435905,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13435906,"byte_end":13435936,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":4311},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/mod.rs","parent":null,"children":[{"krate":0,"index":6004}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16447,"byte_end":16470,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ OS-specific extensions.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/mod.rs","byte_start":13296416,"byte_end":13296443,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":6004},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::os::unix","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":6008},{"krate":0,"index":6022},{"krate":0,"index":6038},{"krate":0,"index":6005}],"decl_id":null,"docs":" Platform-specific extensions for Unix platforms.\n","sig":null,"attributes":[{"value":"cfg(any(unix, feature = \"docs\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":15420,"byte_end":15455,"line_start":157,"line_end":157,"column_start":13,"column_end":48}},{"value":"/ Platform-specific extensions for Unix platforms.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","byte_start":13440664,"byte_end":13440716,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":6008},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::unix::io","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/io.rs","parent":null,"children":[{"krate":0,"index":6009},{"krate":0,"index":6010},{"krate":0,"index":6013},{"krate":0,"index":6016},{"krate":0,"index":6019}],"decl_id":null,"docs":" Unix-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16447,"byte_end":16470,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Unix-specific I/O extensions.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/io.rs","byte_start":13440956,"byte_end":13440989,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":6022},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::os::unix::fs","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","parent":null,"children":[{"krate":0,"index":6023},{"krate":0,"index":6026},{"krate":0,"index":6029},{"krate":0,"index":6032},{"krate":0,"index":6302},{"krate":0,"index":6303},{"krate":0,"index":6306},{"krate":0,"index":6309}],"decl_id":null,"docs":" Unix-specific filesystem extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16856,"byte_end":16883,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Unix-specific filesystem extensions.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443194,"byte_end":13443234,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":6032},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443855,"byte_end":13443862,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"symlink","qualname":"::os::unix::fs::symlink","value":"pub async fn symlink<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443308,"byte_end":13443358,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443359,"byte_end":13443362,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443363,"byte_end":13443433,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443434,"byte_end":13443437,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::os::unix::fs::symlink`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443438,"byte_end":13443510,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443511,"byte_end":13443514,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::fs::symlink`]: https://doc.rust-lang.org/std/os/unix/fs/fn.symlink.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443515,"byte_end":13443607,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443608,"byte_end":13443611,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443612,"byte_end":13443626,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443627,"byte_end":13443630,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443631,"byte_end":13443644,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443645,"byte_end":13443719,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443720,"byte_end":13443725,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::fs::symlink;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443726,"byte_end":13443767,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443768,"byte_end":13443771,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ symlink(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443772,"byte_end":13443809,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443810,"byte_end":13443815,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443816,"byte_end":13443833,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/fs.rs","byte_start":13443834,"byte_end":13443841,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6038},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::os::unix::net","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/mod.rs","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6046},{"krate":0,"index":6049},{"krate":0,"index":6052},{"krate":0,"index":6127},{"krate":0,"index":6216},{"krate":0,"index":6316}],"decl_id":null,"docs":" Unix-specific networking extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16856,"byte_end":16883,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Unix-specific networking extensions.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/mod.rs","byte_start":13445707,"byte_end":13445747,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6087},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449557,"byte_end":13449569,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::os::unix::net::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":6088}],"decl_id":null,"docs":" A Unix datagram socket.","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13448668,"byte_end":13448695,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13448696,"byte_end":13448699,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixDatagram` by [`bind`]ing it to a path, data can be [sent to] and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13448700,"byte_end":13448790,"line_start":16,"line_end":16,"column_start":1,"column_end":91}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13448791,"byte_end":13448836,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13448837,"byte_end":13448840,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13448841,"byte_end":13448915,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13448916,"byte_end":13448919,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixDatagram`]:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13448920,"byte_end":13448961,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixDatagram.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13448962,"byte_end":13449032,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449033,"byte_end":13449059,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449060,"byte_end":13449098,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449099,"byte_end":13449129,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449130,"byte_end":13449133,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449134,"byte_end":13449149,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449150,"byte_end":13449153,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449154,"byte_end":13449167,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449168,"byte_end":13449242,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449243,"byte_end":13449248,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449249,"byte_end":13449296,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449297,"byte_end":13449300,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket1\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449301,"byte_end":13449360,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket2\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449361,"byte_end":13449419,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449420,"byte_end":13449423,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449424,"byte_end":13449458,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449459,"byte_end":13449513,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449514,"byte_end":13449519,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449520,"byte_end":13449537,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449538,"byte_end":13449545,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6091},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450200,"byte_end":13450204,"line_start":66,"line_end":66,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub async fn bind<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449814,"byte_end":13449873,"line_start":53,"line_end":53,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449878,"byte_end":13449881,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449886,"byte_end":13449900,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449905,"byte_end":13449908,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449913,"byte_end":13449926,"line_start":57,"line_end":57,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449931,"byte_end":13450005,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450010,"byte_end":13450015,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450020,"byte_end":13450067,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450072,"byte_end":13450075,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450080,"byte_end":13450138,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450143,"byte_end":13450148,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450153,"byte_end":13450170,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450175,"byte_end":13450182,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6095},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450788,"byte_end":13450795,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram which is not bound to any address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450421,"byte_end":13450483,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450488,"byte_end":13450491,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450496,"byte_end":13450510,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450515,"byte_end":13450518,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450523,"byte_end":13450536,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450541,"byte_end":13450615,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450620,"byte_end":13450625,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450630,"byte_end":13450677,"line_start":79,"line_end":79,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450682,"byte_end":13450685,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450690,"byte_end":13450732,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450737,"byte_end":13450742,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450747,"byte_end":13450764,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450769,"byte_end":13450776,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6096},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451361,"byte_end":13451365,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450927,"byte_end":13450976,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450981,"byte_end":13450984,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns two sockets which are connected to each other.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13450989,"byte_end":13451047,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451052,"byte_end":13451055,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451060,"byte_end":13451074,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451079,"byte_end":13451082,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451087,"byte_end":13451100,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451105,"byte_end":13451179,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451184,"byte_end":13451189,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451194,"byte_end":13451241,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451246,"byte_end":13451249,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let (socket1, socket2) = UnixDatagram::pair()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451254,"byte_end":13451305,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451310,"byte_end":13451315,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451320,"byte_end":13451337,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451342,"byte_end":13451349,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6097},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452248,"byte_end":13452255,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub async fn connect<P: AsRef<Path>, '_>(&'_ Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451567,"byte_end":13451616,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451621,"byte_end":13451624,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The [`send`] method may be used to send data to the specified address. [`recv`] and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451629,"byte_end":13451716,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ [`recv_from`] will only receive data from that address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451721,"byte_end":13451780,"line_start":115,"line_end":115,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451785,"byte_end":13451788,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451793,"byte_end":13451819,"line_start":117,"line_end":117,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451824,"byte_end":13451850,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451855,"byte_end":13451891,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451896,"byte_end":13451899,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451904,"byte_end":13451918,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451923,"byte_end":13451926,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451931,"byte_end":13451944,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13451949,"byte_end":13452023,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452028,"byte_end":13452033,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452038,"byte_end":13452085,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452090,"byte_end":13452093,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452098,"byte_end":13452140,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452145,"byte_end":13452186,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452191,"byte_end":13452196,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452201,"byte_end":13452218,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452223,"byte_end":13452230,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6101},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452859,"byte_end":13452869,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452458,"byte_end":13452497,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452502,"byte_end":13452505,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452510,"byte_end":13452524,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452529,"byte_end":13452532,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452537,"byte_end":13452550,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452555,"byte_end":13452629,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452634,"byte_end":13452639,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452644,"byte_end":13452691,"line_start":146,"line_end":146,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452696,"byte_end":13452699,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452704,"byte_end":13452762,"line_start":148,"line_end":148,"column_start":5,"column_end":63}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452767,"byte_end":13452803,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452808,"byte_end":13452813,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452818,"byte_end":13452835,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452840,"byte_end":13452847,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6102},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453516,"byte_end":13453525,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13452960,"byte_end":13453006,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453011,"byte_end":13453014,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect the socket to a peer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453019,"byte_end":13453080,"line_start":159,"line_end":159,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453085,"byte_end":13453088,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453093,"byte_end":13453125,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453130,"byte_end":13453133,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453138,"byte_end":13453152,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453157,"byte_end":13453160,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453165,"byte_end":13453178,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453183,"byte_end":13453257,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453262,"byte_end":13453267,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453272,"byte_end":13453319,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453324,"byte_end":13453327,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453332,"byte_end":13453374,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453379,"byte_end":13453420,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/ let peer = socket.peer_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453425,"byte_end":13453460,"line_start":172,"line_end":172,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453465,"byte_end":13453470,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453475,"byte_end":13453492,"line_start":174,"line_end":174,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453497,"byte_end":13453504,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6103},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454159,"byte_end":13454168,"line_start":197,"line_end":197,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453615,"byte_end":13453649,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453654,"byte_end":13453657,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from where the data came.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453662,"byte_end":13453752,"line_start":182,"line_end":182,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453757,"byte_end":13453760,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453765,"byte_end":13453779,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453784,"byte_end":13453787,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453792,"byte_end":13453805,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453810,"byte_end":13453884,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453889,"byte_end":13453894,"line_start":188,"line_end":188,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453899,"byte_end":13453946,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453951,"byte_end":13453954,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13453959,"byte_end":13454001,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454006,"byte_end":13454038,"line_start":192,"line_end":192,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454043,"byte_end":13454097,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454102,"byte_end":13454107,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454112,"byte_end":13454129,"line_start":195,"line_end":195,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454134,"byte_end":13454141,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6106},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454788,"byte_end":13454792,"line_start":218,"line_end":218,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454282,"byte_end":13454316,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454321,"byte_end":13454324,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454329,"byte_end":13454378,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454383,"byte_end":13454386,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454391,"byte_end":13454405,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454410,"byte_end":13454413,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454418,"byte_end":13454431,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454436,"byte_end":13454510,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454515,"byte_end":13454520,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454525,"byte_end":13454572,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454577,"byte_end":13454580,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454585,"byte_end":13454643,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454648,"byte_end":13454680,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454685,"byte_end":13454726,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454731,"byte_end":13454736,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454741,"byte_end":13454758,"line_start":216,"line_end":216,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454763,"byte_end":13454770,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6109},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455379,"byte_end":13455386,"line_start":238,"line_end":238,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P: AsRef<Path>, '_, '_>(&'_ Self, &'_ [u8], P)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454887,"byte_end":13454941,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454946,"byte_end":13454949,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13454954,"byte_end":13455006,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455011,"byte_end":13455014,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455019,"byte_end":13455033,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455038,"byte_end":13455041,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455046,"byte_end":13455059,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455064,"byte_end":13455138,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455143,"byte_end":13455148,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455153,"byte_end":13455200,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455205,"byte_end":13455208,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455213,"byte_end":13455255,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455260,"byte_end":13455317,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455322,"byte_end":13455327,"line_start":235,"line_end":235,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455332,"byte_end":13455349,"line_start":236,"line_end":236,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455354,"byte_end":13455361,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6113},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456036,"byte_end":13456040,"line_start":259,"line_end":259,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455520,"byte_end":13455570,"line_start":242,"line_end":242,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455575,"byte_end":13455578,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455583,"byte_end":13455635,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455640,"byte_end":13455643,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455648,"byte_end":13455662,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455667,"byte_end":13455670,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455675,"byte_end":13455688,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455693,"byte_end":13455767,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455772,"byte_end":13455777,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455782,"byte_end":13455829,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455834,"byte_end":13455837,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455842,"byte_end":13455884,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455889,"byte_end":13455930,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ socket.send(b\"hello world\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455935,"byte_end":13455974,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455979,"byte_end":13455984,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13455989,"byte_end":13456006,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456011,"byte_end":13456018,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6116},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456856,"byte_end":13456864,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456131,"byte_end":13456196,"line_start":263,"line_end":263,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456201,"byte_end":13456204,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456209,"byte_end":13456299,"line_start":265,"line_end":265,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456304,"byte_end":13456393,"line_start":266,"line_end":266,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456398,"byte_end":13456401,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456406,"byte_end":13456476,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456481,"byte_end":13456484,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456489,"byte_end":13456504,"line_start":270,"line_end":270,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456509,"byte_end":13456512,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456517,"byte_end":13456530,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456535,"byte_end":13456609,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456614,"byte_end":13456619,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456624,"byte_end":13456671,"line_start":275,"line_end":275,"column_start":5,"column_end":52}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456676,"byte_end":13456703,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456708,"byte_end":13456711,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456716,"byte_end":13456758,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456763,"byte_end":13456800,"line_start":279,"line_end":279,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456805,"byte_end":13456810,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456815,"byte_end":13456832,"line_start":281,"line_end":281,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456837,"byte_end":13456844,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6184},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459788,"byte_end":13459800,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::os::unix::net::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":6185}],"decl_id":null,"docs":" A Unix domain socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A Unix domain socket server, listening for connections.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13458696,"byte_end":13458755,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13458756,"byte_end":13458759,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13458760,"byte_end":13458858,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ connections. These can be accepted by awaiting elements from the async stream of [`incoming`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13458859,"byte_end":13458956,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ connections.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13458957,"byte_end":13458973,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13458974,"byte_end":13458977,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13458978,"byte_end":13459034,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459035,"byte_end":13459038,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixListener`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459039,"byte_end":13459113,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459114,"byte_end":13459117,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixListener`]:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459118,"byte_end":13459159,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixListener.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459160,"byte_end":13459230,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459231,"byte_end":13459257,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459258,"byte_end":13459292,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459293,"byte_end":13459296,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459297,"byte_end":13459311,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459312,"byte_end":13459315,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459316,"byte_end":13459329,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459330,"byte_end":13459404,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459405,"byte_end":13459410,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459411,"byte_end":13459458,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459459,"byte_end":13459489,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459490,"byte_end":13459493,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459494,"byte_end":13459554,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459555,"byte_end":13459598,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459599,"byte_end":13459602,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459603,"byte_end":13459655,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459656,"byte_end":13459689,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459690,"byte_end":13459738,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459739,"byte_end":13459744,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459745,"byte_end":13459750,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459751,"byte_end":13459768,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459769,"byte_end":13459776,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6187},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460257,"byte_end":13460261,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixListener>::bind","value":"pub async fn bind<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram listener bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram listener bound to the given path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459867,"byte_end":13459928,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459933,"byte_end":13459936,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459941,"byte_end":13459955,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459960,"byte_end":13459963,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459968,"byte_end":13459981,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459986,"byte_end":13460060,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460065,"byte_end":13460070,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460075,"byte_end":13460122,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460127,"byte_end":13460130,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460135,"byte_end":13460195,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460200,"byte_end":13460205,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460210,"byte_end":13460227,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460232,"byte_end":13460239,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6191},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461027,"byte_end":13461033,"line_start":93,"line_end":93,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460483,"byte_end":13460538,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460543,"byte_end":13460546,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460551,"byte_end":13460643,"line_start":79,"line_end":79,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460648,"byte_end":13460651,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460656,"byte_end":13460670,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460675,"byte_end":13460678,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460683,"byte_end":13460696,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460701,"byte_end":13460775,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460780,"byte_end":13460785,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460790,"byte_end":13460837,"line_start":86,"line_end":86,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460842,"byte_end":13460845,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460850,"byte_end":13460910,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/ let (socket, addr) = listener.accept().await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460915,"byte_end":13460965,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460970,"byte_end":13460975,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13460980,"byte_end":13460997,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461002,"byte_end":13461009,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6194},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462225,"byte_end":13462233,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461279,"byte_end":13461324,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461329,"byte_end":13461332,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461337,"byte_end":13461428,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461433,"byte_end":13461525,"line_start":107,"line_end":107,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461530,"byte_end":13461533,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461538,"byte_end":13461568,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461573,"byte_end":13461653,"line_start":110,"line_end":110,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461658,"byte_end":13461661,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461666,"byte_end":13461680,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461685,"byte_end":13461688,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461693,"byte_end":13461706,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461711,"byte_end":13461785,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461790,"byte_end":13461795,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461800,"byte_end":13461847,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461852,"byte_end":13461882,"line_start":118,"line_end":118,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461887,"byte_end":13461890,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461895,"byte_end":13461955,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13461960,"byte_end":13462003,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462008,"byte_end":13462011,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462016,"byte_end":13462068,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462073,"byte_end":13462106,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462111,"byte_end":13462159,"line_start":125,"line_end":125,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462164,"byte_end":13462169,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462174,"byte_end":13462179,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462184,"byte_end":13462201,"line_start":128,"line_end":128,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462206,"byte_end":13462213,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6195},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462776,"byte_end":13462786,"line_start":150,"line_end":150,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462356,"byte_end":13462410,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462415,"byte_end":13462418,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462423,"byte_end":13462437,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462442,"byte_end":13462445,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462450,"byte_end":13462463,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462468,"byte_end":13462542,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462547,"byte_end":13462552,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462557,"byte_end":13462604,"line_start":143,"line_end":143,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462609,"byte_end":13462612,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462617,"byte_end":13462677,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462682,"byte_end":13462720,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462725,"byte_end":13462730,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462735,"byte_end":13462752,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462757,"byte_end":13462764,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6198},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463812,"byte_end":13463820,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::os::unix::net::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":6200}],"decl_id":null,"docs":" A stream of incoming Unix domain socket connections.","sig":null,"attributes":[{"value":"/ A stream of incoming Unix domain socket connections.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463214,"byte_end":13463270,"line_start":168,"line_end":168,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463271,"byte_end":13463274,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463275,"byte_end":13463373,"line_start":170,"line_end":170,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`UnixListener`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463374,"byte_end":13463433,"line_start":171,"line_end":171,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463434,"byte_end":13463437,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::Incoming`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463438,"byte_end":13463508,"line_start":173,"line_end":173,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463509,"byte_end":13463512,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::Incoming`]: https://doc.rust-lang.org/std/os/unix/net/struct.Incoming.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463513,"byte_end":13463613,"line_start":175,"line_end":175,"column_start":1,"column_end":101}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463614,"byte_end":13463694,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.UnixListener.html#method.incoming","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463695,"byte_end":13463753,"line_start":177,"line_end":177,"column_start":1,"column_end":59}},{"value":"/ [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463754,"byte_end":13463800,"line_start":178,"line_end":178,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6312},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466239,"byte_end":13466249,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::os::unix::net::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":6313}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[{"value":"/ A Unix stream socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465570,"byte_end":13465595,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465596,"byte_end":13465599,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixStream`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465600,"byte_end":13465672,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465673,"byte_end":13465676,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixStream`]:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465677,"byte_end":13465716,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465717,"byte_end":13465785,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465786,"byte_end":13465789,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465790,"byte_end":13465804,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465805,"byte_end":13465808,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465809,"byte_end":13465822,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465823,"byte_end":13465897,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465898,"byte_end":13465903,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465904,"byte_end":13465949,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465950,"byte_end":13465980,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465981,"byte_end":13465984,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13465985,"byte_end":13466048,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466049,"byte_end":13466093,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466094,"byte_end":13466097,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut response = Vec::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466098,"byte_end":13466132,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ stream.read_to_end(&mut response).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466133,"byte_end":13466178,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466179,"byte_end":13466184,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466185,"byte_end":13466202,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466203,"byte_end":13466210,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6272},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466706,"byte_end":13466713,"line_start":59,"line_end":59,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects to the socket to the specified address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466328,"byte_end":13466380,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466385,"byte_end":13466388,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466393,"byte_end":13466407,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466412,"byte_end":13466415,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466420,"byte_end":13466433,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466438,"byte_end":13466512,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466517,"byte_end":13466522,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466527,"byte_end":13466572,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466577,"byte_end":13466580,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466585,"byte_end":13466644,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466649,"byte_end":13466654,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466659,"byte_end":13466676,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466681,"byte_end":13466688,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6276},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467362,"byte_end":13467366,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466944,"byte_end":13466993,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466998,"byte_end":13467001,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns two streams which are connected to each other.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467006,"byte_end":13467064,"line_start":68,"line_end":68,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467069,"byte_end":13467072,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467077,"byte_end":13467091,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467096,"byte_end":13467099,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467104,"byte_end":13467117,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467122,"byte_end":13467196,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467201,"byte_end":13467206,"line_start":74,"line_end":74,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467211,"byte_end":13467256,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467261,"byte_end":13467264,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::pair()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467269,"byte_end":13467306,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467311,"byte_end":13467316,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467321,"byte_end":13467338,"line_start":79,"line_end":79,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467343,"byte_end":13467350,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6277},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468072,"byte_end":13468082,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467643,"byte_end":13467711,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467716,"byte_end":13467719,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467724,"byte_end":13467738,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467743,"byte_end":13467746,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467751,"byte_end":13467764,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467769,"byte_end":13467843,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467848,"byte_end":13467853,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467858,"byte_end":13467903,"line_start":99,"line_end":99,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467908,"byte_end":13467911,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467916,"byte_end":13467975,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13467980,"byte_end":13468016,"line_start":102,"line_end":102,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468021,"byte_end":13468026,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468031,"byte_end":13468048,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468053,"byte_end":13468060,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6278},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468602,"byte_end":13468611,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468173,"byte_end":13468242,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468247,"byte_end":13468250,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468255,"byte_end":13468269,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468274,"byte_end":13468277,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468282,"byte_end":13468295,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468300,"byte_end":13468374,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468379,"byte_end":13468384,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468389,"byte_end":13468434,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468439,"byte_end":13468442,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468447,"byte_end":13468506,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468511,"byte_end":13468546,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468551,"byte_end":13468556,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468561,"byte_end":13468578,"line_start":122,"line_end":122,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468583,"byte_end":13468590,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6279},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469414,"byte_end":13469422,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468701,"byte_end":13468767,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468772,"byte_end":13468775,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468780,"byte_end":13468870,"line_start":130,"line_end":130,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468875,"byte_end":13468964,"line_start":131,"line_end":131,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468969,"byte_end":13468972,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13468977,"byte_end":13469047,"line_start":133,"line_end":133,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469052,"byte_end":13469055,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469060,"byte_end":13469073,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469078,"byte_end":13469152,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469157,"byte_end":13469162,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469167,"byte_end":13469212,"line_start":138,"line_end":138,"column_start":5,"column_end":50}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469217,"byte_end":13469244,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469249,"byte_end":13469252,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469257,"byte_end":13469316,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469321,"byte_end":13469358,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469363,"byte_end":13469368,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469373,"byte_end":13469390,"line_start":144,"line_end":144,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469395,"byte_end":13469402,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4312},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":6319},{"krate":0,"index":6322},{"krate":0,"index":6325},{"krate":0,"index":6328},{"krate":0,"index":6331},{"krate":0,"index":6334},{"krate":0,"index":6337},{"krate":0,"index":6340},{"krate":0,"index":6343},{"krate":0,"index":6346},{"krate":0,"index":6349},{"krate":0,"index":6352},{"krate":0,"index":6355},{"krate":0,"index":6358},{"krate":0,"index":6361}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16447,"byte_end":16470,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async prelude.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296517,"byte_end":13296539,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296540,"byte_end":13296543,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296544,"byte_end":13296624,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296625,"byte_end":13296628,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296629,"byte_end":13296643,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296644,"byte_end":13296647,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Import the prelude with:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296648,"byte_end":13296676,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296677,"byte_end":13296680,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296681,"byte_end":13296688,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296689,"byte_end":13296719,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296720,"byte_end":13296750,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/prelude.rs","byte_start":13296751,"byte_end":13296758,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4313},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4318},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4341},{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6368},{"krate":0,"index":6371},{"krate":0,"index":6374},{"krate":0,"index":6377},{"krate":0,"index":6464}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16447,"byte_end":16470,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Synchronization primitives.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13297746,"byte_end":13297777,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13297778,"byte_end":13297781,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::sync`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13297782,"byte_end":13297835,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13297836,"byte_end":13297839,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13297840,"byte_end":13297904,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13297905,"byte_end":13297908,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## The need for synchronization","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13297909,"byte_end":13297944,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13297945,"byte_end":13297948,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13297949,"byte_end":13298023,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298024,"byte_end":13298095,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298096,"byte_end":13298099,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Conceptually, a Rust program is a series of operations which will","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298100,"byte_end":13298169,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ be executed on a computer. The timeline of events happening in the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298170,"byte_end":13298240,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ program is consistent with the order of the operations in the code.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298241,"byte_end":13298312,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298313,"byte_end":13298316,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consider the following code, operating on some global static variables:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298317,"byte_end":13298392,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298393,"byte_end":13298396,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298397,"byte_end":13298404,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ static mut A: u32 = 0;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298405,"byte_end":13298431,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ static mut B: u32 = 0;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298432,"byte_end":13298458,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ static mut C: u32 = 0;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298459,"byte_end":13298485,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298486,"byte_end":13298489,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298490,"byte_end":13298505,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     unsafe {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298506,"byte_end":13298522,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/         A = 3;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298523,"byte_end":13298541,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/         B = 4;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298542,"byte_end":13298560,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         A = A + B;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298561,"byte_end":13298583,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/         C = B;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298584,"byte_end":13298602,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298603,"byte_end":13298645,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/         C = A;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298646,"byte_end":13298664,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298665,"byte_end":13298674,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298675,"byte_end":13298680,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298681,"byte_end":13298688,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298689,"byte_end":13298692,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298693,"byte_end":13298770,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298771,"byte_end":13298836,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ modified twice.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298837,"byte_end":13298856,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298857,"byte_end":13298860,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When only a single thread is involved, the results are as expected:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298861,"byte_end":13298932,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ the line `7 4 4` gets printed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298933,"byte_end":13298967,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298968,"byte_end":13298971,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13298972,"byte_end":13299049,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ final generated machine code might look very different from the code:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299050,"byte_end":13299123,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299124,"byte_end":13299127,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299128,"byte_end":13299203,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299204,"byte_end":13299255,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299256,"byte_end":13299259,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299260,"byte_end":13299340,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/   in a temporary location until it gets printed, with the global variable","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299341,"byte_end":13299418,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   never getting updated.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299419,"byte_end":13299447,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299448,"byte_end":13299451,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The final result could be determined just by looking at the code","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299452,"byte_end":13299522,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/   at compile time, so [constant folding] might turn the whole","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299523,"byte_end":13299588,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299589,"byte_end":13299635,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299636,"byte_end":13299639,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The compiler is allowed to perform any combination of these","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299640,"byte_end":13299703,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ optimizations, as long as the final optimized code, when executed,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299704,"byte_end":13299774,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ produces the same results as the one without optimizations.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299775,"byte_end":13299838,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299839,"byte_end":13299842,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299843,"byte_end":13299913,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ about the program's execution order are often wrong. Access to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299914,"byte_end":13299980,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ global variables can lead to nondeterministic results, **even if**","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13299981,"byte_end":13300051,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300052,"byte_end":13300121,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ to introduce synchronization bugs.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300122,"byte_end":13300160,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300161,"byte_end":13300164,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300165,"byte_end":13300240,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300241,"byte_end":13300311,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ synchronization primitives in this module.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300312,"byte_end":13300358,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300359,"byte_end":13300362,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300363,"byte_end":13300433,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300434,"byte_end":13300513,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300514,"byte_end":13300517,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Out-of-order execution","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300518,"byte_end":13300547,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300548,"byte_end":13300551,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instructions can execute in a different order from the one we define, due to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300552,"byte_end":13300632,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ various reasons:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300633,"byte_end":13300653,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300654,"byte_end":13300657,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300658,"byte_end":13300734,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300735,"byte_end":13300811,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300812,"byte_end":13300890,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   start [prefetching] the values from memory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300891,"byte_end":13300940,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300941,"byte_end":13300944,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13300945,"byte_end":13301015,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/   signal handlers or certain kinds of low-level code.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301016,"byte_end":13301073,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/   Use [compiler fences] to prevent this reordering.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301074,"byte_end":13301129,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301130,"byte_end":13301133,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301134,"byte_end":13301201,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301202,"byte_end":13301259,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301260,"byte_end":13301330,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/   even though the machine code describes a sequential process.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301331,"byte_end":13301397,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301398,"byte_end":13301401,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301402,"byte_end":13301468,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301469,"byte_end":13301472,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301473,"byte_end":13301542,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301543,"byte_end":13301611,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/   kinds of primitives to deal with synchronization:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301612,"byte_end":13301667,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301668,"byte_end":13301737,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/   other CPUs in the right order.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301738,"byte_end":13301774,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"/   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301775,"byte_end":13301844,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/   memory location doesn't lead to undefined behavior.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301845,"byte_end":13301902,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301903,"byte_end":13301906,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301907,"byte_end":13301973,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13301974,"byte_end":13302061,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"/ [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302062,"byte_end":13302134,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302135,"byte_end":13302205,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302206,"byte_end":13302282,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302283,"byte_end":13302360,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302361,"byte_end":13302364,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Higher-level synchronization objects","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302365,"byte_end":13302408,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302409,"byte_end":13302412,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302413,"byte_end":13302491,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ inconvenient to use, which is why async-std also exposes some","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302492,"byte_end":13302557,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ higher-level synchronization objects.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302558,"byte_end":13302599,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302600,"byte_end":13302603,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ These abstractions can be built out of lower-level primitives.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302604,"byte_end":13302670,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ For efficiency, the sync objects in async-std are usually","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302671,"byte_end":13302732,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ implemented with help from the scheduler, which is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302733,"byte_end":13302787,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302788,"byte_end":13302856,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ a lock.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302857,"byte_end":13302868,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302869,"byte_end":13302872,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The following is an overview of the available synchronization","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302873,"byte_end":13302938,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ objects:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302939,"byte_end":13302951,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302952,"byte_end":13302955,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13302956,"byte_end":13303026,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303027,"byte_end":13303094,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/   data until all the threads have finished using it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303095,"byte_end":13303151,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303152,"byte_end":13303155,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303156,"byte_end":13303224,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/   to reach a point in the program, before continuing execution all","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303225,"byte_end":13303295,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/   together.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303296,"byte_end":13303311,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303312,"byte_end":13303315,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - [`channel`]: Multi-producer, multi-consumer queues, used for","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303316,"byte_end":13303382,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/   message-based communication. Can provide a lightweight","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303383,"byte_end":13303443,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/   inter-task synchronisation mechanism, at the cost of some","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303444,"byte_end":13303507,"line_start":134,"line_end":134,"column_start":1,"column_end":64}},{"value":"/   extra memory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303508,"byte_end":13303527,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303528,"byte_end":13303531,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303532,"byte_end":13303598,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"/   most one task at a time is able to access some data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303599,"byte_end":13303657,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303658,"byte_end":13303661,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303662,"byte_end":13303730,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"/   multiple readers at the same time, while allowing only one","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303731,"byte_end":13303795,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"/   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303796,"byte_end":13303866,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/   a mutex.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303867,"byte_end":13303881,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303882,"byte_end":13303885,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: struct.Arc.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303886,"byte_end":13303914,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303915,"byte_end":13303951,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303952,"byte_end":13303984,"line_start":147,"line_end":147,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13303985,"byte_end":13304017,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304018,"byte_end":13304052,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304053,"byte_end":13304056,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304057,"byte_end":13304071,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304072,"byte_end":13304075,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304076,"byte_end":13304138,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304139,"byte_end":13304142,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304143,"byte_end":13304150,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304151,"byte_end":13304190,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304191,"byte_end":13304196,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304197,"byte_end":13304235,"line_start":158,"line_end":158,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304236,"byte_end":13304260,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304261,"byte_end":13304264,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304265,"byte_end":13304302,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304303,"byte_end":13304327,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304328,"byte_end":13304331,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304332,"byte_end":13304360,"line_start":164,"line_end":164,"column_start":1,"column_end":29}},{"value":"/     *m2.lock().await = 1;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304361,"byte_end":13304390,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/ })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304391,"byte_end":13304397,"line_start":166,"line_end":166,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304398,"byte_end":13304409,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304410,"byte_end":13304413,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(*m1.lock().await, 1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304414,"byte_end":13304450,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304451,"byte_end":13304456,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304457,"byte_end":13304465,"line_start":171,"line_end":171,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304466,"byte_end":13304473,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/mod.rs","byte_start":13304475,"byte_end":13304515,"line_start":174,"line_end":174,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6523},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472449,"byte_end":13472466,"line_start":11,"line_end":11,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::sync::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6408},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472680,"byte_end":13472689,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the wait was known to have timed out.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472609,"byte_end":13472668,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6409},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473709,"byte_end":13473716,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::sync::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":6410}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472730,"byte_end":13472754,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472755,"byte_end":13472758,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::Condvar`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472759,"byte_end":13472819,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472820,"byte_end":13472823,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Condvar`]: https://doc.rust-lang.org/std/sync/struct.Condvar.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472824,"byte_end":13472906,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472907,"byte_end":13472910,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472911,"byte_end":13472925,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472926,"byte_end":13472929,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472930,"byte_end":13472937,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472938,"byte_end":13472977,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472978,"byte_end":13472983,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472984,"byte_end":13473007,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473008,"byte_end":13473011,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473012,"byte_end":13473054,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473055,"byte_end":13473079,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473080,"byte_end":13473083,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473084,"byte_end":13473145,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473146,"byte_end":13473175,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473176,"byte_end":13473179,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473180,"byte_end":13473257,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473258,"byte_end":13473286,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473287,"byte_end":13473322,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473323,"byte_end":13473367,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/     *started = true;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473368,"byte_end":13473392,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473393,"byte_end":13473453,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473454,"byte_end":13473480,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473481,"byte_end":13473488,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473489,"byte_end":13473492,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473493,"byte_end":13473532,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473533,"byte_end":13473563,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473564,"byte_end":13473604,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ while !*started {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473605,"byte_end":13473626,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473627,"byte_end":13473670,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473671,"byte_end":13473676,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473677,"byte_end":13473680,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473681,"byte_end":13473689,"line_start":57,"line_end":57,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473690,"byte_end":13473697,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6416},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474102,"byte_end":13474105,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Condvar>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable","sig":null,"attributes":[{"value":"/ Creates a new condition variable","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473914,"byte_end":13473950,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473955,"byte_end":13473958,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473963,"byte_end":13473977,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473982,"byte_end":13473985,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473990,"byte_end":13473997,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Condvar;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474002,"byte_end":13474035,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474040,"byte_end":13474043,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let cvar = Condvar::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474048,"byte_end":13474078,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474083,"byte_end":13474090,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6417},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475328,"byte_end":13475332,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"name":"wait","qualname":"<Condvar>::wait","value":"pub async fn wait<'a, T, '_>(&'_ Self, MutexGuard) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until this condition variable receives a notification.","sig":null,"attributes":[{"value":"/ Blocks the current task until this condition variable receives a notification.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474194,"byte_end":13474276,"line_start":88,"line_end":88,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474281,"byte_end":13474284,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Unlike the std equivalent, this does not check that a single mutex is used at runtime.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474289,"byte_end":13474379,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/ However, as a best practice avoid using with multiple mutexes.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474384,"byte_end":13474450,"line_start":91,"line_end":91,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474455,"byte_end":13474458,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474463,"byte_end":13474477,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474482,"byte_end":13474485,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474490,"byte_end":13474497,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474502,"byte_end":13474541,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474546,"byte_end":13474569,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474574,"byte_end":13474577,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474582,"byte_end":13474624,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474629,"byte_end":13474653,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474658,"byte_end":13474661,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474666,"byte_end":13474727,"line_start":102,"line_end":102,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474732,"byte_end":13474761,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474766,"byte_end":13474769,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474774,"byte_end":13474802,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474807,"byte_end":13474842,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474847,"byte_end":13474891,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474896,"byte_end":13474920,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474925,"byte_end":13474985,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13474990,"byte_end":13475016,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475021,"byte_end":13475028,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475033,"byte_end":13475036,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475041,"byte_end":13475080,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475085,"byte_end":13475115,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475120,"byte_end":13475160,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475165,"byte_end":13475186,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475191,"byte_end":13475234,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475239,"byte_end":13475244,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475249,"byte_end":13475257,"line_start":119,"line_end":119,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475262,"byte_end":13475269,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475274,"byte_end":13475310,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6425},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476893,"byte_end":13476903,"line_start":171,"line_end":171,"column_start":18,"column_end":28},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"pub async fn wait_until<'a, T, F, '_>(&'_ Self, MutexGuard, F)\n-> /*impl Trait*/ where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current taks until this condition variable receives a notification and the\n required condition is met. Spurious wakeups are ignored and this function will only\n return once the condition has been met.","sig":null,"attributes":[{"value":"/ Blocks the current taks until this condition variable receives a notification and the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475730,"byte_end":13475819,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/ required condition is met. Spurious wakeups are ignored and this function will only","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475824,"byte_end":13475911,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ return once the condition has been met.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475916,"byte_end":13475959,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475964,"byte_end":13475967,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475972,"byte_end":13475986,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475991,"byte_end":13475994,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13475999,"byte_end":13476006,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476011,"byte_end":13476050,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476055,"byte_end":13476060,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476065,"byte_end":13476088,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476093,"byte_end":13476096,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476101,"byte_end":13476143,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476148,"byte_end":13476172,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476177,"byte_end":13476180,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476185,"byte_end":13476246,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476251,"byte_end":13476280,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476285,"byte_end":13476288,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476293,"byte_end":13476321,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476326,"byte_end":13476361,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476366,"byte_end":13476410,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476415,"byte_end":13476439,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476444,"byte_end":13476504,"line_start":159,"line_end":159,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476509,"byte_end":13476535,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476540,"byte_end":13476547,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476552,"byte_end":13476555,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476560,"byte_end":13476599,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476604,"byte_end":13476634,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476639,"byte_end":13476712,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ let _guard = cvar.wait_until(lock.lock().await, |started| { *started }).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476717,"byte_end":13476799,"line_start":166,"line_end":166,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476804,"byte_end":13476809,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476814,"byte_end":13476822,"line_start":168,"line_end":168,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476827,"byte_end":13476834,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13476839,"byte_end":13476875,"line_start":170,"line_end":170,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6431},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478510,"byte_end":13478522,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"wait_timeout","qualname":"<Condvar>::wait_timeout","value":"pub async fn wait_timeout<'a, T, '_>(&'_ Self, MutexGuard, Duration)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477190,"byte_end":13477285,"line_start":185,"line_end":185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477290,"byte_end":13477293,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ For these reasons `Condvar::wait_timeout_until` is recommended in most cases.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477298,"byte_end":13477379,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477384,"byte_end":13477387,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477392,"byte_end":13477406,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477411,"byte_end":13477414,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477419,"byte_end":13477426,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477431,"byte_end":13477470,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477475,"byte_end":13477480,"line_start":193,"line_end":193,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477485,"byte_end":13477508,"line_start":194,"line_end":194,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477513,"byte_end":13477541,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477546,"byte_end":13477549,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477554,"byte_end":13477596,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477601,"byte_end":13477625,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477630,"byte_end":13477633,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477638,"byte_end":13477699,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477704,"byte_end":13477733,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477738,"byte_end":13477741,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477746,"byte_end":13477774,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/   let (lock, cvar) = &*pair2;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477779,"byte_end":13477812,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/   let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477817,"byte_end":13477859,"line_start":205,"line_end":205,"column_start":5,"column_end":47}},{"value":"/   *started = true;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477864,"byte_end":13477886,"line_start":206,"line_end":206,"column_start":5,"column_end":27}},{"value":"/   // We notify the condvar that the value has changed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477891,"byte_end":13477949,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/   cvar.notify_one();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477954,"byte_end":13477978,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477983,"byte_end":13477990,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13477995,"byte_end":13477998,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478003,"byte_end":13478041,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478046,"byte_end":13478076,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478081,"byte_end":13478121,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478126,"byte_end":13478136,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/   let result = cvar.wait_timeout(started, Duration::from_millis(10)).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478141,"byte_end":13478220,"line_start":215,"line_end":215,"column_start":5,"column_end":84}},{"value":"/   started = result.0;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478225,"byte_end":13478250,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/   if *started == true {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478255,"byte_end":13478282,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/       // We received the notification and the value has been updated, we can leave.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478287,"byte_end":13478374,"line_start":218,"line_end":218,"column_start":5,"column_end":92}},{"value":"/       break","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478379,"byte_end":13478394,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/   }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478399,"byte_end":13478406,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478411,"byte_end":13478416,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478421,"byte_end":13478426,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478431,"byte_end":13478439,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478444,"byte_end":13478451,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478456,"byte_end":13478492,"line_start":225,"line_end":225,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6436},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480170,"byte_end":13480188,"line_start":275,"line_end":275,"column_start":18,"column_end":36},"name":"wait_timeout_until","qualname":"<Condvar>::wait_timeout_until","value":"pub async fn wait_timeout_until<'a, T, F,\n                                '_>(&'_ Self, MutexGuard, Duration, F)\n-> /*impl Trait*/ where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.\n Spurious wakes will not cause this function to return.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13478904,"byte_end":13478999,"line_start":238,"line_end":238,"column_start":5,"column_end":100}},{"value":"/ Spurious wakes will not cause this function to return.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479004,"byte_end":13479062,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479067,"byte_end":13479070,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479075,"byte_end":13479089,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479094,"byte_end":13479101,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479106,"byte_end":13479145,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479150,"byte_end":13479173,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479178,"byte_end":13479206,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479211,"byte_end":13479214,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479219,"byte_end":13479261,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479266,"byte_end":13479290,"line_start":248,"line_end":248,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479295,"byte_end":13479298,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479303,"byte_end":13479364,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479369,"byte_end":13479398,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479403,"byte_end":13479406,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479411,"byte_end":13479439,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479444,"byte_end":13479479,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479484,"byte_end":13479528,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479533,"byte_end":13479557,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479562,"byte_end":13479622,"line_start":257,"line_end":257,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479627,"byte_end":13479653,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479658,"byte_end":13479665,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479670,"byte_end":13479673,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479678,"byte_end":13479716,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479721,"byte_end":13479751,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/ let result = cvar.wait_timeout_until(","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479756,"byte_end":13479797,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/     lock.lock().await,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479802,"byte_end":13479828,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/     Duration::from_millis(100),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479833,"byte_end":13479868,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     |&mut started| started,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479873,"byte_end":13479904,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/ ).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479909,"byte_end":13479921,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/ if result.1.timed_out() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479926,"byte_end":13479955,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/     // timed-out without the condition ever evaluating to true.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13479960,"byte_end":13480027,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480032,"byte_end":13480037,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ // access the locked mutex via result.0","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480042,"byte_end":13480085,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480090,"byte_end":13480099,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480104,"byte_end":13480111,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480116,"byte_end":13480152,"line_start":274,"line_end":274,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6442},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481551,"byte_end":13481561,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked task on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked task on this condvar.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480660,"byte_end":13480706,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480711,"byte_end":13480714,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480719,"byte_end":13480733,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480738,"byte_end":13480741,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480746,"byte_end":13480753,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480758,"byte_end":13480809,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480814,"byte_end":13480837,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480842,"byte_end":13480845,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480850,"byte_end":13480892,"line_start":299,"line_end":299,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480897,"byte_end":13480921,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480926,"byte_end":13480929,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13480934,"byte_end":13480995,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481000,"byte_end":13481029,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481034,"byte_end":13481037,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481042,"byte_end":13481070,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481075,"byte_end":13481110,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481115,"byte_end":13481159,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481164,"byte_end":13481188,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481193,"byte_end":13481253,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481258,"byte_end":13481284,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481289,"byte_end":13481296,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481301,"byte_end":13481304,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481309,"byte_end":13481348,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481353,"byte_end":13481383,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481388,"byte_end":13481428,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481433,"byte_end":13481454,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481459,"byte_end":13481502,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481507,"byte_end":13481512,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481517,"byte_end":13481527,"line_start":319,"line_end":319,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481532,"byte_end":13481539,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6443},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482598,"byte_end":13482608,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"pub fn notify_all(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked tasks on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked tasks on this condvar.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481616,"byte_end":13481663,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481668,"byte_end":13481671,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481676,"byte_end":13481690,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481695,"byte_end":13481702,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481707,"byte_end":13481758,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481763,"byte_end":13481768,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481773,"byte_end":13481796,"line_start":331,"line_end":331,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481801,"byte_end":13481804,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481809,"byte_end":13481851,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481856,"byte_end":13481880,"line_start":334,"line_end":334,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481885,"byte_end":13481888,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481893,"byte_end":13481954,"line_start":336,"line_end":336,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481959,"byte_end":13481988,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13481993,"byte_end":13481996,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482001,"byte_end":13482029,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482034,"byte_end":13482069,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482074,"byte_end":13482118,"line_start":341,"line_end":341,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482123,"byte_end":13482147,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482152,"byte_end":13482212,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_all();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482217,"byte_end":13482243,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482248,"byte_end":13482255,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482260,"byte_end":13482263,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482268,"byte_end":13482307,"line_start":347,"line_end":347,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482312,"byte_end":13482342,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482347,"byte_end":13482387,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482392,"byte_end":13482465,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ while !*started {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482470,"byte_end":13482491,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482496,"byte_end":13482539,"line_start":352,"line_end":352,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482544,"byte_end":13482549,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482554,"byte_end":13482559,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482564,"byte_end":13482574,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482579,"byte_end":13482586,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4344},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/channel.rs","parent":null,"children":[{"krate":0,"index":4345}],"decl_id":null,"docs":" Channels\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16447,"byte_end":16470,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Channels","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/channel.rs","byte_start":13304937,"byte_end":13304949,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":6554},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":6555},{"krate":0,"index":6558},{"krate":0,"index":6561},{"krate":0,"index":6564},{"krate":0,"index":6567},{"krate":0,"index":6570},{"krate":0,"index":6573},{"krate":0,"index":6576},{"krate":0,"index":6579},{"krate":0,"index":6582},{"krate":0,"index":6585},{"krate":0,"index":6588},{"krate":0,"index":6591},{"krate":0,"index":6594},{"krate":0,"index":6597},{"krate":0,"index":6600},{"krate":0,"index":6603},{"krate":0,"index":6606},{"krate":0,"index":6609},{"krate":0,"index":6612},{"krate":0,"index":6615},{"krate":0,"index":6618},{"krate":0,"index":6621},{"krate":0,"index":6624},{"krate":0,"index":6627},{"krate":0,"index":6630},{"krate":0,"index":6653},{"krate":0,"index":6673},{"krate":0,"index":6692},{"krate":0,"index":6711},{"krate":0,"index":6732},{"krate":0,"index":6777},{"krate":0,"index":6996},{"krate":0,"index":6997},{"krate":0,"index":7017},{"krate":0,"index":7032},{"krate":0,"index":7063},{"krate":0,"index":7064},{"krate":0,"index":7083},{"krate":0,"index":7131},{"krate":0,"index":7154},{"krate":0,"index":7173},{"krate":0,"index":7192},{"krate":0,"index":7211},{"krate":0,"index":7230},{"krate":0,"index":7250},{"krate":0,"index":7268},{"krate":0,"index":7286}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16856,"byte_end":16883,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11113,"byte_end":11147,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/ Filesystem manipulation operations.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491300,"byte_end":13491339,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491340,"byte_end":13491343,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::fs`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491344,"byte_end":13491395,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491396,"byte_end":13491399,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491400,"byte_end":13491446,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/ [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491447,"byte_end":13491499,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/ [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491500,"byte_end":13491560,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491561,"byte_end":13491564,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491565,"byte_end":13491599,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491600,"byte_end":13491603,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491604,"byte_end":13491648,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491649,"byte_end":13491699,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491700,"byte_end":13491703,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491704,"byte_end":13491718,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491719,"byte_end":13491722,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491723,"byte_end":13491772,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491773,"byte_end":13491776,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491777,"byte_end":13491790,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491791,"byte_end":13491865,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491866,"byte_end":13491871,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491872,"byte_end":13491900,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491901,"byte_end":13491931,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491932,"byte_end":13491935,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491936,"byte_end":13491984,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13491985,"byte_end":13492029,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492030,"byte_end":13492035,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492036,"byte_end":13492053,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/mod.rs","byte_start":13492054,"byte_end":13492061,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6647},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13494123,"byte_end":13494135,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493321,"byte_end":13493362,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493363,"byte_end":13493366,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493367,"byte_end":13493465,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493466,"byte_end":13493485,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493486,"byte_end":13493489,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493490,"byte_end":13493557,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493558,"byte_end":13493561,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493562,"byte_end":13493646,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493647,"byte_end":13493650,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493651,"byte_end":13493663,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493664,"byte_end":13493667,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493668,"byte_end":13493726,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493727,"byte_end":13493730,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493731,"byte_end":13493792,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493793,"byte_end":13493850,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493851,"byte_end":13493887,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493888,"byte_end":13493891,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493892,"byte_end":13493906,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493907,"byte_end":13493910,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493911,"byte_end":13493924,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13493925,"byte_end":13493999,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13494000,"byte_end":13494005,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13494006,"byte_end":13494028,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13494029,"byte_end":13494032,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13494033,"byte_end":13494077,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13494078,"byte_end":13494083,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13494084,"byte_end":13494101,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/canonicalize.rs","byte_start":13494102,"byte_end":13494109,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6666},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495725,"byte_end":13495729,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13494527,"byte_end":13494595,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13494596,"byte_end":13494599,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13494600,"byte_end":13494699,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13494700,"byte_end":13494725,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13494726,"byte_end":13494729,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13494730,"byte_end":13494827,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13494828,"byte_end":13494902,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13494903,"byte_end":13494906,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13494907,"byte_end":13495003,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495004,"byte_end":13495030,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495031,"byte_end":13495034,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495035,"byte_end":13495094,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495095,"byte_end":13495098,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495099,"byte_end":13495129,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495130,"byte_end":13495166,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495167,"byte_end":13495235,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495236,"byte_end":13495239,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495240,"byte_end":13495252,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495253,"byte_end":13495256,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495257,"byte_end":13495315,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495316,"byte_end":13495319,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495320,"byte_end":13495368,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495369,"byte_end":13495442,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495443,"byte_end":13495479,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495480,"byte_end":13495483,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495484,"byte_end":13495498,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495499,"byte_end":13495502,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495503,"byte_end":13495516,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495517,"byte_end":13495591,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495592,"byte_end":13495597,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495598,"byte_end":13495620,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495621,"byte_end":13495624,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495625,"byte_end":13495679,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495680,"byte_end":13495685,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495686,"byte_end":13495703,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/copy.rs","byte_start":13495704,"byte_end":13495711,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6686},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13497124,"byte_end":13497134,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496159,"byte_end":13496187,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496188,"byte_end":13496191,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496192,"byte_end":13496289,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496290,"byte_end":13496381,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496382,"byte_end":13496385,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496386,"byte_end":13496451,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496452,"byte_end":13496455,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496456,"byte_end":13496502,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496503,"byte_end":13496583,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496584,"byte_end":13496587,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496588,"byte_end":13496600,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496601,"byte_end":13496604,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496605,"byte_end":13496663,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496664,"byte_end":13496667,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496668,"byte_end":13496729,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496730,"byte_end":13496780,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496781,"byte_end":13496849,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496850,"byte_end":13496886,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496887,"byte_end":13496890,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496891,"byte_end":13496905,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496906,"byte_end":13496909,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496910,"byte_end":13496923,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496924,"byte_end":13496998,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13496999,"byte_end":13497004,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13497005,"byte_end":13497027,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13497028,"byte_end":13497031,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13497032,"byte_end":13497078,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13497079,"byte_end":13497084,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13497085,"byte_end":13497102,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir.rs","byte_start":13497103,"byte_end":13497110,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6705},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498249,"byte_end":13498263,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497494,"byte_end":13497565,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497566,"byte_end":13497569,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497570,"byte_end":13497639,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497640,"byte_end":13497643,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497644,"byte_end":13497732,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497733,"byte_end":13497736,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497737,"byte_end":13497749,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497750,"byte_end":13497753,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497754,"byte_end":13497812,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497813,"byte_end":13497816,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497817,"byte_end":13497878,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497879,"byte_end":13497970,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13497971,"byte_end":13498007,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498008,"byte_end":13498011,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498012,"byte_end":13498026,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498027,"byte_end":13498030,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498031,"byte_end":13498044,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498045,"byte_end":13498119,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498120,"byte_end":13498125,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498126,"byte_end":13498148,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498149,"byte_end":13498152,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498153,"byte_end":13498203,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498204,"byte_end":13498209,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498210,"byte_end":13498227,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/create_dir_all.rs","byte_start":13498228,"byte_end":13498235,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8112},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499045,"byte_end":13499055,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":8113},{"krate":0,"index":8114}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13498626,"byte_end":13498691,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13498692,"byte_end":13498695,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13498696,"byte_end":13498776,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13498777,"byte_end":13498780,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13498781,"byte_end":13498842,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13498843,"byte_end":13498846,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13498847,"byte_end":13498922,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13498923,"byte_end":13499007,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":6725},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499583,"byte_end":13499586,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499270,"byte_end":13499305,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499310,"byte_end":13499313,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499318,"byte_end":13499375,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499380,"byte_end":13499383,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499388,"byte_end":13499424,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499429,"byte_end":13499432,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499437,"byte_end":13499451,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499456,"byte_end":13499459,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499464,"byte_end":13499471,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499476,"byte_end":13499510,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499515,"byte_end":13499518,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499523,"byte_end":13499559,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499564,"byte_end":13499571,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6726},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500334,"byte_end":13500343,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499836,"byte_end":13499875,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499880,"byte_end":13499883,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499888,"byte_end":13499982,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499987,"byte_end":13500081,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500086,"byte_end":13500089,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500094,"byte_end":13500138,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500143,"byte_end":13500146,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500151,"byte_end":13500165,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500170,"byte_end":13500173,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500178,"byte_end":13500185,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500190,"byte_end":13500224,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500229,"byte_end":13500232,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500237,"byte_end":13500277,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500282,"byte_end":13500310,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500315,"byte_end":13500322,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6727},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501275,"byte_end":13501281,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"pub fn create<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500447,"byte_end":13500499,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500504,"byte_end":13500507,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500512,"byte_end":13500607,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500612,"byte_end":13500615,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500620,"byte_end":13500632,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500637,"byte_end":13500640,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500645,"byte_end":13500703,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500708,"byte_end":13500711,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500716,"byte_end":13500777,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500782,"byte_end":13500873,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500878,"byte_end":13500914,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500919,"byte_end":13500922,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500927,"byte_end":13500941,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500946,"byte_end":13500949,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500954,"byte_end":13500967,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13500972,"byte_end":13501046,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501051,"byte_end":13501056,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501061,"byte_end":13501095,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501100,"byte_end":13501103,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501108,"byte_end":13501129,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501134,"byte_end":13501158,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501163,"byte_end":13501198,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501203,"byte_end":13501219,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501224,"byte_end":13501229,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501234,"byte_end":13501251,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501256,"byte_end":13501263,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6758},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502447,"byte_end":13502455,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502151,"byte_end":13502179,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502180,"byte_end":13502183,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502184,"byte_end":13502251,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502252,"byte_end":13502255,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502256,"byte_end":13502315,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502316,"byte_end":13502319,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502320,"byte_end":13502354,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502355,"byte_end":13502435,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":6763},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503346,"byte_end":13503350,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502672,"byte_end":13502712,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502717,"byte_end":13502720,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502725,"byte_end":13502819,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502824,"byte_end":13502842,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502847,"byte_end":13502850,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502855,"byte_end":13502889,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502894,"byte_end":13502897,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502902,"byte_end":13502916,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502921,"byte_end":13502924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502929,"byte_end":13502942,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502947,"byte_end":13503021,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503026,"byte_end":13503031,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503036,"byte_end":13503058,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503063,"byte_end":13503093,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503098,"byte_end":13503101,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503106,"byte_end":13503149,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503154,"byte_end":13503157,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503162,"byte_end":13503206,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503211,"byte_end":13503236,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503241,"byte_end":13503280,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503285,"byte_end":13503290,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503295,"byte_end":13503300,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503305,"byte_end":13503322,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503327,"byte_end":13503334,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6764},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504481,"byte_end":13504489,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503411,"byte_end":13503449,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503454,"byte_end":13503457,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503462,"byte_end":13503530,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503535,"byte_end":13503538,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503543,"byte_end":13503634,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503639,"byte_end":13503651,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503656,"byte_end":13503659,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503664,"byte_end":13503714,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503719,"byte_end":13503722,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503727,"byte_end":13503739,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503744,"byte_end":13503747,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503752,"byte_end":13503810,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503815,"byte_end":13503818,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503823,"byte_end":13503896,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503901,"byte_end":13503966,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13503971,"byte_end":13504007,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504012,"byte_end":13504015,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504020,"byte_end":13504034,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504039,"byte_end":13504042,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504047,"byte_end":13504060,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504065,"byte_end":13504139,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504144,"byte_end":13504149,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504154,"byte_end":13504176,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504181,"byte_end":13504211,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504216,"byte_end":13504219,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504224,"byte_end":13504267,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504272,"byte_end":13504275,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504280,"byte_end":13504324,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504329,"byte_end":13504354,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504359,"byte_end":13504409,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504414,"byte_end":13504419,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504424,"byte_end":13504429,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504434,"byte_end":13504451,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504456,"byte_end":13504463,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6768},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505682,"byte_end":13505691,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504625,"byte_end":13504664,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504669,"byte_end":13504672,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504677,"byte_end":13504756,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504761,"byte_end":13504764,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504769,"byte_end":13504858,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504863,"byte_end":13504866,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504871,"byte_end":13504905,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504910,"byte_end":13504913,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504918,"byte_end":13504930,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504935,"byte_end":13504938,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13504943,"byte_end":13505001,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505006,"byte_end":13505009,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505014,"byte_end":13505087,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505092,"byte_end":13505166,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505171,"byte_end":13505207,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505212,"byte_end":13505215,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505220,"byte_end":13505234,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505239,"byte_end":13505242,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505247,"byte_end":13505260,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505265,"byte_end":13505339,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505344,"byte_end":13505349,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505354,"byte_end":13505376,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505381,"byte_end":13505411,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505416,"byte_end":13505419,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505424,"byte_end":13505467,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505472,"byte_end":13505475,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505480,"byte_end":13505524,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505529,"byte_end":13505554,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505559,"byte_end":13505610,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505615,"byte_end":13505620,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505625,"byte_end":13505630,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505635,"byte_end":13505652,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505657,"byte_end":13505664,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6772},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506371,"byte_end":13506380,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505828,"byte_end":13505893,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505898,"byte_end":13505901,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505906,"byte_end":13505920,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505925,"byte_end":13505928,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505933,"byte_end":13505946,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13505951,"byte_end":13506025,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506030,"byte_end":13506035,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506040,"byte_end":13506062,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506067,"byte_end":13506097,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506102,"byte_end":13506105,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506110,"byte_end":13506153,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506158,"byte_end":13506161,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506166,"byte_end":13506210,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506215,"byte_end":13506240,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506245,"byte_end":13506305,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506310,"byte_end":13506315,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506320,"byte_end":13506325,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506330,"byte_end":13506347,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506352,"byte_end":13506359,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8129},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508640,"byte_end":13508644,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":8130},{"krate":0,"index":8131}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507348,"byte_end":13507383,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507384,"byte_end":13507387,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507388,"byte_end":13507484,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507485,"byte_end":13507497,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507498,"byte_end":13507501,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507502,"byte_end":13507597,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507598,"byte_end":13507696,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507697,"byte_end":13507700,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507701,"byte_end":13507756,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507757,"byte_end":13507760,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507761,"byte_end":13507795,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507796,"byte_end":13507868,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507869,"byte_end":13507872,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507873,"byte_end":13507887,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507888,"byte_end":13507891,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507892,"byte_end":13507941,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507942,"byte_end":13507945,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507946,"byte_end":13507959,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13507960,"byte_end":13508034,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508035,"byte_end":13508040,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508041,"byte_end":13508069,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508070,"byte_end":13508100,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508101,"byte_end":13508104,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508105,"byte_end":13508153,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508154,"byte_end":13508198,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508199,"byte_end":13508204,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508205,"byte_end":13508222,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508223,"byte_end":13508230,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508231,"byte_end":13508234,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508235,"byte_end":13508290,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508291,"byte_end":13508294,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508295,"byte_end":13508308,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508309,"byte_end":13508383,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508384,"byte_end":13508389,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508390,"byte_end":13508418,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508419,"byte_end":13508449,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508450,"byte_end":13508453,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508454,"byte_end":13508500,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508501,"byte_end":13508535,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508536,"byte_end":13508579,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508580,"byte_end":13508585,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508586,"byte_end":13508603,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508604,"byte_end":13508611,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6869},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510105,"byte_end":13510109,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509272,"byte_end":13509307,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509312,"byte_end":13509315,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509320,"byte_end":13509380,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509385,"byte_end":13509388,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509393,"byte_end":13509405,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509410,"byte_end":13509413,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509418,"byte_end":13509476,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509481,"byte_end":13509484,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509489,"byte_end":13509537,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509542,"byte_end":13509603,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509608,"byte_end":13509644,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509649,"byte_end":13509652,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509657,"byte_end":13509738,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509743,"byte_end":13509746,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509751,"byte_end":13509813,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509818,"byte_end":13509821,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509826,"byte_end":13509840,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509845,"byte_end":13509848,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509853,"byte_end":13509866,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509871,"byte_end":13509945,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509950,"byte_end":13509955,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509960,"byte_end":13509988,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13509993,"byte_end":13509996,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510001,"byte_end":13510043,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510048,"byte_end":13510053,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510058,"byte_end":13510075,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510080,"byte_end":13510087,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6875},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511362,"byte_end":13511368,"line_start":153,"line_end":153,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510417,"byte_end":13510453,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510458,"byte_end":13510461,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510466,"byte_end":13510557,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510562,"byte_end":13510565,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510570,"byte_end":13510630,"line_start":128,"line_end":128,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510635,"byte_end":13510638,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510643,"byte_end":13510655,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510660,"byte_end":13510663,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510668,"byte_end":13510726,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510731,"byte_end":13510734,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510739,"byte_end":13510788,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510793,"byte_end":13510858,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510863,"byte_end":13510899,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510904,"byte_end":13510907,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510912,"byte_end":13510993,"line_start":138,"line_end":138,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13510998,"byte_end":13511001,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511006,"byte_end":13511068,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511073,"byte_end":13511076,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511081,"byte_end":13511095,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511100,"byte_end":13511103,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511108,"byte_end":13511121,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511126,"byte_end":13511200,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511205,"byte_end":13511210,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511215,"byte_end":13511243,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511248,"byte_end":13511251,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511256,"byte_end":13511300,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511305,"byte_end":13511310,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511315,"byte_end":13511332,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511337,"byte_end":13511344,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6881},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512469,"byte_end":13512477,"line_start":184,"line_end":184,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511697,"byte_end":13511765,"line_start":163,"line_end":163,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511770,"byte_end":13511773,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511778,"byte_end":13511855,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511860,"byte_end":13511863,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511868,"byte_end":13511958,"line_start":167,"line_end":167,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13511963,"byte_end":13512055,"line_start":168,"line_end":168,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512060,"byte_end":13512063,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512068,"byte_end":13512082,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512087,"byte_end":13512090,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512095,"byte_end":13512108,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512113,"byte_end":13512187,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512192,"byte_end":13512197,"line_start":174,"line_end":174,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512202,"byte_end":13512230,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512235,"byte_end":13512265,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512270,"byte_end":13512273,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512278,"byte_end":13512326,"line_start":178,"line_end":178,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512331,"byte_end":13512375,"line_start":179,"line_end":179,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512380,"byte_end":13512407,"line_start":180,"line_end":180,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512412,"byte_end":13512417,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512422,"byte_end":13512439,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512444,"byte_end":13512451,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6886},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513682,"byte_end":13513691,"line_start":220,"line_end":220,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512814,"byte_end":13512869,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512874,"byte_end":13512877,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512882,"byte_end":13512969,"line_start":197,"line_end":197,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512974,"byte_end":13512977,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13512982,"byte_end":13513074,"line_start":199,"line_end":199,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513079,"byte_end":13513127,"line_start":200,"line_end":200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513132,"byte_end":13513135,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513140,"byte_end":13513220,"line_start":202,"line_end":202,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513225,"byte_end":13513228,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513233,"byte_end":13513267,"line_start":204,"line_end":204,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513272,"byte_end":13513275,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513280,"byte_end":13513294,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513299,"byte_end":13513302,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513307,"byte_end":13513320,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513325,"byte_end":13513399,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513404,"byte_end":13513409,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513414,"byte_end":13513442,"line_start":211,"line_end":211,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513447,"byte_end":13513477,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513482,"byte_end":13513485,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513490,"byte_end":13513538,"line_start":214,"line_end":214,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513543,"byte_end":13513587,"line_start":215,"line_end":215,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513592,"byte_end":13513620,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513625,"byte_end":13513630,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513635,"byte_end":13513652,"line_start":218,"line_end":218,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13513657,"byte_end":13513664,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6891},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514788,"byte_end":13514795,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514030,"byte_end":13514064,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514069,"byte_end":13514072,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514077,"byte_end":13514168,"line_start":233,"line_end":233,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514173,"byte_end":13514266,"line_start":234,"line_end":234,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514271,"byte_end":13514311,"line_start":235,"line_end":235,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514316,"byte_end":13514319,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514324,"byte_end":13514419,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514424,"byte_end":13514461,"line_start":238,"line_end":238,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514466,"byte_end":13514469,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514474,"byte_end":13514488,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514493,"byte_end":13514496,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514501,"byte_end":13514514,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514519,"byte_end":13514593,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514598,"byte_end":13514603,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514608,"byte_end":13514636,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514641,"byte_end":13514644,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514649,"byte_end":13514693,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514698,"byte_end":13514726,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514731,"byte_end":13514736,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514741,"byte_end":13514758,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13514763,"byte_end":13514770,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6896},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515614,"byte_end":13515622,"line_start":278,"line_end":278,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515245,"byte_end":13515275,"line_start":264,"line_end":264,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515280,"byte_end":13515283,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515288,"byte_end":13515302,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515307,"byte_end":13515310,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515315,"byte_end":13515328,"line_start":268,"line_end":268,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515333,"byte_end":13515407,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515412,"byte_end":13515417,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515422,"byte_end":13515450,"line_start":271,"line_end":271,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515455,"byte_end":13515458,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515463,"byte_end":13515505,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515510,"byte_end":13515552,"line_start":274,"line_end":274,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515557,"byte_end":13515562,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515567,"byte_end":13515584,"line_start":276,"line_end":276,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515589,"byte_end":13515596,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6900},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516468,"byte_end":13516483,"line_start":307,"line_end":307,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515759,"byte_end":13515799,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515804,"byte_end":13515807,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515812,"byte_end":13515824,"line_start":285,"line_end":285,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515829,"byte_end":13515832,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515837,"byte_end":13515895,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515900,"byte_end":13515903,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515908,"byte_end":13515985,"line_start":289,"line_end":289,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13515990,"byte_end":13516026,"line_start":290,"line_end":290,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516031,"byte_end":13516034,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516039,"byte_end":13516053,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516058,"byte_end":13516061,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516066,"byte_end":13516079,"line_start":294,"line_end":294,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516084,"byte_end":13516158,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516163,"byte_end":13516168,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516173,"byte_end":13516201,"line_start":297,"line_end":297,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516206,"byte_end":13516209,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516214,"byte_end":13516258,"line_start":299,"line_end":299,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516263,"byte_end":13516266,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516271,"byte_end":13516328,"line_start":301,"line_end":301,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516333,"byte_end":13516362,"line_start":302,"line_end":302,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516367,"byte_end":13516406,"line_start":303,"line_end":303,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516411,"byte_end":13516416,"line_start":304,"line_end":304,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516421,"byte_end":13516438,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516443,"byte_end":13516450,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":7010},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539728,"byte_end":13539737,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13538964,"byte_end":13539006,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539007,"byte_end":13539010,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539011,"byte_end":13539106,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539107,"byte_end":13539172,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539173,"byte_end":13539176,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539177,"byte_end":13539241,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539242,"byte_end":13539245,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539246,"byte_end":13539324,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539325,"byte_end":13539328,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539329,"byte_end":13539341,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539342,"byte_end":13539345,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539346,"byte_end":13539404,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539405,"byte_end":13539408,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539409,"byte_end":13539456,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539457,"byte_end":13539493,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539494,"byte_end":13539497,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539498,"byte_end":13539512,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539513,"byte_end":13539516,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539517,"byte_end":13539530,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539531,"byte_end":13539605,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539606,"byte_end":13539611,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539612,"byte_end":13539634,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539635,"byte_end":13539638,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539639,"byte_end":13539682,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539683,"byte_end":13539688,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539689,"byte_end":13539706,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/hard_link.rs","byte_start":13539707,"byte_end":13539714,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7027},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13541176,"byte_end":13541184,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540231,"byte_end":13540261,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540262,"byte_end":13540265,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540266,"byte_end":13540363,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540364,"byte_end":13540455,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540456,"byte_end":13540468,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540469,"byte_end":13540472,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540473,"byte_end":13540536,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540537,"byte_end":13540540,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540541,"byte_end":13540591,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540592,"byte_end":13540668,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540669,"byte_end":13540672,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540673,"byte_end":13540685,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540686,"byte_end":13540689,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540690,"byte_end":13540748,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540749,"byte_end":13540752,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540753,"byte_end":13540814,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540815,"byte_end":13540889,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540890,"byte_end":13540926,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540927,"byte_end":13540930,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540931,"byte_end":13540945,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540946,"byte_end":13540949,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540950,"byte_end":13540963,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13540964,"byte_end":13541038,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13541039,"byte_end":13541044,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13541045,"byte_end":13541067,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13541068,"byte_end":13541071,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13541072,"byte_end":13541130,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13541131,"byte_end":13541136,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13541137,"byte_end":13541154,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/metadata.rs","byte_start":13541155,"byte_end":13541162,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8159},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548810,"byte_end":13548821,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547265,"byte_end":13547323,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547324,"byte_end":13547327,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547328,"byte_end":13547386,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547387,"byte_end":13547390,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547391,"byte_end":13547488,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547489,"byte_end":13547534,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547535,"byte_end":13547538,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547539,"byte_end":13547635,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547636,"byte_end":13547710,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547711,"byte_end":13547714,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547715,"byte_end":13547777,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547778,"byte_end":13547781,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547782,"byte_end":13547808,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547809,"byte_end":13547837,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547838,"byte_end":13547868,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547869,"byte_end":13547903,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547904,"byte_end":13547934,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547935,"byte_end":13547973,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13547974,"byte_end":13548060,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548061,"byte_end":13548064,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548065,"byte_end":13548079,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548080,"byte_end":13548083,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548084,"byte_end":13548112,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548113,"byte_end":13548116,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548117,"byte_end":13548130,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548131,"byte_end":13548205,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548206,"byte_end":13548211,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548212,"byte_end":13548247,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548248,"byte_end":13548251,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548252,"byte_end":13548285,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548286,"byte_end":13548305,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548306,"byte_end":13548328,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548329,"byte_end":13548345,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548346,"byte_end":13548351,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548352,"byte_end":13548369,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548370,"byte_end":13548377,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548378,"byte_end":13548381,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548382,"byte_end":13548466,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548467,"byte_end":13548470,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548471,"byte_end":13548484,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548485,"byte_end":13548559,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548560,"byte_end":13548565,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548566,"byte_end":13548601,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548602,"byte_end":13548605,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548606,"byte_end":13548639,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548640,"byte_end":13548659,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548660,"byte_end":13548680,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548681,"byte_end":13548702,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548703,"byte_end":13548725,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548726,"byte_end":13548742,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548743,"byte_end":13548748,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548749,"byte_end":13548766,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548767,"byte_end":13548774,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7049},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549318,"byte_end":13549321,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548869,"byte_end":13548904,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548909,"byte_end":13548912,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548917,"byte_end":13548962,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548967,"byte_end":13548970,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548975,"byte_end":13548989,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548994,"byte_end":13548997,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549002,"byte_end":13549015,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549020,"byte_end":13549094,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549099,"byte_end":13549104,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549109,"byte_end":13549144,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549149,"byte_end":13549152,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549157,"byte_end":13549190,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549195,"byte_end":13549214,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549219,"byte_end":13549241,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549246,"byte_end":13549262,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549267,"byte_end":13549272,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549277,"byte_end":13549294,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549299,"byte_end":13549306,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7050},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549892,"byte_end":13549896,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549401,"byte_end":13549441,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549446,"byte_end":13549449,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549454,"byte_end":13549536,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549541,"byte_end":13549544,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549549,"byte_end":13549563,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549568,"byte_end":13549571,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549576,"byte_end":13549589,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549594,"byte_end":13549668,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549673,"byte_end":13549678,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549683,"byte_end":13549718,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549723,"byte_end":13549726,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549731,"byte_end":13549764,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549769,"byte_end":13549788,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549793,"byte_end":13549815,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549820,"byte_end":13549836,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549841,"byte_end":13549846,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549851,"byte_end":13549868,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549873,"byte_end":13549880,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7051},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550616,"byte_end":13550621,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13549993,"byte_end":13550034,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550039,"byte_end":13550042,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550047,"byte_end":13550129,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550134,"byte_end":13550137,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550142,"byte_end":13550236,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550241,"byte_end":13550259,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550264,"byte_end":13550267,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550272,"byte_end":13550286,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550291,"byte_end":13550294,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550299,"byte_end":13550312,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550317,"byte_end":13550391,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550396,"byte_end":13550401,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550406,"byte_end":13550441,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550446,"byte_end":13550449,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550454,"byte_end":13550487,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550492,"byte_end":13550512,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550517,"byte_end":13550539,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550544,"byte_end":13550560,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550565,"byte_end":13550570,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550575,"byte_end":13550592,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550597,"byte_end":13550604,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7052},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551306,"byte_end":13551312,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550721,"byte_end":13550763,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550768,"byte_end":13550771,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550776,"byte_end":13550870,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550875,"byte_end":13550948,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550953,"byte_end":13550956,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550961,"byte_end":13550975,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550980,"byte_end":13550983,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13550988,"byte_end":13551001,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551006,"byte_end":13551080,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551085,"byte_end":13551090,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551095,"byte_end":13551130,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551135,"byte_end":13551138,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551143,"byte_end":13551176,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551181,"byte_end":13551202,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551207,"byte_end":13551229,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551234,"byte_end":13551250,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551255,"byte_end":13551260,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551265,"byte_end":13551282,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551287,"byte_end":13551294,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7053},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552120,"byte_end":13552128,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551415,"byte_end":13551474,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551479,"byte_end":13551482,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551487,"byte_end":13551563,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551568,"byte_end":13551571,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551576,"byte_end":13551659,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551664,"byte_end":13551667,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551672,"byte_end":13551700,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551705,"byte_end":13551735,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551740,"byte_end":13551743,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551748,"byte_end":13551762,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551767,"byte_end":13551770,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551775,"byte_end":13551788,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551793,"byte_end":13551867,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551872,"byte_end":13551877,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551882,"byte_end":13551917,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551922,"byte_end":13551925,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551930,"byte_end":13551963,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551968,"byte_end":13551988,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13551993,"byte_end":13552016,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552021,"byte_end":13552043,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552048,"byte_end":13552064,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552069,"byte_end":13552074,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552079,"byte_end":13552096,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552101,"byte_end":13552108,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7054},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552967,"byte_end":13552973,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552237,"byte_end":13552307,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552312,"byte_end":13552315,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552320,"byte_end":13552409,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552414,"byte_end":13552417,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552422,"byte_end":13552508,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552513,"byte_end":13552516,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552521,"byte_end":13552549,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552554,"byte_end":13552584,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552589,"byte_end":13552592,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552597,"byte_end":13552611,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552616,"byte_end":13552619,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552624,"byte_end":13552637,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552642,"byte_end":13552716,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552721,"byte_end":13552726,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552731,"byte_end":13552766,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552771,"byte_end":13552774,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552779,"byte_end":13552812,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552817,"byte_end":13552837,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552842,"byte_end":13552863,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552868,"byte_end":13552890,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552895,"byte_end":13552911,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552916,"byte_end":13552921,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552926,"byte_end":13552943,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13552948,"byte_end":13552955,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7055},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553870,"byte_end":13553880,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553076,"byte_end":13553158,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553163,"byte_end":13553166,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553171,"byte_end":13553262,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553267,"byte_end":13553308,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553313,"byte_end":13553316,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553321,"byte_end":13553407,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553412,"byte_end":13553415,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553420,"byte_end":13553448,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553453,"byte_end":13553483,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553488,"byte_end":13553491,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553496,"byte_end":13553510,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553515,"byte_end":13553518,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553523,"byte_end":13553536,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553541,"byte_end":13553615,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553620,"byte_end":13553625,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553630,"byte_end":13553665,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553670,"byte_end":13553673,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553678,"byte_end":13553711,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553716,"byte_end":13553736,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553741,"byte_end":13553766,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553771,"byte_end":13553793,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553798,"byte_end":13553814,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553819,"byte_end":13553824,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553829,"byte_end":13553846,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553851,"byte_end":13553858,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7056},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555318,"byte_end":13555322,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"pub fn open<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13553995,"byte_end":13554040,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554045,"byte_end":13554048,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554053,"byte_end":13554065,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554070,"byte_end":13554073,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554078,"byte_end":13554136,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554141,"byte_end":13554144,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554149,"byte_end":13554230,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554235,"byte_end":13554284,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554289,"byte_end":13554373,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554378,"byte_end":13554435,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554440,"byte_end":13554534,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554539,"byte_end":13554606,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554611,"byte_end":13554697,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554702,"byte_end":13554738,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554743,"byte_end":13554746,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554751,"byte_end":13554777,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554782,"byte_end":13554810,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554815,"byte_end":13554845,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554850,"byte_end":13554884,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554889,"byte_end":13554919,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554924,"byte_end":13554962,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554967,"byte_end":13554970,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554975,"byte_end":13554989,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13554994,"byte_end":13554997,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555002,"byte_end":13555015,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555020,"byte_end":13555094,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555099,"byte_end":13555104,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555109,"byte_end":13555144,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555149,"byte_end":13555152,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555157,"byte_end":13555190,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555195,"byte_end":13555214,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555219,"byte_end":13555241,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555246,"byte_end":13555262,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555267,"byte_end":13555272,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555277,"byte_end":13555294,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555299,"byte_end":13555306,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":7077},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558826,"byte_end":13558830,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13557821,"byte_end":13557874,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13557875,"byte_end":13557878,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13557879,"byte_end":13557978,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13557979,"byte_end":13558075,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558076,"byte_end":13558088,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558089,"byte_end":13558092,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558093,"byte_end":13558174,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558175,"byte_end":13558178,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558179,"byte_end":13558238,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558239,"byte_end":13558242,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558243,"byte_end":13558289,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558290,"byte_end":13558358,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558359,"byte_end":13558362,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558363,"byte_end":13558375,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558376,"byte_end":13558379,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558380,"byte_end":13558438,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558439,"byte_end":13558442,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558443,"byte_end":13558491,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558492,"byte_end":13558553,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558554,"byte_end":13558590,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558591,"byte_end":13558594,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558595,"byte_end":13558609,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558610,"byte_end":13558613,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558614,"byte_end":13558627,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558628,"byte_end":13558702,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558703,"byte_end":13558708,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558709,"byte_end":13558731,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558732,"byte_end":13558735,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558736,"byte_end":13558780,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558781,"byte_end":13558786,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558787,"byte_end":13558804,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read.rs","byte_start":13558805,"byte_end":13558812,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7118},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560387,"byte_end":13560395,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559295,"byte_end":13559342,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559343,"byte_end":13559346,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559347,"byte_end":13559441,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559442,"byte_end":13559482,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559483,"byte_end":13559486,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559487,"byte_end":13559550,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559551,"byte_end":13559554,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559555,"byte_end":13559597,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559598,"byte_end":13559636,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559637,"byte_end":13559713,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559714,"byte_end":13559717,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559718,"byte_end":13559730,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559731,"byte_end":13559734,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559735,"byte_end":13559793,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559794,"byte_end":13559797,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559798,"byte_end":13559851,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559852,"byte_end":13559934,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559935,"byte_end":13559971,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559972,"byte_end":13559975,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559976,"byte_end":13559990,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559991,"byte_end":13559994,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13559995,"byte_end":13560008,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560009,"byte_end":13560083,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560084,"byte_end":13560089,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560090,"byte_end":13560112,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560113,"byte_end":13560143,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560144,"byte_end":13560147,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560148,"byte_end":13560195,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560196,"byte_end":13560199,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560200,"byte_end":13560248,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560249,"byte_end":13560274,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560275,"byte_end":13560335,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560336,"byte_end":13560341,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560342,"byte_end":13560347,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560348,"byte_end":13560365,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560366,"byte_end":13560373,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8175},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13561200,"byte_end":13561207,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560675,"byte_end":13560714,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560715,"byte_end":13560718,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560719,"byte_end":13560787,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560788,"byte_end":13560886,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560887,"byte_end":13560908,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560909,"byte_end":13560912,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560913,"byte_end":13560971,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560972,"byte_end":13560975,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13560976,"byte_end":13561010,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13561011,"byte_end":13561053,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13561054,"byte_end":13561092,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13561093,"byte_end":13561171,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":7148},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563380,"byte_end":13563389,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13562761,"byte_end":13562821,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13562822,"byte_end":13562825,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13562826,"byte_end":13562890,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13562891,"byte_end":13562894,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13562895,"byte_end":13562973,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13562974,"byte_end":13562977,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13562978,"byte_end":13562990,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13562991,"byte_end":13562994,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13562995,"byte_end":13563053,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563054,"byte_end":13563057,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563058,"byte_end":13563106,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563107,"byte_end":13563143,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563144,"byte_end":13563147,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563148,"byte_end":13563162,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563163,"byte_end":13563166,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563167,"byte_end":13563180,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563181,"byte_end":13563255,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563256,"byte_end":13563261,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563262,"byte_end":13563284,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563285,"byte_end":13563288,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563289,"byte_end":13563334,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563335,"byte_end":13563340,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563341,"byte_end":13563358,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_link.rs","byte_start":13563359,"byte_end":13563366,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7167},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564855,"byte_end":13564869,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13563775,"byte_end":13563827,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13563828,"byte_end":13563831,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13563832,"byte_end":13563931,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13563932,"byte_end":13564028,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564029,"byte_end":13564041,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564042,"byte_end":13564045,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564046,"byte_end":13564118,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564119,"byte_end":13564122,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564123,"byte_end":13564192,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564193,"byte_end":13564196,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564197,"byte_end":13564223,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564224,"byte_end":13564312,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564313,"byte_end":13564316,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564317,"byte_end":13564329,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564330,"byte_end":13564333,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564334,"byte_end":13564392,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564393,"byte_end":13564396,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564397,"byte_end":13564445,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564446,"byte_end":13564507,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564508,"byte_end":13564572,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564573,"byte_end":13564609,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564610,"byte_end":13564613,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564614,"byte_end":13564628,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564629,"byte_end":13564632,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564633,"byte_end":13564646,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564647,"byte_end":13564721,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564722,"byte_end":13564727,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564728,"byte_end":13564750,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564751,"byte_end":13564754,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564755,"byte_end":13564809,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564810,"byte_end":13564815,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564816,"byte_end":13564833,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_to_string.rs","byte_start":13564834,"byte_end":13564841,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7186},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565897,"byte_end":13565907,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565230,"byte_end":13565261,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565262,"byte_end":13565265,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565266,"byte_end":13565331,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565332,"byte_end":13565335,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565336,"byte_end":13565416,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565417,"byte_end":13565420,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565421,"byte_end":13565433,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565434,"byte_end":13565437,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565438,"byte_end":13565496,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565497,"byte_end":13565500,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565501,"byte_end":13565553,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565554,"byte_end":13565622,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565623,"byte_end":13565659,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565660,"byte_end":13565663,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565664,"byte_end":13565678,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565679,"byte_end":13565682,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565683,"byte_end":13565696,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565697,"byte_end":13565771,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565772,"byte_end":13565777,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565778,"byte_end":13565800,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565801,"byte_end":13565804,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565805,"byte_end":13565851,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565852,"byte_end":13565857,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565858,"byte_end":13565875,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir.rs","byte_start":13565876,"byte_end":13565883,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7205},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566967,"byte_end":13566981,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566267,"byte_end":13566315,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566316,"byte_end":13566319,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566320,"byte_end":13566389,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566390,"byte_end":13566393,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566394,"byte_end":13566482,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566483,"byte_end":13566486,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566487,"byte_end":13566499,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566500,"byte_end":13566503,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566504,"byte_end":13566562,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566563,"byte_end":13566566,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566567,"byte_end":13566619,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566620,"byte_end":13566688,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566689,"byte_end":13566725,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566726,"byte_end":13566729,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566730,"byte_end":13566744,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566745,"byte_end":13566748,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566749,"byte_end":13566762,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566763,"byte_end":13566837,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566838,"byte_end":13566843,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566844,"byte_end":13566866,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566867,"byte_end":13566870,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566871,"byte_end":13566921,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566922,"byte_end":13566927,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566928,"byte_end":13566945,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_dir_all.rs","byte_start":13566946,"byte_end":13566953,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7224},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567984,"byte_end":13567995,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567345,"byte_end":13567364,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567365,"byte_end":13567368,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567369,"byte_end":13567435,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567436,"byte_end":13567439,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567440,"byte_end":13567522,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567523,"byte_end":13567526,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567527,"byte_end":13567539,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567540,"byte_end":13567543,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567544,"byte_end":13567602,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567603,"byte_end":13567606,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567607,"byte_end":13567655,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567656,"byte_end":13567719,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567720,"byte_end":13567756,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567757,"byte_end":13567760,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567761,"byte_end":13567775,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567776,"byte_end":13567779,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567780,"byte_end":13567793,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567794,"byte_end":13567868,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567869,"byte_end":13567874,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567875,"byte_end":13567897,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567898,"byte_end":13567901,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567902,"byte_end":13567938,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567939,"byte_end":13567944,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567945,"byte_end":13567962,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/remove_file.rs","byte_start":13567963,"byte_end":13567970,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7243},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13569199,"byte_end":13569205,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568351,"byte_end":13568401,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568402,"byte_end":13568405,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568406,"byte_end":13568502,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568503,"byte_end":13568517,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568518,"byte_end":13568521,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568522,"byte_end":13568583,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568584,"byte_end":13568587,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568588,"byte_end":13568660,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568661,"byte_end":13568664,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568665,"byte_end":13568677,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568678,"byte_end":13568681,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568682,"byte_end":13568740,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568741,"byte_end":13568744,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568745,"byte_end":13568806,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568807,"byte_end":13568858,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568859,"byte_end":13568930,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568931,"byte_end":13568967,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568968,"byte_end":13568971,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568972,"byte_end":13568986,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568987,"byte_end":13568990,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13568991,"byte_end":13569004,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13569005,"byte_end":13569079,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13569080,"byte_end":13569085,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13569086,"byte_end":13569108,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13569109,"byte_end":13569112,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13569113,"byte_end":13569153,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13569154,"byte_end":13569159,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13569160,"byte_end":13569177,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/rename.rs","byte_start":13569178,"byte_end":13569185,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7263},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570532,"byte_end":13570547,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<P: AsRef<Path>>(P, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13569707,"byte_end":13569758,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13569759,"byte_end":13569762,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13569763,"byte_end":13569833,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13569834,"byte_end":13569837,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13569838,"byte_end":13569928,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13569929,"byte_end":13569932,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13569933,"byte_end":13569945,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13569946,"byte_end":13569949,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13569950,"byte_end":13570008,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570009,"byte_end":13570012,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570013,"byte_end":13570074,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570075,"byte_end":13570165,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570166,"byte_end":13570202,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570203,"byte_end":13570206,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570207,"byte_end":13570221,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570222,"byte_end":13570225,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570226,"byte_end":13570239,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570240,"byte_end":13570314,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570315,"byte_end":13570320,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570321,"byte_end":13570343,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570344,"byte_end":13570347,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570348,"byte_end":13570410,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570411,"byte_end":13570439,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570440,"byte_end":13570486,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570487,"byte_end":13570492,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570493,"byte_end":13570510,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/set_permissions.rs","byte_start":13570511,"byte_end":13570518,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7281},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571743,"byte_end":13571759,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13570824,"byte_end":13570887,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13570888,"byte_end":13570891,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13570892,"byte_end":13570989,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13570990,"byte_end":13571019,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571020,"byte_end":13571023,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571024,"byte_end":13571095,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571096,"byte_end":13571099,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571100,"byte_end":13571134,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571135,"byte_end":13571227,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571228,"byte_end":13571231,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571232,"byte_end":13571244,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571245,"byte_end":13571248,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571249,"byte_end":13571307,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571308,"byte_end":13571311,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571312,"byte_end":13571373,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571374,"byte_end":13571448,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571449,"byte_end":13571485,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571486,"byte_end":13571489,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571490,"byte_end":13571504,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571505,"byte_end":13571508,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571509,"byte_end":13571522,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571523,"byte_end":13571597,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571598,"byte_end":13571603,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571604,"byte_end":13571626,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571627,"byte_end":13571630,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571631,"byte_end":13571697,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571698,"byte_end":13571703,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571704,"byte_end":13571721,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/symlink_metadata.rs","byte_start":13571722,"byte_end":13571729,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7299},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572817,"byte_end":13572822,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<P: AsRef<Path>, C: AsRef<[u8]>>(P, C) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572025,"byte_end":13572083,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572084,"byte_end":13572087,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572088,"byte_end":13572185,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572186,"byte_end":13572201,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572202,"byte_end":13572205,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572206,"byte_end":13572266,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572267,"byte_end":13572270,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572271,"byte_end":13572341,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572342,"byte_end":13572345,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572346,"byte_end":13572358,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572359,"byte_end":13572362,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572363,"byte_end":13572421,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572422,"byte_end":13572425,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572426,"byte_end":13572475,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572476,"byte_end":13572541,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572542,"byte_end":13572578,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572579,"byte_end":13572582,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572583,"byte_end":13572597,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572598,"byte_end":13572601,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572602,"byte_end":13572615,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572616,"byte_end":13572690,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572691,"byte_end":13572696,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572697,"byte_end":13572719,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572720,"byte_end":13572723,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572724,"byte_end":13572771,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572772,"byte_end":13572777,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572778,"byte_end":13572795,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/write.rs","byte_start":13572796,"byte_end":13572803,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":7306},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","parent":null,"children":[{"krate":0,"index":7307},{"krate":0,"index":7319},{"krate":0,"index":7350},{"krate":0,"index":7393},{"krate":0,"index":7553},{"krate":0,"index":7682},{"krate":0,"index":7683},{"krate":0,"index":7686},{"krate":0,"index":7689},{"krate":0,"index":7692},{"krate":0,"index":7695},{"krate":0,"index":7698},{"krate":0,"index":7701},{"krate":0,"index":7704},{"krate":0,"index":7707},{"krate":0,"index":7710},{"krate":0,"index":7713},{"krate":0,"index":7716}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16856,"byte_end":16883,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Cross-platform path manipulation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573158,"byte_end":13573195,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573196,"byte_end":13573199,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::path`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573200,"byte_end":13573253,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573254,"byte_end":13573257,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573258,"byte_end":13573346,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573347,"byte_end":13573429,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573430,"byte_end":13573513,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ on strings according to the local platform's path syntax.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573514,"byte_end":13573575,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573576,"byte_end":13573579,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573580,"byte_end":13573655,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573656,"byte_end":13573733,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573734,"byte_end":13573812,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573813,"byte_end":13573891,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573892,"byte_end":13573960,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ normalization described in the documentation for the [`components`] method.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13573961,"byte_end":13574040,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574041,"byte_end":13574044,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574045,"byte_end":13574109,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574110,"byte_end":13574113,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Simple usage","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574114,"byte_end":13574133,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574134,"byte_end":13574137,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Path manipulation includes both parsing components from slices and building","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574138,"byte_end":13574217,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ new owned paths.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574218,"byte_end":13574238,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574239,"byte_end":13574242,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574243,"byte_end":13574310,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ slice and start asking questions:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574311,"byte_end":13574348,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574349,"byte_end":13574352,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574353,"byte_end":13574360,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574361,"byte_end":13574391,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574392,"byte_end":13574416,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574417,"byte_end":13574420,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574421,"byte_end":13574466,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574467,"byte_end":13574470,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574471,"byte_end":13574502,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574503,"byte_end":13574555,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574556,"byte_end":13574559,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574560,"byte_end":13574597,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574598,"byte_end":13574649,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574650,"byte_end":13574653,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574654,"byte_end":13574691,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574692,"byte_end":13574743,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574744,"byte_end":13574751,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574752,"byte_end":13574755,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To build or modify paths, use [`PathBuf`]:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574756,"byte_end":13574802,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574803,"byte_end":13574806,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574807,"byte_end":13574814,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574815,"byte_end":13574848,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574849,"byte_end":13574852,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // This way works...","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574853,"byte_end":13574877,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574878,"byte_end":13574919,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574920,"byte_end":13574923,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ path.push(\"windows\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574924,"byte_end":13574949,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ path.push(\"system32\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574950,"byte_end":13574976,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574977,"byte_end":13574980,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ path.set_extension(\"dll\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13574981,"byte_end":13575011,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575012,"byte_end":13575015,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // ... but push is best used if you don't know everything up","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575016,"byte_end":13575080,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ // front. If you do, this way is better:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575081,"byte_end":13575125,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575126,"byte_end":13575203,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575204,"byte_end":13575211,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575212,"byte_end":13575215,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575216,"byte_end":13575254,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575255,"byte_end":13575309,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575310,"byte_end":13575346,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575347,"byte_end":13575377,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575378,"byte_end":13575423,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575424,"byte_end":13575495,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575496,"byte_end":13575499,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575500,"byte_end":13575561,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575562,"byte_end":13575634,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/mod.rs","byte_start":13575635,"byte_end":13575701,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8189},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576582,"byte_end":13576591,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":8191}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576089,"byte_end":13576137,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576138,"byte_end":13576141,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576142,"byte_end":13576211,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576212,"byte_end":13576247,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576248,"byte_end":13576251,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576252,"byte_end":13576266,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576267,"byte_end":13576270,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576271,"byte_end":13576278,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576279,"byte_end":13576309,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576310,"byte_end":13576313,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576314,"byte_end":13576351,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576352,"byte_end":13576355,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576356,"byte_end":13576394,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576395,"byte_end":13576438,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576439,"byte_end":13576444,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576445,"byte_end":13576452,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576453,"byte_end":13576456,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576457,"byte_end":13576509,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576510,"byte_end":13576540,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8200},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577553,"byte_end":13577563,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":8202}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13576983,"byte_end":13577037,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577038,"byte_end":13577041,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577042,"byte_end":13577112,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577113,"byte_end":13577148,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577149,"byte_end":13577152,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577153,"byte_end":13577167,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577168,"byte_end":13577171,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577172,"byte_end":13577179,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577180,"byte_end":13577210,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577211,"byte_end":13577214,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577215,"byte_end":13577260,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577261,"byte_end":13577264,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577265,"byte_end":13577305,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577306,"byte_end":13577342,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577343,"byte_end":13577348,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577349,"byte_end":13577356,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577357,"byte_end":13577360,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577361,"byte_end":13577399,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577400,"byte_end":13577454,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577455,"byte_end":13577485,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7335},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578055,"byte_end":13578062,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577652,"byte_end":13577738,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577743,"byte_end":13577746,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577751,"byte_end":13577765,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577770,"byte_end":13577773,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577778,"byte_end":13577785,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577790,"byte_end":13577820,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577825,"byte_end":13577828,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577833,"byte_end":13577901,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577906,"byte_end":13577928,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577933,"byte_end":13577955,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577960,"byte_end":13577963,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577968,"byte_end":13578031,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578036,"byte_end":13578043,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8226},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579290,"byte_end":13579294,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8228}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13578917,"byte_end":13578992,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13578993,"byte_end":13578996,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13578997,"byte_end":13579061,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579062,"byte_end":13579097,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579098,"byte_end":13579101,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579102,"byte_end":13579140,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579141,"byte_end":13579183,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579184,"byte_end":13579230,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579231,"byte_end":13579261,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7372},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579739,"byte_end":13579746,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579366,"byte_end":13579452,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579457,"byte_end":13579460,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579465,"byte_end":13579479,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579484,"byte_end":13579487,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579492,"byte_end":13579499,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579504,"byte_end":13579534,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579539,"byte_end":13579542,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579547,"byte_end":13579603,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579608,"byte_end":13579624,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579629,"byte_end":13579645,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579650,"byte_end":13579653,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579658,"byte_end":13579715,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579720,"byte_end":13579727,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8232},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582377,"byte_end":13582381,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":8233}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581098,"byte_end":13581120,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581121,"byte_end":13581124,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581125,"byte_end":13581184,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581185,"byte_end":13581188,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581189,"byte_end":13581267,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581268,"byte_end":13581349,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581350,"byte_end":13581432,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581433,"byte_end":13581460,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581461,"byte_end":13581464,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581465,"byte_end":13581540,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581541,"byte_end":13581606,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581607,"byte_end":13581627,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581628,"byte_end":13581631,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581632,"byte_end":13581668,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581669,"byte_end":13581745,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581746,"byte_end":13581749,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581750,"byte_end":13581809,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581810,"byte_end":13581853,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581854,"byte_end":13581857,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581858,"byte_end":13581872,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581873,"byte_end":13581876,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581877,"byte_end":13581884,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581885,"byte_end":13581909,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581910,"byte_end":13581934,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581935,"byte_end":13581938,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581939,"byte_end":13581985,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13581986,"byte_end":13582028,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582029,"byte_end":13582032,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582033,"byte_end":13582064,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582065,"byte_end":13582114,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582115,"byte_end":13582118,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582119,"byte_end":13582156,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582157,"byte_end":13582208,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582209,"byte_end":13582212,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582213,"byte_end":13582250,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582251,"byte_end":13582302,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582303,"byte_end":13582310,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7444},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583013,"byte_end":13583016,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<S: AsRef<OsStr> + ?Sized>(&S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582431,"byte_end":13582483,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582488,"byte_end":13582491,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582496,"byte_end":13582531,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582536,"byte_end":13582539,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582544,"byte_end":13582558,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582563,"byte_end":13582566,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582571,"byte_end":13582578,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582583,"byte_end":13582613,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582618,"byte_end":13582621,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582626,"byte_end":13582651,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582656,"byte_end":13582663,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582668,"byte_end":13582671,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582676,"byte_end":13582741,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582746,"byte_end":13582749,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582754,"byte_end":13582761,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582766,"byte_end":13582796,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582801,"byte_end":13582804,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582809,"byte_end":13582850,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582855,"byte_end":13582896,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582901,"byte_end":13582945,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582950,"byte_end":13582989,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582994,"byte_end":13583001,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7446},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583539,"byte_end":13583548,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"pub fn as_os_str(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583160,"byte_end":13583203,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583208,"byte_end":13583211,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583216,"byte_end":13583282,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583287,"byte_end":13583290,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583295,"byte_end":13583309,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583314,"byte_end":13583317,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583322,"byte_end":13583329,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583334,"byte_end":13583358,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583363,"byte_end":13583366,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583371,"byte_end":13583401,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583406,"byte_end":13583409,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583414,"byte_end":13583464,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583469,"byte_end":13583515,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583520,"byte_end":13583527,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7447},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584138,"byte_end":13584144,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"pub fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583610,"byte_end":13583670,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583675,"byte_end":13583678,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583683,"byte_end":13583747,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583752,"byte_end":13583819,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583824,"byte_end":13583856,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583861,"byte_end":13583864,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583869,"byte_end":13583931,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583936,"byte_end":13583939,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583944,"byte_end":13583958,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583963,"byte_end":13583966,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583971,"byte_end":13583978,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13583983,"byte_end":13584013,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584018,"byte_end":13584021,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584026,"byte_end":13584062,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584067,"byte_end":13584114,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584119,"byte_end":13584126,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7448},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584937,"byte_end":13584952,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584209,"byte_end":13584249,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584254,"byte_end":13584257,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584262,"byte_end":13584309,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584314,"byte_end":13584359,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584364,"byte_end":13584367,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584372,"byte_end":13584440,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584445,"byte_end":13584529,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584534,"byte_end":13584537,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584542,"byte_end":13584556,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584561,"byte_end":13584564,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584569,"byte_end":13584630,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584635,"byte_end":13584638,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584643,"byte_end":13584650,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584655,"byte_end":13584685,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584690,"byte_end":13584693,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584698,"byte_end":13584734,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584739,"byte_end":13584789,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584794,"byte_end":13584801,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584806,"byte_end":13584809,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584814,"byte_end":13584888,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13584893,"byte_end":13584925,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":7449},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585361,"byte_end":13585372,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"pub fn to_path_buf(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585026,"byte_end":13585072,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585077,"byte_end":13585080,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585085,"byte_end":13585121,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585126,"byte_end":13585129,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585134,"byte_end":13585148,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585153,"byte_end":13585156,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585161,"byte_end":13585168,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585173,"byte_end":13585214,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585219,"byte_end":13585222,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585227,"byte_end":13585281,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585286,"byte_end":13585337,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585342,"byte_end":13585349,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7450},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586072,"byte_end":13586083,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"pub fn is_absolute(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585452,"byte_end":13585526,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585531,"byte_end":13585557,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585562,"byte_end":13585565,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585570,"byte_end":13585634,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585639,"byte_end":13585691,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585696,"byte_end":13585699,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585704,"byte_end":13585779,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585784,"byte_end":13585857,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585862,"byte_end":13585865,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585870,"byte_end":13585904,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585909,"byte_end":13585912,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585917,"byte_end":13585931,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585936,"byte_end":13585939,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585944,"byte_end":13585951,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585956,"byte_end":13585986,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585991,"byte_end":13585994,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13585999,"byte_end":13586048,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586053,"byte_end":13586060,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7451},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586499,"byte_end":13586510,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"pub fn is_relative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586145,"byte_end":13586209,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586214,"byte_end":13586217,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586222,"byte_end":13586279,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586284,"byte_end":13586287,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586292,"byte_end":13586332,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586337,"byte_end":13586340,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586345,"byte_end":13586359,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586364,"byte_end":13586367,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586372,"byte_end":13586379,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586384,"byte_end":13586414,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586419,"byte_end":13586422,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586427,"byte_end":13586475,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586480,"byte_end":13586487,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7452},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587131,"byte_end":13587139,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"pub fn has_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586572,"byte_end":13586616,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586621,"byte_end":13586624,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586629,"byte_end":13586684,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586689,"byte_end":13586692,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586697,"byte_end":13586739,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586744,"byte_end":13586812,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586817,"byte_end":13586902,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586907,"byte_end":13586963,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586968,"byte_end":13586971,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586976,"byte_end":13586990,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13586995,"byte_end":13586998,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587003,"byte_end":13587010,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587015,"byte_end":13587045,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587050,"byte_end":13587053,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587058,"byte_end":13587107,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587112,"byte_end":13587119,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7453},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587844,"byte_end":13587850,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"pub fn parent(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587198,"byte_end":13587266,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587271,"byte_end":13587274,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587279,"byte_end":13587343,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587348,"byte_end":13587351,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587356,"byte_end":13587436,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587441,"byte_end":13587444,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587449,"byte_end":13587463,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587468,"byte_end":13587471,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587476,"byte_end":13587483,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587488,"byte_end":13587518,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587523,"byte_end":13587526,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587531,"byte_end":13587568,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587573,"byte_end":13587613,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587618,"byte_end":13587660,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587665,"byte_end":13587668,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587673,"byte_end":13587721,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587726,"byte_end":13587771,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587776,"byte_end":13587820,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587825,"byte_end":13587832,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7455},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588973,"byte_end":13588982,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"pub fn ancestors(&Self) -> Ancestors","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587934,"byte_end":13587989,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13587994,"byte_end":13587997,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588002,"byte_end":13588095,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588100,"byte_end":13588190,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588195,"byte_end":13588286,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588291,"byte_end":13588386,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588391,"byte_end":13588410,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588415,"byte_end":13588418,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588423,"byte_end":13588490,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588495,"byte_end":13588541,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588546,"byte_end":13588549,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588554,"byte_end":13588568,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588573,"byte_end":13588576,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588581,"byte_end":13588588,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588593,"byte_end":13588623,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588628,"byte_end":13588631,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588636,"byte_end":13588694,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588699,"byte_end":13588768,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588773,"byte_end":13588838,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588843,"byte_end":13588905,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588910,"byte_end":13588949,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13588954,"byte_end":13588961,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7456},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590027,"byte_end":13590036,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"pub fn file_name(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589060,"byte_end":13589123,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589128,"byte_end":13589131,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589136,"byte_end":13589230,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589235,"byte_end":13589261,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589266,"byte_end":13589269,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589274,"byte_end":13589326,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589331,"byte_end":13589334,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589339,"byte_end":13589419,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589424,"byte_end":13589427,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589432,"byte_end":13589446,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589451,"byte_end":13589454,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589459,"byte_end":13589466,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589471,"byte_end":13589495,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589500,"byte_end":13589503,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589508,"byte_end":13589538,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589543,"byte_end":13589546,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589551,"byte_end":13589627,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589632,"byte_end":13589714,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589719,"byte_end":13589799,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589804,"byte_end":13589886,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589891,"byte_end":13589949,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13589954,"byte_end":13590003,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590008,"byte_end":13590015,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7457},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591290,"byte_end":13591302,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"pub fn strip_prefix<P>(&Self, P) -> Result<&Path, StripPrefixError> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590106,"byte_end":13590169,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590174,"byte_end":13590177,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590182,"byte_end":13590194,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590199,"byte_end":13590202,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590207,"byte_end":13590269,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590274,"byte_end":13590312,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590317,"byte_end":13590320,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590325,"byte_end":13590365,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590370,"byte_end":13590448,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590453,"byte_end":13590456,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590461,"byte_end":13590475,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590480,"byte_end":13590483,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590488,"byte_end":13590495,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590500,"byte_end":13590541,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590546,"byte_end":13590549,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590554,"byte_end":13590601,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590606,"byte_end":13590609,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590614,"byte_end":13590689,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590694,"byte_end":13590768,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590773,"byte_end":13590848,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590853,"byte_end":13590928,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13590933,"byte_end":13591009,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591014,"byte_end":13591071,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591076,"byte_end":13591134,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591139,"byte_end":13591142,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591147,"byte_end":13591188,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591193,"byte_end":13591266,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591271,"byte_end":13591278,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7459},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591987,"byte_end":13591998,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"pub fn starts_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591467,"byte_end":13591519,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591524,"byte_end":13591527,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591532,"byte_end":13591582,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591587,"byte_end":13591590,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591595,"byte_end":13591609,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591614,"byte_end":13591617,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591622,"byte_end":13591629,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591634,"byte_end":13591664,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591669,"byte_end":13591672,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591677,"byte_end":13591717,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591722,"byte_end":13591725,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591730,"byte_end":13591768,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591773,"byte_end":13591812,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591817,"byte_end":13591862,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591867,"byte_end":13591913,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591918,"byte_end":13591921,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591926,"byte_end":13591963,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13591968,"byte_end":13591975,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7461},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592424,"byte_end":13592433,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"pub fn ends_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592098,"byte_end":13592151,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592156,"byte_end":13592159,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592164,"byte_end":13592214,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592219,"byte_end":13592222,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592227,"byte_end":13592241,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592246,"byte_end":13592249,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592254,"byte_end":13592261,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592266,"byte_end":13592296,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592301,"byte_end":13592304,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592309,"byte_end":13592349,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592354,"byte_end":13592357,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592362,"byte_end":13592400,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592405,"byte_end":13592412,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7463},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593275,"byte_end":13593284,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"pub fn file_stem(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592533,"byte_end":13592596,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592601,"byte_end":13592604,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592609,"byte_end":13592661,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592666,"byte_end":13592669,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592674,"byte_end":13592690,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592695,"byte_end":13592698,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592703,"byte_end":13592743,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592748,"byte_end":13592802,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592807,"byte_end":13592895,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592900,"byte_end":13592966,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592971,"byte_end":13592974,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13592979,"byte_end":13593059,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593064,"byte_end":13593067,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593072,"byte_end":13593086,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593091,"byte_end":13593094,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593099,"byte_end":13593106,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593111,"byte_end":13593141,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593146,"byte_end":13593149,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593154,"byte_end":13593189,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593194,"byte_end":13593197,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593202,"byte_end":13593251,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593256,"byte_end":13593263,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7464},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594063,"byte_end":13594072,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"pub fn extension(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593354,"byte_end":13593411,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593416,"byte_end":13593419,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593424,"byte_end":13593445,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593450,"byte_end":13593453,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593458,"byte_end":13593498,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593503,"byte_end":13593546,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593551,"byte_end":13593628,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593633,"byte_end":13593698,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593703,"byte_end":13593706,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593711,"byte_end":13593763,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593768,"byte_end":13593848,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593853,"byte_end":13593856,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593861,"byte_end":13593875,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593880,"byte_end":13593883,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593888,"byte_end":13593895,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593900,"byte_end":13593930,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593935,"byte_end":13593938,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593943,"byte_end":13593978,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593983,"byte_end":13593986,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13593991,"byte_end":13594039,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594044,"byte_end":13594051,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7465},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594613,"byte_end":13594617,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"pub fn join<P: AsRef<Path>>(&Self, P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594142,"byte_end":13594206,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594211,"byte_end":13594214,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594219,"byte_end":13594296,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594301,"byte_end":13594304,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594309,"byte_end":13594345,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594350,"byte_end":13594404,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594409,"byte_end":13594412,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594417,"byte_end":13594431,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594436,"byte_end":13594439,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594444,"byte_end":13594451,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594456,"byte_end":13594497,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594502,"byte_end":13594505,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594510,"byte_end":13594589,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594594,"byte_end":13594601,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7467},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595356,"byte_end":13595370,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"pub fn with_file_name<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594720,"byte_end":13594794,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594799,"byte_end":13594802,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594807,"byte_end":13594859,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594864,"byte_end":13594867,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594872,"byte_end":13594908,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594913,"byte_end":13594985,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594990,"byte_end":13594993,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13594998,"byte_end":13595012,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595017,"byte_end":13595020,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595025,"byte_end":13595032,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595037,"byte_end":13595078,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595083,"byte_end":13595086,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595091,"byte_end":13595132,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595137,"byte_end":13595215,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595220,"byte_end":13595223,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595228,"byte_end":13595261,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595266,"byte_end":13595332,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595337,"byte_end":13595344,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7469},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595989,"byte_end":13596003,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"pub fn with_extension<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595485,"byte_end":13595559,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595564,"byte_end":13595567,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595572,"byte_end":13595624,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595629,"byte_end":13595632,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595637,"byte_end":13595673,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595678,"byte_end":13595750,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595755,"byte_end":13595758,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595763,"byte_end":13595777,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595782,"byte_end":13595785,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595790,"byte_end":13595797,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595802,"byte_end":13595843,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595848,"byte_end":13595851,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595856,"byte_end":13595891,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595896,"byte_end":13595965,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13595970,"byte_end":13595977,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7471},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597590,"byte_end":13597600,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"pub fn components(&Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596118,"byte_end":13596179,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596184,"byte_end":13596187,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596192,"byte_end":13596260,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596265,"byte_end":13596268,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596273,"byte_end":13596341,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596346,"byte_end":13596378,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596383,"byte_end":13596386,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596391,"byte_end":13596462,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596467,"byte_end":13596537,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596542,"byte_end":13596613,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596618,"byte_end":13596659,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596664,"byte_end":13596667,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596672,"byte_end":13596749,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596754,"byte_end":13596757,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596762,"byte_end":13596832,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596837,"byte_end":13596909,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596914,"byte_end":13596963,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596968,"byte_end":13596971,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13596976,"byte_end":13597014,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597019,"byte_end":13597069,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597074,"byte_end":13597077,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597082,"byte_end":13597096,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597101,"byte_end":13597104,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597109,"byte_end":13597116,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597121,"byte_end":13597145,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597150,"byte_end":13597153,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597158,"byte_end":13597201,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597206,"byte_end":13597209,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597214,"byte_end":13597278,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597283,"byte_end":13597286,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597291,"byte_end":13597351,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597356,"byte_end":13597434,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597439,"byte_end":13597521,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597526,"byte_end":13597566,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597571,"byte_end":13597578,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7472},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598506,"byte_end":13598510,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597714,"byte_end":13597785,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597790,"byte_end":13597801,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597806,"byte_end":13597809,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597814,"byte_end":13597889,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597894,"byte_end":13597934,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597939,"byte_end":13597942,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597947,"byte_end":13597985,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13597990,"byte_end":13598056,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598061,"byte_end":13598064,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598069,"byte_end":13598083,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598088,"byte_end":13598091,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598096,"byte_end":13598103,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598108,"byte_end":13598132,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598137,"byte_end":13598140,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598145,"byte_end":13598183,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598188,"byte_end":13598191,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598196,"byte_end":13598246,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598251,"byte_end":13598330,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598335,"byte_end":13598386,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598391,"byte_end":13598446,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598451,"byte_end":13598482,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598487,"byte_end":13598494,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7473},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599013,"byte_end":13599020,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"pub fn display(&Self) -> Display","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598606,"byte_end":13598681,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598686,"byte_end":13598724,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598729,"byte_end":13598732,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598737,"byte_end":13598806,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598811,"byte_end":13598814,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598819,"byte_end":13598833,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598838,"byte_end":13598841,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598846,"byte_end":13598853,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598858,"byte_end":13598888,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598893,"byte_end":13598896,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598901,"byte_end":13598941,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598946,"byte_end":13598949,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598954,"byte_end":13598989,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13598994,"byte_end":13599001,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7474},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599786,"byte_end":13599794,"line_start":588,"line_end":588,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599085,"byte_end":13599131,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599136,"byte_end":13599139,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599144,"byte_end":13599221,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599226,"byte_end":13599247,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599252,"byte_end":13599255,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599260,"byte_end":13599301,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599306,"byte_end":13599309,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599314,"byte_end":13599358,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599363,"byte_end":13599366,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599371,"byte_end":13599385,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599390,"byte_end":13599393,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599398,"byte_end":13599411,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599416,"byte_end":13599490,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599495,"byte_end":13599500,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599505,"byte_end":13599535,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599540,"byte_end":13599543,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599548,"byte_end":13599590,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599595,"byte_end":13599637,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599642,"byte_end":13599685,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599690,"byte_end":13599695,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599700,"byte_end":13599717,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599722,"byte_end":13599729,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599734,"byte_end":13599768,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7477},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600526,"byte_end":13600542,"line_start":612,"line_end":612,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"pub async fn symlink_metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599876,"byte_end":13599955,"line_start":592,"line_end":592,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599960,"byte_end":13599963,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13599968,"byte_end":13600017,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600022,"byte_end":13600025,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600030,"byte_end":13600090,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600095,"byte_end":13600098,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600103,"byte_end":13600117,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600122,"byte_end":13600125,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600130,"byte_end":13600143,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600148,"byte_end":13600222,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600227,"byte_end":13600232,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600237,"byte_end":13600267,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600272,"byte_end":13600275,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600280,"byte_end":13600322,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600327,"byte_end":13600377,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600382,"byte_end":13600425,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600430,"byte_end":13600435,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600440,"byte_end":13600457,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600462,"byte_end":13600469,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600474,"byte_end":13600508,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7480},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601369,"byte_end":13601381,"line_start":638,"line_end":638,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"pub async fn canonicalize<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600632,"byte_end":13600673,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600678,"byte_end":13600681,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600686,"byte_end":13600775,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600780,"byte_end":13600808,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600813,"byte_end":13600816,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600821,"byte_end":13600866,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600871,"byte_end":13600874,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600879,"byte_end":13600931,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600936,"byte_end":13600939,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600944,"byte_end":13600958,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600963,"byte_end":13600966,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600971,"byte_end":13600984,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13600989,"byte_end":13601063,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601068,"byte_end":13601073,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601078,"byte_end":13601119,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601124,"byte_end":13601127,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601132,"byte_end":13601185,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601190,"byte_end":13601268,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601273,"byte_end":13601278,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601283,"byte_end":13601300,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601305,"byte_end":13601312,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601317,"byte_end":13601351,"line_start":637,"line_end":637,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7483},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602036,"byte_end":13602045,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"pub async fn read_link<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601462,"byte_end":13601532,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601537,"byte_end":13601540,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601545,"byte_end":13601587,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601592,"byte_end":13601595,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601600,"byte_end":13601646,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601651,"byte_end":13601654,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601659,"byte_end":13601673,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601678,"byte_end":13601681,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601686,"byte_end":13601699,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601704,"byte_end":13601778,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601783,"byte_end":13601788,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601793,"byte_end":13601823,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601828,"byte_end":13601831,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601836,"byte_end":13601886,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601891,"byte_end":13601935,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601940,"byte_end":13601945,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601950,"byte_end":13601967,"line_start":658,"line_end":658,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601972,"byte_end":13601979,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13601984,"byte_end":13602018,"line_start":660,"line_end":660,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7486},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603155,"byte_end":13603163,"line_start":696,"line_end":696,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"pub async fn read_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602123,"byte_end":13602180,"line_start":665,"line_end":665,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602185,"byte_end":13602188,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602193,"byte_end":13602269,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602274,"byte_end":13602347,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602352,"byte_end":13602355,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602360,"byte_end":13602401,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602406,"byte_end":13602409,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602414,"byte_end":13602456,"line_start":672,"line_end":672,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602461,"byte_end":13602505,"line_start":673,"line_end":673,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602510,"byte_end":13602554,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602559,"byte_end":13602562,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602567,"byte_end":13602581,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602586,"byte_end":13602589,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602594,"byte_end":13602607,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602612,"byte_end":13602686,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602691,"byte_end":13602696,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602701,"byte_end":13602723,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602728,"byte_end":13602758,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602763,"byte_end":13602793,"line_start":683,"line_end":683,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602798,"byte_end":13602801,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602806,"byte_end":13602842,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602847,"byte_end":13602892,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602897,"byte_end":13602900,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602905,"byte_end":13602949,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602954,"byte_end":13602979,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13602984,"byte_end":13603044,"line_start":690,"line_end":690,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603049,"byte_end":13603054,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603059,"byte_end":13603064,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603069,"byte_end":13603086,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603091,"byte_end":13603098,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603103,"byte_end":13603137,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7489},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604192,"byte_end":13604198,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"pub async fn exists<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603244,"byte_end":13603304,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603309,"byte_end":13603312,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603317,"byte_end":13603394,"line_start":702,"line_end":702,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603399,"byte_end":13603479,"line_start":703,"line_end":703,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603484,"byte_end":13603487,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603492,"byte_end":13603570,"line_start":705,"line_end":705,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603575,"byte_end":13603622,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603627,"byte_end":13603630,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603635,"byte_end":13603649,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603654,"byte_end":13603657,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603662,"byte_end":13603675,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603680,"byte_end":13603754,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603759,"byte_end":13603764,"line_start":712,"line_end":712,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603769,"byte_end":13603799,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603804,"byte_end":13603874,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603879,"byte_end":13603884,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603889,"byte_end":13603906,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603911,"byte_end":13603918,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603923,"byte_end":13603926,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603931,"byte_end":13603945,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603950,"byte_end":13603953,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13603958,"byte_end":13604037,"line_start":721,"line_end":721,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604042,"byte_end":13604080,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604085,"byte_end":13604088,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604093,"byte_end":13604135,"line_start":724,"line_end":724,"column_start":5,"column_end":47}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604140,"byte_end":13604174,"line_start":725,"line_end":725,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7492},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605456,"byte_end":13605463,"line_start":759,"line_end":759,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"pub async fn is_file<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604268,"byte_end":13604348,"line_start":730,"line_end":730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604353,"byte_end":13604356,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604361,"byte_end":13604438,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604443,"byte_end":13604523,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604528,"byte_end":13604531,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604536,"byte_end":13604614,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604619,"byte_end":13604666,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604671,"byte_end":13604674,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604679,"byte_end":13604693,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604698,"byte_end":13604701,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604706,"byte_end":13604719,"line_start":740,"line_end":740,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604724,"byte_end":13604798,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604803,"byte_end":13604808,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604813,"byte_end":13604843,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604848,"byte_end":13604918,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604923,"byte_end":13604985,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13604990,"byte_end":13604995,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605000,"byte_end":13605017,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605022,"byte_end":13605029,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605034,"byte_end":13605037,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605042,"byte_end":13605056,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605061,"byte_end":13605064,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605069,"byte_end":13605148,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605153,"byte_end":13605223,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605228,"byte_end":13605269,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605274,"byte_end":13605277,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605282,"byte_end":13605324,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605329,"byte_end":13605399,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605404,"byte_end":13605438,"line_start":758,"line_end":758,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7496},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606790,"byte_end":13606796,"line_start":796,"line_end":796,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"pub async fn is_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605602,"byte_end":13605679,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605684,"byte_end":13605687,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605692,"byte_end":13605769,"line_start":768,"line_end":768,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605774,"byte_end":13605854,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605859,"byte_end":13605862,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605867,"byte_end":13605945,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13605950,"byte_end":13605997,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606002,"byte_end":13606005,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606010,"byte_end":13606024,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606029,"byte_end":13606032,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606037,"byte_end":13606050,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606055,"byte_end":13606129,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606134,"byte_end":13606139,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606144,"byte_end":13606174,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606179,"byte_end":13606182,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606187,"byte_end":13606255,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606260,"byte_end":13606322,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606327,"byte_end":13606332,"line_start":783,"line_end":783,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606337,"byte_end":13606354,"line_start":784,"line_end":784,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606359,"byte_end":13606366,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606371,"byte_end":13606374,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606379,"byte_end":13606393,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606398,"byte_end":13606401,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606406,"byte_end":13606485,"line_start":789,"line_end":789,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606490,"byte_end":13606560,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606565,"byte_end":13606605,"line_start":791,"line_end":791,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606610,"byte_end":13606613,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606618,"byte_end":13606660,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606665,"byte_end":13606733,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606738,"byte_end":13606772,"line_start":795,"line_end":795,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7500},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607363,"byte_end":13607376,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13606934,"byte_end":13607007,"line_start":803,"line_end":803,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607012,"byte_end":13607027,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607032,"byte_end":13607035,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607040,"byte_end":13607104,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607109,"byte_end":13607145,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607150,"byte_end":13607153,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607158,"byte_end":13607172,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607177,"byte_end":13607180,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607185,"byte_end":13607192,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607197,"byte_end":13607227,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607232,"byte_end":13607235,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607240,"byte_end":13607294,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607299,"byte_end":13607339,"line_start":815,"line_end":815,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607344,"byte_end":13607351,"line_start":816,"line_end":816,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8506},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613346,"byte_end":13613353,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":8507}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613117,"byte_end":13613179,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613180,"byte_end":13613183,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613184,"byte_end":13613263,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7605},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613594,"byte_end":13613597,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"pub fn new() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613409,"byte_end":13613442,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613447,"byte_end":13613450,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613455,"byte_end":13613469,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613474,"byte_end":13613477,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613482,"byte_end":13613489,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613494,"byte_end":13613527,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613532,"byte_end":13613535,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613540,"byte_end":13613570,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613575,"byte_end":13613582,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7606},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613958,"byte_end":13613965,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"pub fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613665,"byte_end":13613697,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613702,"byte_end":13613705,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613710,"byte_end":13613740,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613745,"byte_end":13613748,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613753,"byte_end":13613767,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613772,"byte_end":13613775,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613780,"byte_end":13613787,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613792,"byte_end":13613833,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613838,"byte_end":13613841,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613846,"byte_end":13613881,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613886,"byte_end":13613934,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613939,"byte_end":13613946,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7607},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614959,"byte_end":13614963,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"pub fn push<P: AsRef<Path>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614031,"byte_end":13614062,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614067,"byte_end":13614070,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614075,"byte_end":13614131,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614136,"byte_end":13614139,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614144,"byte_end":13614159,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614164,"byte_end":13614167,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614172,"byte_end":13614235,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614240,"byte_end":13614307,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614312,"byte_end":13614373,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614378,"byte_end":13614381,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614386,"byte_end":13614400,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614405,"byte_end":13614408,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614413,"byte_end":13614467,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614472,"byte_end":13614475,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614480,"byte_end":13614487,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614492,"byte_end":13614525,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614530,"byte_end":13614533,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614538,"byte_end":13614579,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614584,"byte_end":13614609,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614614,"byte_end":13614666,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614671,"byte_end":13614678,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614683,"byte_end":13614686,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614691,"byte_end":13614747,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614752,"byte_end":13614755,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614760,"byte_end":13614767,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614772,"byte_end":13614805,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614810,"byte_end":13614813,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614818,"byte_end":13614859,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614864,"byte_end":13614886,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614891,"byte_end":13614935,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13614940,"byte_end":13614947,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7609},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615661,"byte_end":13615664,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"pub fn pop(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615052,"byte_end":13615092,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615097,"byte_end":13615100,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615105,"byte_end":13615173,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615178,"byte_end":13615208,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615213,"byte_end":13615216,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615221,"byte_end":13615301,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615306,"byte_end":13615360,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615365,"byte_end":13615368,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615373,"byte_end":13615387,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615392,"byte_end":13615395,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615400,"byte_end":13615407,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615412,"byte_end":13615453,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615458,"byte_end":13615461,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615466,"byte_end":13615513,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615518,"byte_end":13615521,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615526,"byte_end":13615538,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615543,"byte_end":13615581,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615586,"byte_end":13615598,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615603,"byte_end":13615637,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615642,"byte_end":13615649,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7610},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616694,"byte_end":13616707,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"pub fn set_file_name<S: AsRef<OsStr>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615722,"byte_end":13615768,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615773,"byte_end":13615776,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615781,"byte_end":13615850,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615855,"byte_end":13615871,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615876,"byte_end":13615879,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615884,"byte_end":13615950,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13615955,"byte_end":13616024,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616029,"byte_end":13616073,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616078,"byte_end":13616081,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616086,"byte_end":13616146,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616151,"byte_end":13616231,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616236,"byte_end":13616279,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616284,"byte_end":13616287,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616292,"byte_end":13616306,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616311,"byte_end":13616314,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616319,"byte_end":13616326,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616331,"byte_end":13616364,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616369,"byte_end":13616372,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616377,"byte_end":13616414,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616419,"byte_end":13616456,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616461,"byte_end":13616490,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616495,"byte_end":13616537,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616542,"byte_end":13616581,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616586,"byte_end":13616619,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616624,"byte_end":13616670,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616675,"byte_end":13616682,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7612},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617720,"byte_end":13617733,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"pub fn set_extension<S: AsRef<OsStr>>(&mut Self, S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616807,"byte_end":13616853,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616858,"byte_end":13616861,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616866,"byte_end":13616937,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13616942,"byte_end":13616997,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617002,"byte_end":13617005,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617010,"byte_end":13617082,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617087,"byte_end":13617106,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617111,"byte_end":13617114,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617119,"byte_end":13617179,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617184,"byte_end":13617244,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617249,"byte_end":13617329,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617334,"byte_end":13617337,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617342,"byte_end":13617356,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617361,"byte_end":13617364,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617369,"byte_end":13617376,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617381,"byte_end":13617422,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617427,"byte_end":13617430,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617435,"byte_end":13617478,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617483,"byte_end":13617486,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617491,"byte_end":13617520,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617525,"byte_end":13617583,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617588,"byte_end":13617591,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617596,"byte_end":13617629,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617634,"byte_end":13617696,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617701,"byte_end":13617708,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7614},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618200,"byte_end":13618214,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"pub fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617841,"byte_end":13617913,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617918,"byte_end":13617921,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13617926,"byte_end":13617998,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618003,"byte_end":13618006,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618011,"byte_end":13618025,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618030,"byte_end":13618033,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618038,"byte_end":13618045,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618050,"byte_end":13618083,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618088,"byte_end":13618091,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618096,"byte_end":13618135,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618140,"byte_end":13618176,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618181,"byte_end":13618188,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7615},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618465,"byte_end":13618480,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"pub fn into_boxed_path(Self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618282,"byte_end":13618341,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618346,"byte_end":13618349,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618354,"byte_end":13618418,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618423,"byte_end":13618453,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":7719},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":7720},{"krate":0,"index":7723},{"krate":0,"index":7726},{"krate":0,"index":7727},{"krate":0,"index":7730},{"krate":0,"index":7733},{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7740},{"krate":0,"index":7743},{"krate":0,"index":7746},{"krate":0,"index":7749},{"krate":0,"index":7750},{"krate":0,"index":7753},{"krate":0,"index":7756},{"krate":0,"index":7759},{"krate":0,"index":7762},{"krate":0,"index":7875},{"krate":0,"index":8025}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":16856,"byte_end":16883,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Networking primitives for TCP/UDP communication.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622609,"byte_end":13622661,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622662,"byte_end":13622665,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides networking functionality for the Transmission Control and User","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622666,"byte_end":13622753,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622754,"byte_end":13622823,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622824,"byte_end":13622827,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::net`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622828,"byte_end":13622880,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622881,"byte_end":13622884,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622885,"byte_end":13622903,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622904,"byte_end":13622907,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622908,"byte_end":13622996,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13622997,"byte_end":13623066,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623067,"byte_end":13623148,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623149,"byte_end":13623208,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623209,"byte_end":13623298,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623299,"byte_end":13623373,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623374,"byte_end":13623466,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623467,"byte_end":13623549,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ * Other types are return or parameter types for various methods in this module","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623550,"byte_end":13623632,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623633,"byte_end":13623636,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623637,"byte_end":13623669,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623670,"byte_end":13623708,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623709,"byte_end":13623747,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623748,"byte_end":13623788,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623789,"byte_end":13623835,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623836,"byte_end":13623882,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623883,"byte_end":13623927,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623928,"byte_end":13623968,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/ [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13623969,"byte_end":13624016,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624017,"byte_end":13624057,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624058,"byte_end":13624061,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624062,"byte_end":13624096,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624097,"byte_end":13624100,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624101,"byte_end":13624191,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"/ platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624192,"byte_end":13624257,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624258,"byte_end":13624261,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`async_std::os`]: ../os/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624262,"byte_end":13624301,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624302,"byte_end":13624364,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624365,"byte_end":13624368,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624369,"byte_end":13624383,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624384,"byte_end":13624387,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ A simple UDP echo server:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624388,"byte_end":13624417,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624418,"byte_end":13624421,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624422,"byte_end":13624435,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624436,"byte_end":13624510,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624511,"byte_end":13624516,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624517,"byte_end":13624551,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624552,"byte_end":13624555,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624556,"byte_end":13624614,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624615,"byte_end":13624649,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624650,"byte_end":13624653,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624654,"byte_end":13624664,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624665,"byte_end":13624723,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624724,"byte_end":13624772,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624773,"byte_end":13624778,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624779,"byte_end":13624784,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624785,"byte_end":13624795,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/mod.rs","byte_start":13624796,"byte_end":13624803,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":7811},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626479,"byte_end":13626492,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":7812},{"krate":0,"index":7813}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13625901,"byte_end":13625961,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13625962,"byte_end":13625965,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13625966,"byte_end":13626032,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626033,"byte_end":13626036,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626037,"byte_end":13626128,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626129,"byte_end":13626169,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626170,"byte_end":13626173,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626174,"byte_end":13626188,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626189,"byte_end":13626192,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626193,"byte_end":13626200,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626201,"byte_end":13626275,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626276,"byte_end":13626281,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626282,"byte_end":13626320,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626321,"byte_end":13626324,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626325,"byte_end":13626398,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626399,"byte_end":13626436,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626437,"byte_end":13626442,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626443,"byte_end":13626460,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626461,"byte_end":13626468,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":7812},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626587,"byte_end":13626591,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":7811},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626499,"byte_end":13626577,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":7813},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626933,"byte_end":13626948,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":7811},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626627,"byte_end":13626693,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626698,"byte_end":13626701,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626706,"byte_end":13626797,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626802,"byte_end":13626827,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626832,"byte_end":13626835,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13626840,"byte_end":13626925,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7816},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627165,"byte_end":13627174,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":7814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7819},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627207,"byte_end":13627212,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":7814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7822},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627233,"byte_end":13627237,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":7814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7814},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627136,"byte_end":13627155,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"pub enum ToSocketAddrsFuture<I> {\n    Resolving(JoinHandle<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":7816},{"krate":0,"index":7819},{"krate":0,"index":7822}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627087,"byte_end":13627126,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8529},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634841,"byte_end":13634852,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":8530}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633585,"byte_end":13633636,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633637,"byte_end":13633640,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633641,"byte_end":13633738,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633739,"byte_end":13633827,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633828,"byte_end":13633857,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633858,"byte_end":13633861,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633862,"byte_end":13633918,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633919,"byte_end":13633922,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633923,"byte_end":13633992,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633993,"byte_end":13633996,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13633997,"byte_end":13634060,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634061,"byte_end":13634064,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634065,"byte_end":13634091,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634092,"byte_end":13634126,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634127,"byte_end":13634181,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634182,"byte_end":13634270,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634271,"byte_end":13634274,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634275,"byte_end":13634289,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634290,"byte_end":13634293,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634294,"byte_end":13634307,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634308,"byte_end":13634382,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634383,"byte_end":13634388,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634389,"byte_end":13634411,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634412,"byte_end":13634448,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634449,"byte_end":13634479,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634480,"byte_end":13634483,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634484,"byte_end":13634546,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634547,"byte_end":13634590,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634591,"byte_end":13634594,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634595,"byte_end":13634647,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634648,"byte_end":13634677,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634678,"byte_end":13634733,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634734,"byte_end":13634774,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634775,"byte_end":13634780,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634781,"byte_end":13634786,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634787,"byte_end":13634804,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634805,"byte_end":13634812,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7929},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635674,"byte_end":13635678,"line_start":78,"line_end":78,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634924,"byte_end":13635001,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635006,"byte_end":13635009,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635014,"byte_end":13635075,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635080,"byte_end":13635083,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635088,"byte_end":13635181,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635186,"byte_end":13635254,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635259,"byte_end":13635262,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635267,"byte_end":13635281,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635286,"byte_end":13635333,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635338,"byte_end":13635341,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635346,"byte_end":13635359,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635364,"byte_end":13635438,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635443,"byte_end":13635448,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635453,"byte_end":13635489,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635494,"byte_end":13635497,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635502,"byte_end":13635561,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635566,"byte_end":13635571,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635576,"byte_end":13635593,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635598,"byte_end":13635605,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635610,"byte_end":13635613,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13635618,"byte_end":13635656,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7934},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636844,"byte_end":13636850,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636311,"byte_end":13636366,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636371,"byte_end":13636374,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636379,"byte_end":13636471,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636476,"byte_end":13636479,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636484,"byte_end":13636499,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636504,"byte_end":13636507,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636512,"byte_end":13636525,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636530,"byte_end":13636604,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636609,"byte_end":13636614,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636619,"byte_end":13636655,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636660,"byte_end":13636663,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636668,"byte_end":13636727,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636732,"byte_end":13636782,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636787,"byte_end":13636792,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636797,"byte_end":13636814,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13636819,"byte_end":13636826,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7937},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638014,"byte_end":13638022,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637079,"byte_end":13637124,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637129,"byte_end":13637132,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637137,"byte_end":13637228,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637233,"byte_end":13637325,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637330,"byte_end":13637333,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637338,"byte_end":13637368,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637373,"byte_end":13637453,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637458,"byte_end":13637461,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637466,"byte_end":13637481,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637486,"byte_end":13637489,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637494,"byte_end":13637507,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637512,"byte_end":13637586,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637591,"byte_end":13637596,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637601,"byte_end":13637637,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637642,"byte_end":13637672,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637677,"byte_end":13637680,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637685,"byte_end":13637744,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637749,"byte_end":13637792,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637797,"byte_end":13637800,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637805,"byte_end":13637857,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637862,"byte_end":13637895,"line_start":143,"line_end":143,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637900,"byte_end":13637948,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637953,"byte_end":13637958,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637963,"byte_end":13637968,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637973,"byte_end":13637990,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13637995,"byte_end":13638002,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7938},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638690,"byte_end":13638700,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638145,"byte_end":13638206,"line_start":155,"line_end":155,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638211,"byte_end":13638214,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638219,"byte_end":13638314,"line_start":157,"line_end":157,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638319,"byte_end":13638333,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638338,"byte_end":13638341,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638346,"byte_end":13638360,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638365,"byte_end":13638368,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638373,"byte_end":13638386,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638391,"byte_end":13638465,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638470,"byte_end":13638475,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638480,"byte_end":13638516,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638521,"byte_end":13638524,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638529,"byte_end":13638591,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638596,"byte_end":13638634,"line_start":168,"line_end":168,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638639,"byte_end":13638644,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638649,"byte_end":13638666,"line_start":170,"line_end":170,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638671,"byte_end":13638678,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7939},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639340,"byte_end":13639348,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":7941}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638789,"byte_end":13638830,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638831,"byte_end":13638834,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638835,"byte_end":13638933,"line_start":179,"line_end":179,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638934,"byte_end":13638992,"line_start":180,"line_end":180,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638993,"byte_end":13638996,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13638997,"byte_end":13639057,"line_start":182,"line_end":182,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639058,"byte_end":13639061,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639062,"byte_end":13639142,"line_start":184,"line_end":184,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639143,"byte_end":13639200,"line_start":185,"line_end":185,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639201,"byte_end":13639245,"line_start":186,"line_end":186,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639246,"byte_end":13639328,"line_start":187,"line_end":187,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":8552},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643218,"byte_end":13643227,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":8553}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13641660,"byte_end":13641713,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13641714,"byte_end":13641717,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13641718,"byte_end":13641815,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13641816,"byte_end":13641909,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13641910,"byte_end":13641993,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13641994,"byte_end":13641997,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13641998,"byte_end":13642094,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642095,"byte_end":13642178,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642179,"byte_end":13642182,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642183,"byte_end":13642244,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642245,"byte_end":13642248,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642249,"byte_end":13642302,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642303,"byte_end":13642357,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642358,"byte_end":13642397,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642398,"byte_end":13642476,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642477,"byte_end":13642557,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642558,"byte_end":13642628,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642629,"byte_end":13642684,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642685,"byte_end":13642769,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642770,"byte_end":13642773,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642774,"byte_end":13642789,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642790,"byte_end":13642793,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642794,"byte_end":13642807,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642808,"byte_end":13642882,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642883,"byte_end":13642888,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642889,"byte_end":13642923,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642924,"byte_end":13642954,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642955,"byte_end":13642958,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13642959,"byte_end":13643024,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643025,"byte_end":13643069,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643070,"byte_end":13643073,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643074,"byte_end":13643108,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643109,"byte_end":13643150,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643151,"byte_end":13643156,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643157,"byte_end":13643174,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643175,"byte_end":13643182,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7992},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643992,"byte_end":13643999,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643311,"byte_end":13643375,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643380,"byte_end":13643383,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643388,"byte_end":13643472,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643477,"byte_end":13643562,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643567,"byte_end":13643623,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643628,"byte_end":13643631,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643636,"byte_end":13643678,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643683,"byte_end":13643686,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643691,"byte_end":13643705,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643710,"byte_end":13643713,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643718,"byte_end":13643731,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643736,"byte_end":13643810,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643815,"byte_end":13643820,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643825,"byte_end":13643859,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643864,"byte_end":13643867,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643872,"byte_end":13643930,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643935,"byte_end":13643940,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643945,"byte_end":13643962,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643967,"byte_end":13643974,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7997},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645168,"byte_end":13645178,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13644752,"byte_end":13644815,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13644820,"byte_end":13644823,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13644828,"byte_end":13644843,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13644848,"byte_end":13644851,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13644856,"byte_end":13644869,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13644874,"byte_end":13644948,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13644953,"byte_end":13644958,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13644963,"byte_end":13644997,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645002,"byte_end":13645005,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645010,"byte_end":13645071,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645076,"byte_end":13645112,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645117,"byte_end":13645122,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645127,"byte_end":13645144,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645149,"byte_end":13645156,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7998},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645685,"byte_end":13645694,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645269,"byte_end":13645333,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645338,"byte_end":13645341,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645346,"byte_end":13645361,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645366,"byte_end":13645369,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645374,"byte_end":13645387,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645392,"byte_end":13645466,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645471,"byte_end":13645476,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645481,"byte_end":13645515,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645520,"byte_end":13645523,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645528,"byte_end":13645589,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645594,"byte_end":13645629,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645634,"byte_end":13645639,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645644,"byte_end":13645661,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645666,"byte_end":13645673,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7999},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646349,"byte_end":13646352,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645784,"byte_end":13645842,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645847,"byte_end":13645850,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645855,"byte_end":13645915,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645920,"byte_end":13645923,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645928,"byte_end":13645960,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645965,"byte_end":13645968,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645973,"byte_end":13645987,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13645992,"byte_end":13645995,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646000,"byte_end":13646013,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646018,"byte_end":13646092,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646097,"byte_end":13646102,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646107,"byte_end":13646141,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646146,"byte_end":13646149,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646154,"byte_end":13646215,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646220,"byte_end":13646223,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646228,"byte_end":13646253,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646258,"byte_end":13646293,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646298,"byte_end":13646303,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646308,"byte_end":13646325,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646330,"byte_end":13646337,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8000},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646991,"byte_end":13646998,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646429,"byte_end":13646487,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646492,"byte_end":13646495,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646500,"byte_end":13646576,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646581,"byte_end":13646602,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646607,"byte_end":13646610,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646615,"byte_end":13646629,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646634,"byte_end":13646637,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646642,"byte_end":13646655,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646660,"byte_end":13646734,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646739,"byte_end":13646744,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646749,"byte_end":13646783,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646788,"byte_end":13646791,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646796,"byte_end":13646857,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646862,"byte_end":13646865,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646870,"byte_end":13646895,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646900,"byte_end":13646935,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646940,"byte_end":13646945,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646950,"byte_end":13646967,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13646972,"byte_end":13646979,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8001},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647849,"byte_end":13647853,"line_start":204,"line_end":204,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647091,"byte_end":13647180,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647185,"byte_end":13647223,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647228,"byte_end":13647231,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647236,"byte_end":13647287,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647292,"byte_end":13647295,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647300,"byte_end":13647395,"line_start":187,"line_end":187,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647400,"byte_end":13647441,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647446,"byte_end":13647449,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647454,"byte_end":13647468,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647473,"byte_end":13647476,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647481,"byte_end":13647494,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647499,"byte_end":13647573,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647578,"byte_end":13647583,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647588,"byte_end":13647622,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647627,"byte_end":13647630,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647635,"byte_end":13647696,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647701,"byte_end":13647704,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647709,"byte_end":13647741,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647746,"byte_end":13647787,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647792,"byte_end":13647797,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647802,"byte_end":13647819,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647824,"byte_end":13647831,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8004},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648539,"byte_end":13648546,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13647948,"byte_end":13648010,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648015,"byte_end":13648018,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648023,"byte_end":13648087,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648092,"byte_end":13648095,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648100,"byte_end":13648140,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648145,"byte_end":13648148,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648153,"byte_end":13648167,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648172,"byte_end":13648175,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648180,"byte_end":13648193,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648198,"byte_end":13648272,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648277,"byte_end":13648282,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648287,"byte_end":13648321,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648326,"byte_end":13648329,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648334,"byte_end":13648395,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648400,"byte_end":13648403,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648408,"byte_end":13648438,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648443,"byte_end":13648483,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648488,"byte_end":13648493,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648498,"byte_end":13648515,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648520,"byte_end":13648527,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8005},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649430,"byte_end":13649441,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648628,"byte_end":13648690,"line_start":232,"line_end":232,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648695,"byte_end":13648698,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648703,"byte_end":13648772,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648777,"byte_end":13648850,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648855,"byte_end":13648928,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13648933,"byte_end":13649008,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649013,"byte_end":13649031,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649036,"byte_end":13649039,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649044,"byte_end":13649058,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649063,"byte_end":13649066,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649071,"byte_end":13649084,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649089,"byte_end":13649163,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649168,"byte_end":13649173,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649178,"byte_end":13649212,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649217,"byte_end":13649220,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649225,"byte_end":13649286,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649291,"byte_end":13649294,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649299,"byte_end":13649329,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649334,"byte_end":13649374,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649379,"byte_end":13649384,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649389,"byte_end":13649406,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649411,"byte_end":13649418,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8006},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650278,"byte_end":13650286,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649547,"byte_end":13649613,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649618,"byte_end":13649621,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649626,"byte_end":13649715,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649720,"byte_end":13649802,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649807,"byte_end":13649810,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649815,"byte_end":13649885,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649890,"byte_end":13649893,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649898,"byte_end":13649912,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649917,"byte_end":13649920,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649925,"byte_end":13649938,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13649943,"byte_end":13650017,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650022,"byte_end":13650027,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650032,"byte_end":13650059,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650064,"byte_end":13650067,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650072,"byte_end":13650106,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650111,"byte_end":13650114,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650119,"byte_end":13650180,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650185,"byte_end":13650222,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650227,"byte_end":13650232,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650237,"byte_end":13650254,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650259,"byte_end":13650266,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8577},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656152,"byte_end":13656161,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":8578}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13654898,"byte_end":13654915,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13654916,"byte_end":13654919,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13654920,"byte_end":13655017,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655018,"byte_end":13655063,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655064,"byte_end":13655067,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655068,"byte_end":13655167,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655168,"byte_end":13655261,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655262,"byte_end":13655265,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655266,"byte_end":13655327,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655328,"byte_end":13655331,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655332,"byte_end":13655358,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655359,"byte_end":13655397,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655398,"byte_end":13655428,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655429,"byte_end":13655473,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655474,"byte_end":13655514,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655515,"byte_end":13655577,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655578,"byte_end":13655632,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655633,"byte_end":13655717,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655718,"byte_end":13655721,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655722,"byte_end":13655737,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655738,"byte_end":13655741,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655742,"byte_end":13655755,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655756,"byte_end":13655830,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655831,"byte_end":13655836,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655837,"byte_end":13655871,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655872,"byte_end":13655875,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655876,"byte_end":13655934,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655935,"byte_end":13655969,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655970,"byte_end":13655973,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655974,"byte_end":13655984,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13655985,"byte_end":13656043,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656044,"byte_end":13656092,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656093,"byte_end":13656098,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656099,"byte_end":13656104,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656105,"byte_end":13656115,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656116,"byte_end":13656123,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":8049},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656816,"byte_end":13656820,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656229,"byte_end":13656277,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656282,"byte_end":13656285,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656290,"byte_end":13656385,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656390,"byte_end":13656454,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656459,"byte_end":13656462,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656467,"byte_end":13656505,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656510,"byte_end":13656513,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656518,"byte_end":13656532,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656537,"byte_end":13656540,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656545,"byte_end":13656558,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656563,"byte_end":13656637,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656642,"byte_end":13656647,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656652,"byte_end":13656686,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656691,"byte_end":13656694,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656699,"byte_end":13656754,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656759,"byte_end":13656764,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656769,"byte_end":13656786,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656791,"byte_end":13656798,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8054},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658099,"byte_end":13658108,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address that this listener is connected to.","sig":null,"attributes":[{"value":"/ Returns the peer address that this listener is connected to.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657443,"byte_end":13657507,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657512,"byte_end":13657515,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when connect to port 0 to figure out which port was","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657520,"byte_end":13657608,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"/ actually connected.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657613,"byte_end":13657636,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657641,"byte_end":13657644,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657649,"byte_end":13657663,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657668,"byte_end":13657671,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657676,"byte_end":13657689,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657694,"byte_end":13657768,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657773,"byte_end":13657778,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657783,"byte_end":13657817,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657822,"byte_end":13657825,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let socket1 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657830,"byte_end":13657886,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ let socket2 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657891,"byte_end":13657947,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/ socket1.connect(socket2.local_addr()?).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13657952,"byte_end":13658002,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ let addr = socket1.peer_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658007,"byte_end":13658043,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658048,"byte_end":13658053,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658058,"byte_end":13658075,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658080,"byte_end":13658087,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8056},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658824,"byte_end":13658834,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658292,"byte_end":13658353,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658358,"byte_end":13658361,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658366,"byte_end":13658454,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658459,"byte_end":13658478,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658483,"byte_end":13658486,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658491,"byte_end":13658505,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658510,"byte_end":13658513,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658518,"byte_end":13658531,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658536,"byte_end":13658610,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658615,"byte_end":13658620,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658625,"byte_end":13658659,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658664,"byte_end":13658667,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658672,"byte_end":13658727,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658732,"byte_end":13658768,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658773,"byte_end":13658778,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658783,"byte_end":13658800,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13658805,"byte_end":13658812,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8058},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659878,"byte_end":13659885,"line_start":167,"line_end":167,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659020,"byte_end":13659070,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659075,"byte_end":13659078,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659083,"byte_end":13659135,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659140,"byte_end":13659143,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659148,"byte_end":13659162,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659167,"byte_end":13659170,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659175,"byte_end":13659188,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659193,"byte_end":13659267,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659272,"byte_end":13659277,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659282,"byte_end":13659316,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659321,"byte_end":13659324,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659329,"byte_end":13659373,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659378,"byte_end":13659419,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659424,"byte_end":13659466,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659471,"byte_end":13659511,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659516,"byte_end":13659566,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659571,"byte_end":13659577,"line_start":157,"line_end":157,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659582,"byte_end":13659585,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659590,"byte_end":13659645,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659650,"byte_end":13659653,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659658,"byte_end":13659690,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659695,"byte_end":13659763,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659768,"byte_end":13659816,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659821,"byte_end":13659826,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659831,"byte_end":13659848,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13659853,"byte_end":13659860,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8063},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661000,"byte_end":13661009,"line_start":203,"line_end":203,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660418,"byte_end":13660452,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660457,"byte_end":13660460,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660465,"byte_end":13660529,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660534,"byte_end":13660537,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660542,"byte_end":13660556,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660561,"byte_end":13660564,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660569,"byte_end":13660582,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660587,"byte_end":13660661,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660666,"byte_end":13660671,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660676,"byte_end":13660710,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660715,"byte_end":13660718,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660723,"byte_end":13660778,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660783,"byte_end":13660786,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660791,"byte_end":13660823,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660828,"byte_end":13660882,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660887,"byte_end":13660938,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660943,"byte_end":13660948,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660953,"byte_end":13660970,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13660975,"byte_end":13660982,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8066},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661737,"byte_end":13661746,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from socket without removing it from the queue.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661123,"byte_end":13661188,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661193,"byte_end":13661196,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the origin.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661201,"byte_end":13661267,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661272,"byte_end":13661275,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661280,"byte_end":13661294,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661299,"byte_end":13661302,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661307,"byte_end":13661320,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661325,"byte_end":13661399,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661404,"byte_end":13661409,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661414,"byte_end":13661448,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661453,"byte_end":13661456,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661461,"byte_end":13661516,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661521,"byte_end":13661524,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661529,"byte_end":13661561,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661566,"byte_end":13661620,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, peer);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661625,"byte_end":13661674,"line_start":222,"line_end":222,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661679,"byte_end":13661684,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ # Ok (()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661689,"byte_end":13661707,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661712,"byte_end":13661719,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8069},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662638,"byte_end":13662645,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661860,"byte_end":13661908,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661913,"byte_end":13661916,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13661921,"byte_end":13662013,"line_start":232,"line_end":232,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662018,"byte_end":13662112,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662117,"byte_end":13662167,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662172,"byte_end":13662175,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662180,"byte_end":13662206,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662211,"byte_end":13662237,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662242,"byte_end":13662278,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662283,"byte_end":13662286,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662291,"byte_end":13662305,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662310,"byte_end":13662313,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662318,"byte_end":13662331,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662336,"byte_end":13662410,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662415,"byte_end":13662420,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662425,"byte_end":13662459,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662464,"byte_end":13662467,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662472,"byte_end":13662527,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662532,"byte_end":13662576,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662581,"byte_end":13662586,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662591,"byte_end":13662608,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13662613,"byte_end":13662620,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8075},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664084,"byte_end":13664088,"line_start":297,"line_end":297,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663348,"byte_end":13663424,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663429,"byte_end":13663432,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663437,"byte_end":13663509,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663514,"byte_end":13663571,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663576,"byte_end":13663579,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663584,"byte_end":13663616,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663621,"byte_end":13663624,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663629,"byte_end":13663643,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663648,"byte_end":13663651,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663656,"byte_end":13663669,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663674,"byte_end":13663748,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663753,"byte_end":13663758,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663763,"byte_end":13663797,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663802,"byte_end":13663805,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663810,"byte_end":13663869,"line_start":289,"line_end":289,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663874,"byte_end":13663918,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663923,"byte_end":13663972,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663977,"byte_end":13663980,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13663985,"byte_end":13664022,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664027,"byte_end":13664032,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664037,"byte_end":13664054,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664059,"byte_end":13664066,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8078},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664768,"byte_end":13664772,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664179,"byte_end":13664213,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664218,"byte_end":13664221,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664226,"byte_end":13664275,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664280,"byte_end":13664283,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664288,"byte_end":13664302,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664307,"byte_end":13664310,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664315,"byte_end":13664328,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664333,"byte_end":13664407,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664412,"byte_end":13664417,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664422,"byte_end":13664456,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664461,"byte_end":13664464,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664469,"byte_end":13664524,"line_start":312,"line_end":312,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664529,"byte_end":13664573,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664578,"byte_end":13664581,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664586,"byte_end":13664618,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664623,"byte_end":13664664,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664669,"byte_end":13664706,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664711,"byte_end":13664716,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664721,"byte_end":13664738,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664743,"byte_end":13664750,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8081},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665491,"byte_end":13665495,"line_start":345,"line_end":345,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket without removing it from the queue.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664867,"byte_end":13664936,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664941,"byte_end":13664944,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13664949,"byte_end":13665000,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665005,"byte_end":13665008,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665013,"byte_end":13665027,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665032,"byte_end":13665035,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665040,"byte_end":13665053,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665058,"byte_end":13665132,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665137,"byte_end":13665142,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665147,"byte_end":13665181,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665186,"byte_end":13665189,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665194,"byte_end":13665249,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665254,"byte_end":13665298,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665303,"byte_end":13665306,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665311,"byte_end":13665343,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665348,"byte_end":13665389,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665394,"byte_end":13665429,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665434,"byte_end":13665439,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665444,"byte_end":13665461,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665466,"byte_end":13665473,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8084},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665802,"byte_end":13665811,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665590,"byte_end":13665654,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665659,"byte_end":13665662,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665667,"byte_end":13665733,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665738,"byte_end":13665741,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665746,"byte_end":13665790,"line_start":353,"line_end":353,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":8085},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666064,"byte_end":13666077,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665895,"byte_end":13665959,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665964,"byte_end":13665967,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13665972,"byte_end":13666052,"line_start":360,"line_end":360,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":8086},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666416,"byte_end":13666433,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666175,"byte_end":13666244,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666249,"byte_end":13666252,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666257,"byte_end":13666331,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666336,"byte_end":13666339,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666344,"byte_end":13666404,"line_start":369,"line_end":369,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8087},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666778,"byte_end":13666799,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666525,"byte_end":13666594,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666599,"byte_end":13666602,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666607,"byte_end":13666681,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666686,"byte_end":13666689,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666694,"byte_end":13666704,"line_start":378,"line_end":378,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666709,"byte_end":13666712,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666717,"byte_end":13666766,"line_start":380,"line_end":380,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8088},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667142,"byte_end":13667158,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666905,"byte_end":13666973,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666978,"byte_end":13666981,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13666986,"byte_end":13667059,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667064,"byte_end":13667067,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667072,"byte_end":13667130,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8089},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667642,"byte_end":13667662,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667248,"byte_end":13667316,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667321,"byte_end":13667324,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667329,"byte_end":13667424,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667429,"byte_end":13667515,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667520,"byte_end":13667545,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667550,"byte_end":13667553,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667558,"byte_end":13667568,"line_start":400,"line_end":400,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667573,"byte_end":13667576,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667581,"byte_end":13667630,"line_start":402,"line_end":402,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8090},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668011,"byte_end":13668028,"line_start":412,"line_end":412,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667768,"byte_end":13667839,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667844,"byte_end":13667847,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667852,"byte_end":13667926,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667931,"byte_end":13667934,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13667939,"byte_end":13667999,"line_start":411,"line_end":411,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8091},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668377,"byte_end":13668398,"line_start":423,"line_end":423,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668120,"byte_end":13668191,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668196,"byte_end":13668199,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668204,"byte_end":13668280,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668285,"byte_end":13668288,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668293,"byte_end":13668303,"line_start":420,"line_end":420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668308,"byte_end":13668311,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668316,"byte_end":13668365,"line_start":422,"line_end":422,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8092},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668692,"byte_end":13668695,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668504,"byte_end":13668562,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668567,"byte_end":13668570,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668575,"byte_end":13668635,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668640,"byte_end":13668643,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668648,"byte_end":13668680,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8093},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668957,"byte_end":13668964,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668772,"byte_end":13668830,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668835,"byte_end":13668838,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668843,"byte_end":13668919,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13668924,"byte_end":13668945,"line_start":439,"line_end":439,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":8094},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669981,"byte_end":13669998,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669057,"byte_end":13669115,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669120,"byte_end":13669123,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669128,"byte_end":13669220,"line_start":446,"line_end":446,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669225,"byte_end":13669320,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669325,"byte_end":13669410,"line_start":448,"line_end":448,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669415,"byte_end":13669465,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669470,"byte_end":13669473,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669478,"byte_end":13669492,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669497,"byte_end":13669500,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669505,"byte_end":13669518,"line_start":453,"line_end":453,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669523,"byte_end":13669597,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669602,"byte_end":13669607,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669612,"byte_end":13669639,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669644,"byte_end":13669647,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669652,"byte_end":13669686,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669691,"byte_end":13669694,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669699,"byte_end":13669745,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669750,"byte_end":13669800,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669805,"byte_end":13669808,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669813,"byte_end":13669868,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669873,"byte_end":13669925,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669930,"byte_end":13669935,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669940,"byte_end":13669957,"line_start":466,"line_end":466,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13669962,"byte_end":13669969,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8095},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671061,"byte_end":13671078,"line_start":497,"line_end":497,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670178,"byte_end":13670238,"line_start":474,"line_end":474,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670243,"byte_end":13670246,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670251,"byte_end":13670343,"line_start":476,"line_end":476,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670348,"byte_end":13670442,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670447,"byte_end":13670480,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670485,"byte_end":13670488,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670493,"byte_end":13670507,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670512,"byte_end":13670515,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670520,"byte_end":13670533,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670538,"byte_end":13670612,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670617,"byte_end":13670622,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670627,"byte_end":13670668,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670673,"byte_end":13670676,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670681,"byte_end":13670715,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670720,"byte_end":13670723,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670728,"byte_end":13670815,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670820,"byte_end":13670888,"line_start":490,"line_end":490,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670893,"byte_end":13670947,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670952,"byte_end":13670955,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13670960,"byte_end":13671005,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671010,"byte_end":13671015,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671020,"byte_end":13671037,"line_start":495,"line_end":495,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671042,"byte_end":13671049,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8096},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671471,"byte_end":13671489,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671252,"byte_end":13671311,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671316,"byte_end":13671319,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671324,"byte_end":13671394,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671399,"byte_end":13671402,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671407,"byte_end":13671459,"line_start":507,"line_end":507,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":8097},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671891,"byte_end":13671909,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671670,"byte_end":13671731,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671736,"byte_end":13671739,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671744,"byte_end":13671814,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671819,"byte_end":13671822,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13671827,"byte_end":13671879,"line_start":518,"line_end":518,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":8600},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/pin/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pin","qualname":"::pin","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/pin/mod.rs","parent":null,"children":[{"krate":0,"index":8601}],"decl_id":null,"docs":" Types that pin data to its location in memory.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":14854,"byte_end":14882,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"/ Types that pin data to its location in memory.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/pin/mod.rs","byte_start":13677717,"byte_end":13677767,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/pin/mod.rs","byte_start":13677768,"byte_end":13677771,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For more documentation see [`std::pin`](https://doc.rust-lang.org/std/pin/index.html).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/pin/mod.rs","byte_start":13677772,"byte_end":13677862,"line_start":3,"line_end":3,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":8604},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","parent":null,"children":[{"krate":0,"index":8605},{"krate":0,"index":8608},{"krate":0,"index":8611},{"krate":0,"index":8614},{"krate":0,"index":8617},{"krate":0,"index":8620},{"krate":0,"index":8623},{"krate":0,"index":8626},{"krate":0,"index":8629},{"krate":0,"index":8630},{"krate":0,"index":8633},{"krate":0,"index":8636}],"decl_id":null,"docs":" A module for working with processes.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":14854,"byte_end":14882,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"std\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11301,"byte_end":11357,"line_start":325,"line_end":325,"column_start":5,"column_end":61}},{"value":"/ A module for working with processes.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13677903,"byte_end":13677943,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13677944,"byte_end":13677947,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is mostly concerned with spawning and interacting with child processes, but it also","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13677948,"byte_end":13678047,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ provides abort and exit for terminating the current process.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678048,"byte_end":13678112,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678113,"byte_end":13678116,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::process`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678117,"byte_end":13678166,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678167,"byte_end":13678170,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`std::process`]: https://doc.rust-lang.org/std/process/index.html","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/process.rs","byte_start":13678171,"byte_end":13678241,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":11837,"byte_end":11841,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043632,"byte_end":13043640,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1880},{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045539,"byte_end":13045546,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13050903,"byte_end":13050920,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053166,"byte_end":13053176,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13054249,"byte_end":13054259,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13054408,"byte_end":13054418,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057620,"byte_end":13057624,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13058234,"byte_end":13058238,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058792,"byte_end":13058798,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13059209,"byte_end":13059215,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059805,"byte_end":13059813,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13063693,"byte_end":13063704,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13063848,"byte_end":13063859,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13064024,"byte_end":13064035,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13064403,"byte_end":13064412,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_locals_wrapper.rs","byte_start":13066264,"byte_end":13066281,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_locals_wrapper.rs","byte_start":13067694,"byte_end":13067711,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/delay.rs","byte_start":13193106,"byte_end":13193117,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/delay.rs","byte_start":13193297,"byte_end":13193308,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/flatten.rs","byte_start":13194337,"byte_end":13194350,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/flatten.rs","byte_start":13194537,"byte_end":13194550,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2356},{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/race.rs","byte_start":13195815,"byte_end":13195819,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/race.rs","byte_start":13196073,"byte_end":13196077,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_race.rs","byte_start":13197070,"byte_end":13197077,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_race.rs","byte_start":13197337,"byte_end":13197344,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2417}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/join.rs","byte_start":13198816,"byte_end":13198820,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/join.rs","byte_start":13199054,"byte_end":13199058,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2445},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_join.rs","byte_start":13200236,"byte_end":13200243,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_join.rs","byte_start":13200486,"byte_end":13200493,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202423,"byte_end":13202430,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2574},{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203323,"byte_end":13203329,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203359,"byte_end":13203365,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2603},{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895992,"byte_end":12896005,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12896232,"byte_end":12896245,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12896881,"byte_end":12896893,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12896920,"byte_end":12896932,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13205016,"byte_end":13205017,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/maybe_done.rs","byte_start":13205830,"byte_end":13205839,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/maybe_done.rs","byte_start":13207092,"byte_end":13207101,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/all.rs","byte_start":12979371,"byte_end":12979380,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/all.rs","byte_start":12979587,"byte_end":12979596,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/all.rs","byte_start":12979636,"byte_end":12979645,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/any.rs","byte_start":12980726,"byte_end":12980735,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/any.rs","byte_start":12980942,"byte_end":12980951,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/any.rs","byte_start":12980991,"byte_end":12981000,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/chain.rs","byte_start":12982370,"byte_end":12982375,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/chain.rs","byte_start":12982593,"byte_end":12982598,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cloned.rs","byte_start":12983636,"byte_end":12983642,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cloned.rs","byte_start":12983754,"byte_end":12983760,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cmp.rs","byte_start":12984711,"byte_end":12984720,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cmp.rs","byte_start":12984949,"byte_end":12984958,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/copied.rs","byte_start":12987257,"byte_end":12987263,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/copied.rs","byte_start":12987375,"byte_end":12987381,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cycle.rs","byte_start":12988038,"byte_end":12988043,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cycle.rs","byte_start":12988228,"byte_end":12988233,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/enumerate.rs","byte_start":12988926,"byte_end":12988935,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/enumerate.rs","byte_start":12989042,"byte_end":12989051,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/eq.rs","byte_start":12990067,"byte_end":12990075,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/eq.rs","byte_start":12990289,"byte_end":12990297,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter.rs","byte_start":12991566,"byte_end":12991572,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter.rs","byte_start":12991737,"byte_end":12991743,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter_map.rs","byte_start":12992540,"byte_end":12992549,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter_map.rs","byte_start":12992668,"byte_end":12992677,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find.rs","byte_start":12993516,"byte_end":12993526,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find.rs","byte_start":12993660,"byte_end":12993670,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find.rs","byte_start":12993711,"byte_end":12993721,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find_map.rs","byte_start":12994515,"byte_end":12994528,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find_map.rs","byte_start":12994662,"byte_end":12994675,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find_map.rs","byte_start":12994719,"byte_end":12994732,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fold.rs","byte_start":12995645,"byte_end":12995655,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fold.rs","byte_start":12995848,"byte_end":12995858,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/for_each.rs","byte_start":12996818,"byte_end":12996831,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/for_each.rs","byte_start":12996980,"byte_end":12996993,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fuse.rs","byte_start":12998024,"byte_end":12998028,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fuse.rs","byte_start":12998183,"byte_end":12998187,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ge.rs","byte_start":12999210,"byte_end":12999218,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ge.rs","byte_start":12999426,"byte_end":12999434,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/gt.rs","byte_start":13000443,"byte_end":13000451,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/gt.rs","byte_start":13000659,"byte_end":13000667,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/inspect.rs","byte_start":13001635,"byte_end":13001642,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/inspect.rs","byte_start":13001791,"byte_end":13001798,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/last.rs","byte_start":13002518,"byte_end":13002528,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/last.rs","byte_start":13002644,"byte_end":13002654,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/le.rs","byte_start":13003772,"byte_end":13003780,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/le.rs","byte_start":13003988,"byte_end":13003996,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/lt.rs","byte_start":13005015,"byte_end":13005023,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/lt.rs","byte_start":13005231,"byte_end":13005239,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/map.rs","byte_start":13005972,"byte_end":13005975,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/map.rs","byte_start":13006127,"byte_end":13006130,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max.rs","byte_start":13006815,"byte_end":13006824,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max.rs","byte_start":13006939,"byte_end":13006948,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by.rs","byte_start":13008120,"byte_end":13008131,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by.rs","byte_start":13008318,"byte_end":13008329,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by_key.rs","byte_start":13009551,"byte_end":13009565,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by_key.rs","byte_start":13009750,"byte_end":13009764,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min.rs","byte_start":13011170,"byte_end":13011179,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min.rs","byte_start":13011294,"byte_end":13011303,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by.rs","byte_start":13012472,"byte_end":13012483,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by.rs","byte_start":13012670,"byte_end":13012681,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by_key.rs","byte_start":13013929,"byte_end":13013943,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by_key.rs","byte_start":13014128,"byte_end":13014142,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ne.rs","byte_start":13015711,"byte_end":13015719,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ne.rs","byte_start":13015933,"byte_end":13015941,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/next.rs","byte_start":13016997,"byte_end":13017007,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/nth.rs","byte_start":13017454,"byte_end":13017463,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/nth.rs","byte_start":13017487,"byte_end":13017496,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/nth.rs","byte_start":13017626,"byte_end":13017635,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partial_cmp.rs","byte_start":13018848,"byte_end":13018864,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partial_cmp.rs","byte_start":13019093,"byte_end":13019109,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/position.rs","byte_start":13021492,"byte_end":13021506,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/position.rs","byte_start":13021536,"byte_end":13021550,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/position.rs","byte_start":13021753,"byte_end":13021767,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/scan.rs","byte_start":13022965,"byte_end":13022969,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/scan.rs","byte_start":13023174,"byte_end":13023178,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip.rs","byte_start":13024163,"byte_end":13024167,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip.rs","byte_start":13024281,"byte_end":13024285,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip_while.rs","byte_start":13025405,"byte_end":13025414,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip_while.rs","byte_start":13025596,"byte_end":13025605,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/step_by.rs","byte_start":13026948,"byte_end":13026954,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/step_by.rs","byte_start":13027155,"byte_end":13027161,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take.rs","byte_start":13028364,"byte_end":13028368,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take.rs","byte_start":13028539,"byte_end":13028543,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take_while.rs","byte_start":13029588,"byte_end":13029597,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take_while.rs","byte_start":13029762,"byte_end":13029771,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_fold.rs","byte_start":13030625,"byte_end":13030638,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_fold.rs","byte_start":13030674,"byte_end":13030687,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_fold.rs","byte_start":13030899,"byte_end":13030912,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_for_each.rs","byte_start":13031942,"byte_end":13031958,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_for_each.rs","byte_start":13031988,"byte_end":13032004,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_for_each.rs","byte_start":13032139,"byte_end":13032155,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/zip.rs","byte_start":13033417,"byte_end":13033420,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/zip.rs","byte_start":13033660,"byte_end":13033663,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/zip.rs","byte_start":13033865,"byte_end":13033868,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/count.rs","byte_start":13237565,"byte_end":13237576,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2763}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/count.rs","byte_start":13237687,"byte_end":13237698,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/merge.rs","byte_start":13238915,"byte_end":13238920,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/merge.rs","byte_start":13239103,"byte_end":13239108,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2802},{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flatten.rs","byte_start":13240737,"byte_end":13240744,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flatten.rs","byte_start":13240947,"byte_end":13240954,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flatten.rs","byte_start":13241799,"byte_end":13241806,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2843}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flat_map.rs","byte_start":13242806,"byte_end":13242813,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flat_map.rs","byte_start":13243068,"byte_end":13243075,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2881}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partition.rs","byte_start":13244317,"byte_end":13244332,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partition.rs","byte_start":13244540,"byte_end":13244555,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13245801,"byte_end":13245808,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2954}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13245993,"byte_end":13246000,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13246922,"byte_end":13246934,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13246961,"byte_end":13246973,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/throttle.rs","byte_start":13247857,"byte_end":13247865,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2994}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/throttle.rs","byte_start":13248118,"byte_end":13248126,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/delay.rs","byte_start":13249318,"byte_end":13249323,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3031}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/delay.rs","byte_start":13249529,"byte_end":13249534,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/unzip.rs","byte_start":13250322,"byte_end":13250333,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/unzip.rs","byte_start":13250603,"byte_end":13250614,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3067},{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035406,"byte_end":13035411,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035912,"byte_end":13035918,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036847,"byte_end":13036853,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13038207,"byte_end":13038215,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13038470,"byte_end":13038478,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039522,"byte_end":13039526,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039751,"byte_end":13039755,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040695,"byte_end":13040701,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041270,"byte_end":13041280,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042472,"byte_end":13042482,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/next_back.rs","byte_start":13258638,"byte_end":13258652,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3287},{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13259106,"byte_end":13259119,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13259258,"byte_end":13259271,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3318},{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfind.rs","byte_start":13260128,"byte_end":13260139,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfind.rs","byte_start":13260280,"byte_end":13260291,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfind.rs","byte_start":13260332,"byte_end":13260343,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3355},{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfold.rs","byte_start":13261268,"byte_end":13261279,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfold.rs","byte_start":13261479,"byte_end":13261490,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13262509,"byte_end":13262523,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13262729,"byte_end":13262743,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13276210,"byte_end":13276218,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277438,"byte_end":13277439,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278599,"byte_end":13278606,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3576},{"krate":0,"index":3577}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278774,"byte_end":13278781,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3580}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278928,"byte_end":13278935,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278971,"byte_end":13278978,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3585}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13283130,"byte_end":13283140,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3638},{"krate":0,"index":3639}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/lines.rs","byte_start":13318373,"byte_end":13318378,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4478},{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/read_line.rs","byte_start":13320300,"byte_end":13320314,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4522},{"krate":0,"index":4523}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/read_until.rs","byte_start":13321773,"byte_end":13321788,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4558},{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/split.rs","byte_start":13322988,"byte_end":13322993,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4592},{"krate":0,"index":4593}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/bytes.rs","byte_start":13339910,"byte_end":13339915,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4648},{"krate":0,"index":4649}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341730,"byte_end":13341735,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343894,"byte_end":13343899,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4689}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13344141,"byte_end":13344146,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4693},{"krate":0,"index":4694}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13345291,"byte_end":13345296,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4698},{"krate":0,"index":4699}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read.rs","byte_start":13346997,"byte_end":13347007,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4728},{"krate":0,"index":4729}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_exact.rs","byte_start":13347582,"byte_end":13347597,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4761},{"krate":0,"index":4762}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_end.rs","byte_start":13348519,"byte_end":13348534,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4792},{"krate":0,"index":4793}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_end.rs","byte_start":13349684,"byte_end":13349689,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4801}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_string.rs","byte_start":13351006,"byte_end":13351024,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4841},{"krate":0,"index":4842}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_vectored.rs","byte_start":13352378,"byte_end":13352396,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4875},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353216,"byte_end":13353220,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4910}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356892,"byte_end":13356896,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4913}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13357814,"byte_end":13357818,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4918},{"krate":0,"index":4919}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/seek/seek.rs","byte_start":13362939,"byte_end":13362949,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4988},{"krate":0,"index":4989}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/flush.rs","byte_start":13374245,"byte_end":13374256,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5024},{"krate":0,"index":5025}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write.rs","byte_start":13374768,"byte_end":13374779,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5054},{"krate":0,"index":5055}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_all.rs","byte_start":13375344,"byte_end":13375358,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5087},{"krate":0,"index":5088}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_fmt.rs","byte_start":13376329,"byte_end":13376343,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5119},{"krate":0,"index":5120}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_vectored.rs","byte_start":13377828,"byte_end":13377847,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5152},{"krate":0,"index":5153}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/utils.rs","byte_start":13378314,"byte_end":13378320,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5192}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/utils.rs","byte_start":13378573,"byte_end":13378585,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5196}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/utils.rs","byte_start":13378872,"byte_end":13378884,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5199}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/utils.rs","byte_start":13379015,"byte_end":13379027,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5201}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381008,"byte_end":13381017,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5251},{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382245,"byte_end":13382254,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384994,"byte_end":13385003,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5263},{"krate":0,"index":5264}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13386457,"byte_end":13386466,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5268},{"krate":0,"index":5270}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13387388,"byte_end":13387397,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5273}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13387735,"byte_end":13387744,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5276}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394574,"byte_end":13394583,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5318},{"krate":0,"index":5319},{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5326},{"krate":0,"index":5327}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13400415,"byte_end":13400424,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13401322,"byte_end":13401331,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5335}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13401577,"byte_end":13401586,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5338}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13406382,"byte_end":13406392,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5383},{"krate":0,"index":5384}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408455,"byte_end":13408461,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5428},{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411762,"byte_end":13411768,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5432}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13412034,"byte_end":13412040,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5435},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13412556,"byte_end":13412562,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5439},{"krate":0,"index":5440}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13412912,"byte_end":13412918,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5442},{"krate":0,"index":5443},{"krate":0,"index":5444},{"krate":0,"index":5445}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13413677,"byte_end":13413683,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5447},{"krate":0,"index":5448},{"krate":0,"index":5449}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13414207,"byte_end":13414213,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415491,"byte_end":13415496,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5482}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415615,"byte_end":13415620,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5484}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415824,"byte_end":13415829,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5486},{"krate":0,"index":5488}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13417014,"byte_end":13417020,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5514}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13417139,"byte_end":13417145,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5516}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13418130,"byte_end":13418134,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5542}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13418253,"byte_end":13418257,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5544},{"krate":0,"index":5545},{"krate":0,"index":5546}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13420005,"byte_end":13420012,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5748},{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13423003,"byte_end":13423009,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5782},{"krate":0,"index":5784},{"krate":0,"index":5786}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13426490,"byte_end":13426496,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5926}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429348,"byte_end":13429353,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5825}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13431369,"byte_end":13431374,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5832}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13433512,"byte_end":13433517,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5965}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13436848,"byte_end":13436854,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5884},{"krate":0,"index":5886},{"krate":0,"index":5888}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13440335,"byte_end":13440341,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6003}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449617,"byte_end":13449629,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6095},{"krate":0,"index":6096},{"krate":0,"index":6097},{"krate":0,"index":6101},{"krate":0,"index":6102},{"krate":0,"index":6103},{"krate":0,"index":6106},{"krate":0,"index":6109},{"krate":0,"index":6113},{"krate":0,"index":6116}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456981,"byte_end":13456993,"line_start":288,"line_end":288,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6118}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13457429,"byte_end":13457441,"line_start":305,"line_end":305,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6120}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13457734,"byte_end":13457746,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13457845,"byte_end":13457857,"line_start":320,"line_end":320,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6124}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13458131,"byte_end":13458143,"line_start":328,"line_end":328,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459848,"byte_end":13459860,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6187},{"krate":0,"index":6191},{"krate":0,"index":6194},{"krate":0,"index":6195}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462895,"byte_end":13462907,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6197}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463942,"byte_end":13463950,"line_start":183,"line_end":183,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6202},{"krate":0,"index":6203}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13464287,"byte_end":13464295,"line_start":192,"line_end":192,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6207}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13464462,"byte_end":13464474,"line_start":199,"line_end":199,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6209}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13464767,"byte_end":13464779,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6211}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13464878,"byte_end":13464890,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6213}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13465074,"byte_end":13465086,"line_start":221,"line_end":221,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6215}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466311,"byte_end":13466321,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6272},{"krate":0,"index":6276},{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469533,"byte_end":13469543,"line_start":151,"line_end":151,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6281}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469987,"byte_end":13469997,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13471019,"byte_end":13471029,"line_start":207,"line_end":207,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6293}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13471461,"byte_end":13471471,"line_start":224,"line_end":224,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6295}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13471789,"byte_end":13471799,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6297}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13471898,"byte_end":13471908,"line_start":240,"line_end":240,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6299}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13472084,"byte_end":13472094,"line_start":247,"line_end":247,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6301}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472585,"byte_end":13472602,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6408}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473765,"byte_end":13473772,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473797,"byte_end":13473804,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473826,"byte_end":13473833,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6414}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473900,"byte_end":13473907,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6416},{"krate":0,"index":6417},{"krate":0,"index":6422},{"krate":0,"index":6425},{"krate":0,"index":6431},{"krate":0,"index":6436},{"krate":0,"index":6442},{"krate":0,"index":6443}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482681,"byte_end":13482688,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6445}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13483480,"byte_end":13483491,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6457},{"krate":0,"index":6458}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13484399,"byte_end":13484410,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6463}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","byte_start":13486052,"byte_end":13486060,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6505},{"krate":0,"index":6506},{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6512}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","byte_start":13490218,"byte_end":13490222,"line_start":190,"line_end":190,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6517}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","byte_start":13490788,"byte_end":13490792,"line_start":210,"line_end":210,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6519},{"krate":0,"index":6520}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","byte_start":13490946,"byte_end":13490950,"line_start":219,"line_end":219,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6522}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499253,"byte_end":13499263,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6725},{"krate":0,"index":6726},{"krate":0,"index":6727}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501842,"byte_end":13501852,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8123}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502487,"byte_end":13502495,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6762},{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6768},{"krate":0,"index":6772}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506458,"byte_end":13506466,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6774}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506619,"byte_end":13506627,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6776}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506782,"byte_end":13506790,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8128}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508806,"byte_end":13508810,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6875},{"krate":0,"index":6881},{"krate":0,"index":6886},{"krate":0,"index":6891},{"krate":0,"index":6896},{"krate":0,"index":6900}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516656,"byte_end":13516660,"line_start":313,"line_end":313,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6905}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13517155,"byte_end":13517159,"line_start":323,"line_end":323,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6907}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13517273,"byte_end":13517277,"line_start":329,"line_end":329,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6909}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13517758,"byte_end":13517762,"line_start":350,"line_end":350,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6913},{"krate":0,"index":6914},{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13518926,"byte_end":13518930,"line_start":389,"line_end":389,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6922}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13519419,"byte_end":13519423,"line_start":410,"line_end":410,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6926}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13519612,"byte_end":13519616,"line_start":419,"line_end":419,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8148}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13519732,"byte_end":13519736,"line_start":425,"line_end":425,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8150}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13519880,"byte_end":13519884,"line_start":431,"line_end":431,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8152}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13521004,"byte_end":13521008,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13521045,"byte_end":13521049,"line_start":472,"line_end":472,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13521075,"byte_end":13521079,"line_start":474,"line_end":474,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6937}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13521431,"byte_end":13521435,"line_start":493,"line_end":493,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6945},{"krate":0,"index":6946}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13522670,"byte_end":13522679,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13522716,"byte_end":13522725,"line_start":531,"line_end":531,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13522741,"byte_end":13522750,"line_start":533,"line_end":533,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6958}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13523141,"byte_end":13523150,"line_start":546,"line_end":546,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6962}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13523458,"byte_end":13523467,"line_start":558,"line_end":558,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6965},{"krate":0,"index":6966}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13523593,"byte_end":13523602,"line_start":566,"line_end":566,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6969}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13525163,"byte_end":13525172,"line_start":619,"line_end":619,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6989},{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6993},{"krate":0,"index":6995}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548851,"byte_end":13548862,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7049},{"krate":0,"index":7050},{"krate":0,"index":7051},{"krate":0,"index":7052},{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7055},{"krate":0,"index":7056}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555651,"byte_end":13555662,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7062}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555807,"byte_end":13555818,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8170},{"krate":0,"index":8171}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13561503,"byte_end":13561510,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7125}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13561709,"byte_end":13561716,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7127},{"krate":0,"index":7128}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576662,"byte_end":13576671,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7316},{"krate":0,"index":7317}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576876,"byte_end":13576885,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577631,"byte_end":13577641,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7335}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578150,"byte_end":13578160,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7337}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578253,"byte_end":13578263,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7339}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578369,"byte_end":13578379,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7342},{"krate":0,"index":7343}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578536,"byte_end":13578546,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7346}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578671,"byte_end":13578681,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578711,"byte_end":13578720,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7349}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579351,"byte_end":13579355,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7372}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579828,"byte_end":13579832,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7375},{"krate":0,"index":7376}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579994,"byte_end":13579998,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7378}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580139,"byte_end":13580150,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7384}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580447,"byte_end":13580451,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7386}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580544,"byte_end":13580548,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7388}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580665,"byte_end":13580669,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7391}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580816,"byte_end":13580820,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582420,"byte_end":13582424,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7444},{"krate":0,"index":7446},{"krate":0,"index":7447},{"krate":0,"index":7448},{"krate":0,"index":7449},{"krate":0,"index":7450},{"krate":0,"index":7451},{"krate":0,"index":7452},{"krate":0,"index":7453},{"krate":0,"index":7455},{"krate":0,"index":7456},{"krate":0,"index":7457},{"krate":0,"index":7459},{"krate":0,"index":7461},{"krate":0,"index":7463},{"krate":0,"index":7464},{"krate":0,"index":7465},{"krate":0,"index":7467},{"krate":0,"index":7469},{"krate":0,"index":7471},{"krate":0,"index":7472},{"krate":0,"index":7473},{"krate":0,"index":7474},{"krate":0,"index":7477},{"krate":0,"index":7480},{"krate":0,"index":7483},{"krate":0,"index":7486},{"krate":0,"index":7489},{"krate":0,"index":7492},{"krate":0,"index":7496},{"krate":0,"index":7500}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607586,"byte_end":13607589,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7502}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607818,"byte_end":13607821,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7504}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608116,"byte_end":13608118,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7506}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608321,"byte_end":13608325,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7508},{"krate":0,"index":7509}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608449,"byte_end":13608453,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7511}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608547,"byte_end":13608551,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7513}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608629,"byte_end":13608634,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7515}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608730,"byte_end":13608733,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7518}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608859,"byte_end":13608862,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7520}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608962,"byte_end":13608970,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7522}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13609151,"byte_end":13609157,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7526}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13609246,"byte_end":13609253,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7528}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13612401,"byte_end":13612405,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7548}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13612512,"byte_end":13612516,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7550}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13612612,"byte_end":13612619,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7552}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613395,"byte_end":13613402,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7605},{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7609},{"krate":0,"index":7610},{"krate":0,"index":7612},{"krate":0,"index":7614},{"krate":0,"index":7615}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618648,"byte_end":13618655,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7617}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618763,"byte_end":13618766,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7619}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618866,"byte_end":13618869,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7621}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619020,"byte_end":13619027,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7624}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619144,"byte_end":13619151,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7626}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619260,"byte_end":13619268,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7628}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619377,"byte_end":13619384,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7630}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619490,"byte_end":13619497,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7632},{"krate":0,"index":7633}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619676,"byte_end":13619683,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7636}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619878,"byte_end":13619885,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7640}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620042,"byte_end":13620049,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7644},{"krate":0,"index":7645}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620170,"byte_end":13620177,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7647}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620269,"byte_end":13620272,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7650}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620404,"byte_end":13620407,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7653}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620558,"byte_end":13620565,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7656}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620677,"byte_end":13620680,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7658}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620903,"byte_end":13620905,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7660}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13621120,"byte_end":13621127,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7662}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13621272,"byte_end":13621279,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7665}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13621821,"byte_end":13621828,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7672}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13622271,"byte_end":13622278,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7677}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13622407,"byte_end":13622414,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7679}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13622519,"byte_end":13622526,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7681}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627354,"byte_end":13627373,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627541,"byte_end":13627560,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7828}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627832,"byte_end":13627851,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":7832},{"krate":0,"index":7833}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13628554,"byte_end":13628564,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7835},{"krate":0,"index":7836}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13628859,"byte_end":13628871,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7838},{"krate":0,"index":7839}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13629236,"byte_end":13629248,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7842},{"krate":0,"index":7843}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13632967,"byte_end":13632973,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7873},{"krate":0,"index":7874}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634906,"byte_end":13634917,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7929},{"krate":0,"index":7934},{"krate":0,"index":7937},{"krate":0,"index":7938}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639469,"byte_end":13639477,"line_start":192,"line_end":192,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7943},{"krate":0,"index":7944}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639812,"byte_end":13639820,"line_start":201,"line_end":201,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7948}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639976,"byte_end":13639987,"line_start":207,"line_end":207,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7950}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13640358,"byte_end":13640369,"line_start":219,"line_end":219,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8547}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13640498,"byte_end":13640509,"line_start":225,"line_end":225,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8549}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13640668,"byte_end":13640679,"line_start":231,"line_end":231,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8551}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643295,"byte_end":13643304,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7992},{"krate":0,"index":7997},{"krate":0,"index":7998},{"krate":0,"index":7999},{"krate":0,"index":8000},{"krate":0,"index":8001},{"krate":0,"index":8004},{"krate":0,"index":8005},{"krate":0,"index":8006}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650412,"byte_end":13650421,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8008},{"krate":0,"index":8009}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13651322,"byte_end":13651331,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8014},{"krate":0,"index":8015},{"krate":0,"index":8016},{"krate":0,"index":8017}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13652815,"byte_end":13652824,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8024}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13653191,"byte_end":13653200,"line_start":384,"line_end":384,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8572}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13653329,"byte_end":13653338,"line_start":390,"line_end":390,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8574}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13653493,"byte_end":13653502,"line_start":396,"line_end":396,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8576}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656213,"byte_end":13656222,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8049},{"krate":0,"index":8054},{"krate":0,"index":8056},{"krate":0,"index":8058},{"krate":0,"index":8063},{"krate":0,"index":8066},{"krate":0,"index":8069},{"krate":0,"index":8075},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8084},{"krate":0,"index":8085},{"krate":0,"index":8086},{"krate":0,"index":8087},{"krate":0,"index":8088},{"krate":0,"index":8089},{"krate":0,"index":8090},{"krate":0,"index":8091},{"krate":0,"index":8092},{"krate":0,"index":8093},{"krate":0,"index":8094},{"krate":0,"index":8095},{"krate":0,"index":8096},{"krate":0,"index":8097}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13672117,"byte_end":13672126,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8099}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13672483,"byte_end":13672492,"line_start":538,"line_end":538,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8595}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13672621,"byte_end":13672630,"line_start":544,"line_end":544,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8597}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13672785,"byte_end":13672794,"line_start":550,"line_end":550,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8599}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/extend.rs","byte_start":13680558,"byte_end":13680561,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8688}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13681120,"byte_end":13681123,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8718}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13681574,"byte_end":13681577,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8725}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13681982,"byte_end":13681985,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8731}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13682386,"byte_end":13682388,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8737}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13682777,"byte_end":13682780,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8743}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/result/from_stream.rs","byte_start":13683515,"byte_end":13683521,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8767}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/result/product.rs","byte_start":13703671,"byte_end":13703677,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9313}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/result/sum.rs","byte_start":13705940,"byte_end":13705946,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9335}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/option/from_stream.rs","byte_start":13685976,"byte_end":13685982,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8795}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/option/product.rs","byte_start":13708205,"byte_end":13708211,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9359}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/option/sum.rs","byte_start":13710012,"byte_end":13710018,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9382}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13687433,"byte_end":13687439,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8820}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13687974,"byte_end":13687980,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8826}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13688475,"byte_end":13688481,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8832}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13688973,"byte_end":13688979,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8837}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13689480,"byte_end":13689486,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8843}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13690094,"byte_end":13690100,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8866}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13690549,"byte_end":13690555,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8872}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13691007,"byte_end":13691013,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8878}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13691459,"byte_end":13691465,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8883}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13691920,"byte_end":13691926,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8889}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/binary_heap/extend.rs","byte_start":13693155,"byte_end":13693165,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8915}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/binary_heap/from_stream.rs","byte_start":13693705,"byte_end":13693715,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8939}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/btree_map/extend.rs","byte_start":13694411,"byte_end":13694419,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":8965}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/btree_map/from_stream.rs","byte_start":13694933,"byte_end":13694941,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8990}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/btree_set/extend.rs","byte_start":13695630,"byte_end":13695638,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9015}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/btree_set/from_stream.rs","byte_start":13696128,"byte_end":13696136,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9039}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/hash_map/extend.rs","byte_start":13696901,"byte_end":13696908,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9073}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/hash_map/from_stream.rs","byte_start":13698195,"byte_end":13698202,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9106}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/hash_set/extend.rs","byte_start":13699076,"byte_end":13699083,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9139}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/hash_set/from_stream.rs","byte_start":13700532,"byte_end":13700539,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9171}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/linked_list/extend.rs","byte_start":13701339,"byte_end":13701349,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9196}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/linked_list/from_stream.rs","byte_start":13701842,"byte_end":13701852,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9220}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/vec_deque/extend.rs","byte_start":13702579,"byte_end":13702587,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9245}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/vec_deque/from_stream.rs","byte_start":13703124,"byte_end":13703132,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9269}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10939,"byte_end":10943,"line_start":301,"line_end":301,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":58}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10957,"byte_end":10963,"line_start":302,"line_end":302,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":10977,"byte_end":10983,"line_start":303,"line_end":303,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":115}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11011,"byte_end":11013,"line_start":307,"line_end":307,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4309}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/mod.rs","byte_start":13295511,"byte_end":13295518,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4417}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11027,"byte_end":11029,"line_start":308,"line_end":308,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4311}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/mod.rs","byte_start":13296469,"byte_end":13296473,"line_start":4,"line_end":4,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6004}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","byte_start":13440741,"byte_end":13440743,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":6008}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","byte_start":13440775,"byte_end":13440777,"line_start":8,"line_end":8,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":6022}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/mod.rs","byte_start":13440791,"byte_end":13440794,"line_start":9,"line_end":9,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":6038}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11043,"byte_end":11050,"line_start":309,"line_end":309,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4312}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11064,"byte_end":11068,"line_start":310,"line_end":310,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4313}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11082,"byte_end":11089,"line_start":311,"line_end":311,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4344}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11160,"byte_end":11162,"line_start":316,"line_end":316,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":6554}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11176,"byte_end":11180,"line_start":317,"line_end":317,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7306}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11194,"byte_end":11197,"line_start":318,"line_end":318,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":7719}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11292,"byte_end":11295,"line_start":324,"line_end":324,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":8600}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/lib.rs","byte_start":11370,"byte_end":11377,"line_start":326,"line_end":326,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":8604}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/utils.rs","byte_start":11837,"byte_end":11841,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/yield_now.rs","byte_start":13043632,"byte_end":13043640,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1876},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13045539,"byte_end":13045546,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/builder.rs","byte_start":13050903,"byte_end":13050920,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12379},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13053166,"byte_end":13053176,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13054249,"byte_end":13054259,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2210},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/join_handle.rs","byte_start":13054408,"byte_end":13054418,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2210},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13057620,"byte_end":13057624,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task.rs","byte_start":13058234,"byte_end":13058238,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2217},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13058792,"byte_end":13058798,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_id.rs","byte_start":13059209,"byte_end":13059215,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2222},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13059805,"byte_end":13059813,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13063693,"byte_end":13063704,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2247},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13063848,"byte_end":13063859,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2247},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13064024,"byte_end":13064035,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2247},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_local.rs","byte_start":13064403,"byte_end":13064412,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_locals_wrapper.rs","byte_start":13066264,"byte_end":13066281,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/task/task_locals_wrapper.rs","byte_start":13067694,"byte_end":13067711,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/delay.rs","byte_start":13193106,"byte_end":13193117,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":12342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/delay.rs","byte_start":13193297,"byte_end":13193308,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":12342},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/flatten.rs","byte_start":13194337,"byte_end":13194350,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":12301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/flatten.rs","byte_start":13194537,"byte_end":13194550,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":12301},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/race.rs","byte_start":13195815,"byte_end":13195819,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":12209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/race.rs","byte_start":13196073,"byte_end":13196077,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":12209},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_race.rs","byte_start":13197070,"byte_end":13197077,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":12164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_race.rs","byte_start":13197337,"byte_end":13197344,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":12164},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/join.rs","byte_start":13198816,"byte_end":13198820,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":12119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/join.rs","byte_start":13199054,"byte_end":13199058,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":12119},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_join.rs","byte_start":13200236,"byte_end":13200243,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":12074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/try_join.rs","byte_start":13200486,"byte_end":13200493,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":12074},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/future/mod.rs","byte_start":13179343,"byte_end":13179349,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":12708},"to":{"krate":0,"index":2520}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/pending.rs","byte_start":13202423,"byte_end":13202430,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2569},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203323,"byte_end":13203329,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2595},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/poll_fn.rs","byte_start":13203359,"byte_end":13203365,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2595},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12895992,"byte_end":12896005,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":12037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12896232,"byte_end":12896245,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":12037},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12896881,"byte_end":12896893,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2610},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/timeout.rs","byte_start":12896920,"byte_end":12896932,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2610},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/into_future.rs","byte_start":13205016,"byte_end":13205017,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2639},"to":{"krate":0,"index":2634}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/maybe_done.rs","byte_start":13205830,"byte_end":13205839,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/future/maybe_done.rs","byte_start":13207092,"byte_end":13207101,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2672},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/all.rs","byte_start":12979371,"byte_end":12979380,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/all.rs","byte_start":12979587,"byte_end":12979596,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/all.rs","byte_start":12979636,"byte_end":12979645,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/any.rs","byte_start":12980726,"byte_end":12980735,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/any.rs","byte_start":12980942,"byte_end":12980951,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/any.rs","byte_start":12980991,"byte_end":12981000,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/chain.rs","byte_start":12982370,"byte_end":12982375,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":11988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/chain.rs","byte_start":12982593,"byte_end":12982598,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":11988},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cloned.rs","byte_start":12983636,"byte_end":12983642,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":11952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cloned.rs","byte_start":12983754,"byte_end":12983760,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":11952},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cmp.rs","byte_start":12984711,"byte_end":12984720,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":11899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cmp.rs","byte_start":12984949,"byte_end":12984958,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":11899},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/copied.rs","byte_start":12987257,"byte_end":12987263,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":11863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/copied.rs","byte_start":12987375,"byte_end":12987381,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":11863},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cycle.rs","byte_start":12988038,"byte_end":12988043,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":11823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/cycle.rs","byte_start":12988228,"byte_end":12988233,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":11823},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/enumerate.rs","byte_start":12988926,"byte_end":12988935,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":11783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/enumerate.rs","byte_start":12989042,"byte_end":12989051,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":11783},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/eq.rs","byte_start":12990067,"byte_end":12990075,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":11738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/eq.rs","byte_start":12990289,"byte_end":12990297,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":11738},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter.rs","byte_start":12991566,"byte_end":12991572,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":11689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter.rs","byte_start":12991737,"byte_end":12991743,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":11689},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter_map.rs","byte_start":12992540,"byte_end":12992549,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":11640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/filter_map.rs","byte_start":12992668,"byte_end":12992677,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":11640},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find.rs","byte_start":12993516,"byte_end":12993526,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find.rs","byte_start":12993660,"byte_end":12993670,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find.rs","byte_start":12993711,"byte_end":12993721,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find_map.rs","byte_start":12994515,"byte_end":12994528,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find_map.rs","byte_start":12994662,"byte_end":12994675,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/find_map.rs","byte_start":12994719,"byte_end":12994732,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fold.rs","byte_start":12995645,"byte_end":12995655,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":11578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fold.rs","byte_start":12995848,"byte_end":12995858,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":11578},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/for_each.rs","byte_start":12996818,"byte_end":12996831,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":11533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/for_each.rs","byte_start":12996980,"byte_end":12996993,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":11533},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fuse.rs","byte_start":12998024,"byte_end":12998028,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":11490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/fuse.rs","byte_start":12998183,"byte_end":12998187,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":11490},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ge.rs","byte_start":12999210,"byte_end":12999218,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":11449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ge.rs","byte_start":12999426,"byte_end":12999434,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":11449},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/gt.rs","byte_start":13000443,"byte_end":13000451,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":11408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/gt.rs","byte_start":13000659,"byte_end":13000667,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":11408},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/inspect.rs","byte_start":13001635,"byte_end":13001642,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":11359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/inspect.rs","byte_start":13001791,"byte_end":13001798,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":11359},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/last.rs","byte_start":13002518,"byte_end":13002528,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":11314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/last.rs","byte_start":13002644,"byte_end":13002654,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":11314},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/le.rs","byte_start":13003772,"byte_end":13003780,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":11273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/le.rs","byte_start":13003988,"byte_end":13003996,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":11273},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/lt.rs","byte_start":13005015,"byte_end":13005023,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":11232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/lt.rs","byte_start":13005231,"byte_end":13005239,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":11232},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/map.rs","byte_start":13005972,"byte_end":13005975,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":11183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/map.rs","byte_start":13006127,"byte_end":13006130,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":11183},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max.rs","byte_start":13006815,"byte_end":13006824,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":11138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max.rs","byte_start":13006939,"byte_end":13006948,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":11138},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by.rs","byte_start":13008120,"byte_end":13008131,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by.rs","byte_start":13008318,"byte_end":13008329,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11081},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by_key.rs","byte_start":13009551,"byte_end":13009565,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/max_by_key.rs","byte_start":13009750,"byte_end":13009764,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":11024},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min.rs","byte_start":13011170,"byte_end":13011179,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min.rs","byte_start":13011294,"byte_end":13011303,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10979},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by.rs","byte_start":13012472,"byte_end":13012483,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by.rs","byte_start":13012670,"byte_end":13012681,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10922},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by_key.rs","byte_start":13013929,"byte_end":13013943,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/min_by_key.rs","byte_start":13014128,"byte_end":13014142,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10865},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ne.rs","byte_start":13015711,"byte_end":13015719,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/ne.rs","byte_start":13015933,"byte_end":13015941,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10820},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/next.rs","byte_start":13016997,"byte_end":13017007,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/nth.rs","byte_start":13017454,"byte_end":13017463,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/nth.rs","byte_start":13017487,"byte_end":13017496,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/nth.rs","byte_start":13017626,"byte_end":13017635,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partial_cmp.rs","byte_start":13018848,"byte_end":13018864,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":10767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partial_cmp.rs","byte_start":13019093,"byte_end":13019109,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10767},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/position.rs","byte_start":13021492,"byte_end":13021506,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/position.rs","byte_start":13021536,"byte_end":13021550,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/position.rs","byte_start":13021753,"byte_end":13021767,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/scan.rs","byte_start":13022965,"byte_end":13022969,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":10709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/scan.rs","byte_start":13023174,"byte_end":13023178,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":10709},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip.rs","byte_start":13024163,"byte_end":13024167,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":10669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip.rs","byte_start":13024281,"byte_end":13024285,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":10669},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip_while.rs","byte_start":13025405,"byte_end":13025414,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":10620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/skip_while.rs","byte_start":13025596,"byte_end":13025605,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":10620},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/step_by.rs","byte_start":13026948,"byte_end":13026954,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":10576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/step_by.rs","byte_start":13027155,"byte_end":13027161,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":10576},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take.rs","byte_start":13028364,"byte_end":13028368,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":10533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take.rs","byte_start":13028539,"byte_end":13028543,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":10533},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take_while.rs","byte_start":13029588,"byte_end":13029597,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":10484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/take_while.rs","byte_start":13029762,"byte_end":13029771,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":10484},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_fold.rs","byte_start":13030625,"byte_end":13030638,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_fold.rs","byte_start":13030674,"byte_end":13030687,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_fold.rs","byte_start":13030899,"byte_end":13030912,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_for_each.rs","byte_start":13031942,"byte_end":13031958,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_for_each.rs","byte_start":13031988,"byte_end":13032004,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/try_for_each.rs","byte_start":13032139,"byte_end":13032155,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/zip.rs","byte_start":13033417,"byte_end":13033420,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":10435},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/zip.rs","byte_start":13033660,"byte_end":13033663,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/zip.rs","byte_start":13033865,"byte_end":13033868,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10435},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/count.rs","byte_start":13237565,"byte_end":13237576,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/count.rs","byte_start":13237687,"byte_end":13237698,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10398},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/merge.rs","byte_start":13238915,"byte_end":13238920,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/merge.rs","byte_start":13239103,"byte_end":13239108,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10349},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flatten.rs","byte_start":13240737,"byte_end":13240744,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flatten.rs","byte_start":13240947,"byte_end":13240954,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10312},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flatten.rs","byte_start":13241799,"byte_end":13241806,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":10312},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flat_map.rs","byte_start":13242806,"byte_end":13242813,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":10259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/flat_map.rs","byte_start":13243068,"byte_end":13243075,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":10259},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partition.rs","byte_start":13244317,"byte_end":13244332,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":10197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/partition.rs","byte_start":13244540,"byte_end":13244555,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":10197},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13245801,"byte_end":13245808,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":10153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13245993,"byte_end":13246000,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10153},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13246922,"byte_end":13246934,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3069},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/timeout.rs","byte_start":13246961,"byte_end":13246973,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3069},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/throttle.rs","byte_start":13247857,"byte_end":13247865,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":10108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/throttle.rs","byte_start":13248118,"byte_end":13248126,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10108},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/delay.rs","byte_start":13249318,"byte_end":13249323,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":10067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/delay.rs","byte_start":13249529,"byte_end":13249534,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":10067},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/unzip.rs","byte_start":13250322,"byte_end":13250333,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":10004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/unzip.rs","byte_start":13250603,"byte_end":13250614,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":10004},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/stream/mod.rs","byte_start":12911885,"byte_end":12911891,"line_start":172,"line_end":172,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":26,"index":96},"to":{"krate":0,"index":3097}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/empty.rs","byte_start":13035406,"byte_end":13035411,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3217},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13035912,"byte_end":13035918,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3223},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_fn.rs","byte_start":13036847,"byte_end":13036853,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3223},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13038207,"byte_end":13038215,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":9965},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/from_iter.rs","byte_start":13038470,"byte_end":13038478,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":9965},"to":{"krate":0,"index":3435}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039522,"byte_end":13039526,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":9926},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/once.rs","byte_start":13039751,"byte_end":13039755,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":9926},"to":{"krate":0,"index":3435}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat.rs","byte_start":13040695,"byte_end":13040701,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3232},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13041270,"byte_end":13041280,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3241},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/repeat_with.rs","byte_start":13042472,"byte_end":13042482,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3241},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/next_back.rs","byte_start":13258638,"byte_end":13258652,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3281},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13259106,"byte_end":13259119,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13259258,"byte_end":13259271,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfind.rs","byte_start":13260128,"byte_end":13260139,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfind.rs","byte_start":13260280,"byte_end":13260291,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3337},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfind.rs","byte_start":13260332,"byte_end":13260343,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3337},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfold.rs","byte_start":13261268,"byte_end":13261279,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":9869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/rfold.rs","byte_start":13261479,"byte_end":13261490,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":9869},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13262509,"byte_end":13262523,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":9812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13262729,"byte_end":13262743,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":9812},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/double_ended_stream/mod.rs","byte_start":13251995,"byte_end":13252001,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":"SuperTrait","from":{"krate":26,"index":96},"to":{"krate":0,"index":3435}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/exact_size_stream.rs","byte_start":13265989,"byte_end":13265995,"line_start":81,"line_end":81,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":26,"index":96},"to":{"krate":0,"index":3452}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/fused_stream.rs","byte_start":13274322,"byte_end":13274328,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":26,"index":96},"to":{"krate":0,"index":3498}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/interval.rs","byte_start":13276210,"byte_end":13276218,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3718},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/into_stream.rs","byte_start":13277438,"byte_end":13277439,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3541},"to":{"krate":0,"index":3536}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278599,"byte_end":13278606,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3723},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278774,"byte_end":13278781,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3723},"to":{"krate":0,"index":3435}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278928,"byte_end":13278935,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3723},"to":{"krate":0,"index":3498}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/pending.rs","byte_start":13278971,"byte_end":13278978,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3723},"to":{"krate":0,"index":3452}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/product.rs","byte_start":13279746,"byte_end":13279751,"line_start":18,"line_end":18,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":3596}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/successors.rs","byte_start":13283130,"byte_end":13283140,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":9763},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/stream/sum.rs","byte_start":13284337,"byte_end":13284342,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":3650}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/lines.rs","byte_start":13318373,"byte_end":13318378,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":9715},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/read_line.rs","byte_start":13320300,"byte_end":13320314,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/read_until.rs","byte_start":13321773,"byte_end":13321788,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4549},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/split.rs","byte_start":13322988,"byte_end":13322993,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":9667},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_read/mod.rs","byte_start":13306755,"byte_end":13306762,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"kind":"SuperTrait","from":{"krate":34,"index":49},"to":{"krate":0,"index":5561}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/bytes.rs","byte_start":13339910,"byte_end":13339915,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5570},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13341730,"byte_end":13341735,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":9618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13343894,"byte_end":13343899,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":9618},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13344141,"byte_end":13344146,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":9618},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/chain.rs","byte_start":13345291,"byte_end":13345296,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":9618},"to":{"krate":34,"index":49}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read.rs","byte_start":13346997,"byte_end":13347007,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4721},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_exact.rs","byte_start":13347582,"byte_end":13347597,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4754},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_end.rs","byte_start":13348519,"byte_end":13348534,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4784},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_end.rs","byte_start":13349684,"byte_end":13349689,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4796},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_to_string.rs","byte_start":13351006,"byte_end":13351024,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4832},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/read_vectored.rs","byte_start":13352378,"byte_end":13352396,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4868},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13353216,"byte_end":13353220,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":9578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13356892,"byte_end":13356896,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":9578},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/take.rs","byte_start":13357814,"byte_end":13357818,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":9578},"to":{"krate":34,"index":49}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/read/mod.rs","byte_start":13325021,"byte_end":13325025,"line_start":53,"line_end":53,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":34,"index":39},"to":{"krate":0,"index":5590}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/seek/seek.rs","byte_start":13362939,"byte_end":13362949,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/seek/mod.rs","byte_start":13360296,"byte_end":13360300,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":34,"index":47},"to":{"krate":0,"index":5622}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/flush.rs","byte_start":13374245,"byte_end":13374256,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5018},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write.rs","byte_start":13374768,"byte_end":13374779,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_all.rs","byte_start":13375344,"byte_end":13375358,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5080},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_fmt.rs","byte_start":13376329,"byte_end":13376343,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/write_vectored.rs","byte_start":13377828,"byte_end":13377847,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5145},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/write/mod.rs","byte_start":13364558,"byte_end":13364563,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":34,"index":42},"to":{"krate":0,"index":5640}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/utils.rs","byte_start":13378314,"byte_end":13378320,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":262}},"from":{"krate":2,"index":43563},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/utils.rs","byte_start":13378573,"byte_end":13378585,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/utils.rs","byte_start":13378872,"byte_end":13378884,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/utils.rs","byte_start":13379015,"byte_end":13379027,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5654},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13381008,"byte_end":13381017,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":9533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13382245,"byte_end":13382254,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":9533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13384994,"byte_end":13385003,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":9533},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13386457,"byte_end":13386466,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":9533},"to":{"krate":34,"index":49}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13387388,"byte_end":13387397,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":9533},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_reader.rs","byte_start":13387735,"byte_end":13387744,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":9533},"to":{"krate":34,"index":47}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13394574,"byte_end":13394583,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":9492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13400415,"byte_end":13400424,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":9492},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13401322,"byte_end":13401331,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":9492},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/buf_writer.rs","byte_start":13401577,"byte_end":13401586,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":9492},"to":{"krate":34,"index":47}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/copy.rs","byte_start":13406382,"byte_end":13406392,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":9443},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13408455,"byte_end":13408461,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13411762,"byte_end":13411768,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5667},"to":{"krate":34,"index":47}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13412034,"byte_end":13412040,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5667},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13412556,"byte_end":13412562,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5667},"to":{"krate":34,"index":49}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13412912,"byte_end":13412918,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5667},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13413677,"byte_end":13413683,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5667},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/cursor.rs","byte_start":13414207,"byte_end":13414213,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5667},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415491,"byte_end":13415496,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5479},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415615,"byte_end":13415620,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5479},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/empty.rs","byte_start":13415824,"byte_end":13415829,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5479},"to":{"krate":34,"index":49}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13417014,"byte_end":13417020,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5511},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/repeat.rs","byte_start":13417139,"byte_end":13417145,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5511},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13418130,"byte_end":13418134,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5539},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/sink.rs","byte_start":13418253,"byte_end":13418257,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5539},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/timeout.rs","byte_start":13420005,"byte_end":13420012,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":9394},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13423003,"byte_end":13423009,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5889},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stderr.rs","byte_start":13426490,"byte_end":13426496,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5889},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13429348,"byte_end":13429353,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13431369,"byte_end":13431374,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5927},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdin.rs","byte_start":13433512,"byte_end":13433517,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5927},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13436848,"byte_end":13436854,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5966},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/io/stdout.rs","byte_start":13440335,"byte_end":13440341,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5966},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13449617,"byte_end":13449629,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13456981,"byte_end":13456993,"line_start":288,"line_end":288,"column_start":21,"column_end":33},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6087},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13457429,"byte_end":13457441,"line_start":305,"line_end":305,"column_start":32,"column_end":44},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6087},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13457734,"byte_end":13457746,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6087},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13457845,"byte_end":13457857,"line_start":320,"line_end":320,"column_start":20,"column_end":32},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6087},"to":{"krate":1,"index":6603}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/datagram.rs","byte_start":13458131,"byte_end":13458143,"line_start":328,"line_end":328,"column_start":20,"column_end":32},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6087},"to":{"krate":1,"index":6605}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13459848,"byte_end":13459860,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13462895,"byte_end":13462907,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6184},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13463942,"byte_end":13463950,"line_start":183,"line_end":183,"column_start":17,"column_end":25},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6198},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13464287,"byte_end":13464295,"line_start":192,"line_end":192,"column_start":21,"column_end":29},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6198},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13464462,"byte_end":13464474,"line_start":199,"line_end":199,"column_start":32,"column_end":44},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6184},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13464767,"byte_end":13464779,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6184},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13464878,"byte_end":13464890,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6184},"to":{"krate":1,"index":6603}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/listener.rs","byte_start":13465074,"byte_end":13465086,"line_start":221,"line_end":221,"column_start":20,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6184},"to":{"krate":1,"index":6605}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13466311,"byte_end":13466321,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469533,"byte_end":13469543,"line_start":151,"line_end":151,"column_start":15,"column_end":25},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6312},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13469987,"byte_end":13469997,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6312},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13471019,"byte_end":13471029,"line_start":207,"line_end":207,"column_start":21,"column_end":31},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13471461,"byte_end":13471471,"line_start":224,"line_end":224,"column_start":30,"column_end":40},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13471789,"byte_end":13471799,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6312},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13471898,"byte_end":13471908,"line_start":240,"line_end":240,"column_start":20,"column_end":30},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6312},"to":{"krate":1,"index":6603}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/os/unix/net/stream.rs","byte_start":13472084,"byte_end":13472094,"line_start":247,"line_end":247,"column_start":20,"column_end":30},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6312},"to":{"krate":1,"index":6605}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13472585,"byte_end":13472602,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473765,"byte_end":13473772,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6409},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473797,"byte_end":13473804,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6409},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473826,"byte_end":13473833,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6409},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13473900,"byte_end":13473907,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13482681,"byte_end":13482688,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6409},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13483480,"byte_end":13483491,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6446},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/condvar.rs","byte_start":13484399,"byte_end":13484410,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6446},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","byte_start":13486052,"byte_end":13486060,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","byte_start":13490218,"byte_end":13490222,"line_start":190,"line_end":190,"column_start":15,"column_end":19},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","byte_start":13490788,"byte_end":13490792,"line_start":210,"line_end":210,"column_start":16,"column_end":20},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/sync/waker_set.rs","byte_start":13490946,"byte_end":13490950,"line_start":219,"line_end":219,"column_start":19,"column_end":23},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13499253,"byte_end":13499263,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":8112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_builder.rs","byte_start":13501842,"byte_end":13501852,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":8112},"to":{"krate":1,"index":5538}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13502487,"byte_end":13502495,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506458,"byte_end":13506466,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6758},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506619,"byte_end":13506627,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6758},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/dir_entry.rs","byte_start":13506782,"byte_end":13506790,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6758},"to":{"krate":1,"index":5526}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13508806,"byte_end":13508810,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":8129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13516656,"byte_end":13516660,"line_start":313,"line_end":313,"column_start":15,"column_end":19},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":8129},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13517155,"byte_end":13517159,"line_start":323,"line_end":323,"column_start":21,"column_end":25},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":8129},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13517273,"byte_end":13517277,"line_start":329,"line_end":329,"column_start":15,"column_end":19},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":8129},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13517758,"byte_end":13517762,"line_start":350,"line_end":350,"column_start":16,"column_end":20},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":8129},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13518926,"byte_end":13518930,"line_start":389,"line_end":389,"column_start":15,"column_end":19},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":8129},"to":{"krate":34,"index":47}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13519419,"byte_end":13519423,"line_start":410,"line_end":410,"column_start":30,"column_end":34},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":8129},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13519612,"byte_end":13519616,"line_start":419,"line_end":419,"column_start":22,"column_end":26},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":8129},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13519732,"byte_end":13519736,"line_start":425,"line_end":425,"column_start":24,"column_end":28},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":8129},"to":{"krate":1,"index":6603}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13519880,"byte_end":13519884,"line_start":431,"line_end":431,"column_start":24,"column_end":28},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":8129},"to":{"krate":1,"index":6605}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13521004,"byte_end":13521008,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6927},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13521045,"byte_end":13521049,"line_start":472,"line_end":472,"column_start":31,"column_end":35},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":6927},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13521075,"byte_end":13521079,"line_start":474,"line_end":474,"column_start":19,"column_end":23},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":6927},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13521431,"byte_end":13521435,"line_start":493,"line_end":493,"column_start":9,"column_end":13},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":6927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13522670,"byte_end":13522679,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6948},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13522716,"byte_end":13522725,"line_start":531,"line_end":531,"column_start":31,"column_end":40},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6948},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13522741,"byte_end":13522750,"line_start":533,"line_end":533,"column_start":9,"column_end":18},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13523141,"byte_end":13523150,"line_start":546,"line_end":546,"column_start":18,"column_end":27},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6948},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13523458,"byte_end":13523467,"line_start":558,"line_end":558,"column_start":19,"column_end":28},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6948},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13523593,"byte_end":13523602,"line_start":566,"line_end":566,"column_start":22,"column_end":31},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6948},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/file.rs","byte_start":13525163,"byte_end":13525172,"line_start":619,"line_end":619,"column_start":6,"column_end":15},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13548851,"byte_end":13548862,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":8159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555651,"byte_end":13555662,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/open_options.rs","byte_start":13555807,"byte_end":13555818,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":8159},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13561503,"byte_end":13561510,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":8175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/fs/read_dir.rs","byte_start":13561709,"byte_end":13561716,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":8175},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576662,"byte_end":13576671,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":8189},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/ancestors.rs","byte_start":13576876,"byte_end":13576885,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":8189},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13577631,"byte_end":13577641,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":8200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578150,"byte_end":13578160,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":8200},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578253,"byte_end":13578263,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":8200},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578369,"byte_end":13578379,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":8200},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578536,"byte_end":13578546,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":8200},"to":{"krate":2,"index":7510}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578671,"byte_end":13578681,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":8200},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/components.rs","byte_start":13578711,"byte_end":13578720,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":373}},"from":{"krate":1,"index":11154},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579351,"byte_end":13579355,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":8226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579828,"byte_end":13579832,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":8226},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13579994,"byte_end":13579998,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":8226},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580139,"byte_end":13580150,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7379},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580447,"byte_end":13580451,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":8226},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580544,"byte_end":13580548,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":8226},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580665,"byte_end":13580669,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":8226},"to":{"krate":2,"index":7510}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/iter.rs","byte_start":13580816,"byte_end":13580820,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":8226},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13582420,"byte_end":13582424,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":8232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607586,"byte_end":13607589,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":383}},"from":{"krate":5,"index":313},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13607818,"byte_end":13607821,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"kind":{"Impl":{"id":384}},"from":{"krate":5,"index":5966},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608116,"byte_end":13608118,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"kind":{"Impl":{"id":385}},"from":{"krate":5,"index":4648},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608321,"byte_end":13608325,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":8232},"to":{"krate":5,"index":654}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608449,"byte_end":13608453,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":8232},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608547,"byte_end":13608551,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":8232},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608629,"byte_end":13608634,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"kind":{"Impl":{"id":389}},"from":{"krate":1,"index":2783},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608730,"byte_end":13608733,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"kind":{"Impl":{"id":390}},"from":{"krate":5,"index":663},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608859,"byte_end":13608862,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"kind":{"Impl":{"id":391}},"from":{"krate":5,"index":663},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13608962,"byte_end":13608970,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"kind":{"Impl":{"id":392}},"from":{"krate":1,"index":2780},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13609151,"byte_end":13609157,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"kind":{"Impl":{"id":394}},"from":{"krate":5,"index":7606},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13609246,"byte_end":13609253,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13612401,"byte_end":13612405,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":8232},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13612512,"byte_end":13612516,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"kind":{"Impl":{"id":447}},"from":{"krate":1,"index":7132},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/path.rs","byte_start":13612612,"byte_end":13612619,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"kind":{"Impl":{"id":448}},"from":{"krate":1,"index":7025},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13613395,"byte_end":13613402,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618648,"byte_end":13618655,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618763,"byte_end":13618766,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":451}},"from":{"krate":5,"index":313},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13618866,"byte_end":13618869,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":452}},"from":{"krate":5,"index":313},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619020,"byte_end":13619027,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619144,"byte_end":13619151,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619260,"byte_end":13619268,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":455}},"from":{"krate":1,"index":2780},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619377,"byte_end":13619384,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619490,"byte_end":13619497,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":11935}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619676,"byte_end":13619683,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":7462}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13619878,"byte_end":13619885,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":7475}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620042,"byte_end":13620049,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620170,"byte_end":13620177,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620269,"byte_end":13620272,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":462}},"from":{"krate":5,"index":663},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620404,"byte_end":13620407,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":463}},"from":{"krate":5,"index":663},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620558,"byte_end":13620565,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620677,"byte_end":13620680,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":465}},"from":{"krate":5,"index":5966},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13620903,"byte_end":13620905,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":466}},"from":{"krate":5,"index":4648},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13621120,"byte_end":13621127,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13621272,"byte_end":13621279,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":8506},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13621821,"byte_end":13621828,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":8506},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13622271,"byte_end":13622278,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13622407,"byte_end":13622414,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/path/pathbuf.rs","byte_start":13622519,"byte_end":13622526,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":8506},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627354,"byte_end":13627373,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":7814},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627541,"byte_end":13627560,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":7814},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13627832,"byte_end":13627851,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":7814},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13628554,"byte_end":13628564,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"kind":{"Impl":{"id":476}},"from":{"krate":1,"index":10786},"to":{"krate":0,"index":7811}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13628859,"byte_end":13628871,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"kind":{"Impl":{"id":477}},"from":{"krate":1,"index":10810},"to":{"krate":0,"index":7811}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13629236,"byte_end":13629248,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"kind":{"Impl":{"id":478}},"from":{"krate":1,"index":10813},"to":{"krate":0,"index":7811}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/addr.rs","byte_start":13632967,"byte_end":13632973,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"kind":{"Impl":{"id":480}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":7811}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13634906,"byte_end":13634917,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":8529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639469,"byte_end":13639477,"line_start":192,"line_end":192,"column_start":17,"column_end":25},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":7939},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639812,"byte_end":13639820,"line_start":201,"line_end":201,"column_start":21,"column_end":29},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":7939},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13639976,"byte_end":13639987,"line_start":207,"line_end":207,"column_start":38,"column_end":49},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":8529},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13640358,"byte_end":13640369,"line_start":219,"line_end":219,"column_start":22,"column_end":33},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":8529},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13640498,"byte_end":13640509,"line_start":225,"line_end":225,"column_start":24,"column_end":35},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":8529},"to":{"krate":1,"index":6603}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/listener.rs","byte_start":13640668,"byte_end":13640679,"line_start":231,"line_end":231,"column_start":24,"column_end":35},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":8529},"to":{"krate":1,"index":6605}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13643295,"byte_end":13643304,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":8552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13650412,"byte_end":13650421,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":8552},"to":{"krate":34,"index":39}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13651322,"byte_end":13651331,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":8552},"to":{"krate":34,"index":42}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13652815,"byte_end":13652824,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8552},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13653191,"byte_end":13653200,"line_start":384,"line_end":384,"column_start":22,"column_end":31},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":8552},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13653329,"byte_end":13653338,"line_start":390,"line_end":390,"column_start":24,"column_end":33},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8552},"to":{"krate":1,"index":6603}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/tcp/stream.rs","byte_start":13653493,"byte_end":13653502,"line_start":396,"line_end":396,"column_start":24,"column_end":33},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":8552},"to":{"krate":1,"index":6605}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13656213,"byte_end":13656222,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":8577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13672117,"byte_end":13672126,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":8577},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13672483,"byte_end":13672492,"line_start":538,"line_end":538,"column_start":22,"column_end":31},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":8577},"to":{"krate":1,"index":6601}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13672621,"byte_end":13672630,"line_start":544,"line_end":544,"column_start":24,"column_end":33},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":8577},"to":{"krate":1,"index":6603}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/net/udp/mod.rs","byte_start":13672785,"byte_end":13672794,"line_start":550,"line_end":550,"column_start":24,"column_end":33},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":8577},"to":{"krate":1,"index":6605}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/extend.rs","byte_start":13680558,"byte_end":13680561,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"kind":{"Impl":{"id":500}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13681120,"byte_end":13681123,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"kind":{"Impl":{"id":501}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13681574,"byte_end":13681577,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"kind":{"Impl":{"id":502}},"from":{"krate":5,"index":663},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13681982,"byte_end":13681985,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"kind":{"Impl":{"id":503}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13682386,"byte_end":13682388,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"kind":{"Impl":{"id":504}},"from":{"krate":5,"index":4648},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/vec/from_stream.rs","byte_start":13682777,"byte_end":13682780,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"kind":{"Impl":{"id":505}},"from":{"krate":5,"index":5966},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/result/from_stream.rs","byte_start":13683515,"byte_end":13683521,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"kind":{"Impl":{"id":506}},"from":{"krate":2,"index":43563},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/result/product.rs","byte_start":13703671,"byte_end":13703677,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"kind":{"Impl":{"id":507}},"from":{"krate":2,"index":43563},"to":{"krate":0,"index":3596}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/result/sum.rs","byte_start":13705940,"byte_end":13705946,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"kind":{"Impl":{"id":508}},"from":{"krate":2,"index":43563},"to":{"krate":0,"index":3650}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/option/from_stream.rs","byte_start":13685976,"byte_end":13685982,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"kind":{"Impl":{"id":509}},"from":{"krate":2,"index":43437},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/option/product.rs","byte_start":13708205,"byte_end":13708211,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"kind":{"Impl":{"id":510}},"from":{"krate":2,"index":43437},"to":{"krate":0,"index":3596}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/option/sum.rs","byte_start":13710012,"byte_end":13710018,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":511}},"from":{"krate":2,"index":43437},"to":{"krate":0,"index":3650}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13687433,"byte_end":13687439,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":512}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13687974,"byte_end":13687980,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"kind":{"Impl":{"id":513}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13688475,"byte_end":13688481,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"kind":{"Impl":{"id":514}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13688973,"byte_end":13688979,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"kind":{"Impl":{"id":515}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/extend.rs","byte_start":13689480,"byte_end":13689486,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"kind":{"Impl":{"id":516}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13690094,"byte_end":13690100,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"kind":{"Impl":{"id":517}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13690549,"byte_end":13690555,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"kind":{"Impl":{"id":518}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13691007,"byte_end":13691013,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"kind":{"Impl":{"id":519}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13691459,"byte_end":13691465,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"kind":{"Impl":{"id":520}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/string/from_stream.rs","byte_start":13691920,"byte_end":13691926,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"kind":{"Impl":{"id":521}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/binary_heap/extend.rs","byte_start":13693155,"byte_end":13693165,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":{"Impl":{"id":522}},"from":{"krate":5,"index":788},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/binary_heap/from_stream.rs","byte_start":13693705,"byte_end":13693715,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"kind":{"Impl":{"id":523}},"from":{"krate":5,"index":788},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/btree_map/extend.rs","byte_start":13694411,"byte_end":13694419,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"kind":{"Impl":{"id":524}},"from":{"krate":5,"index":1378},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/btree_map/from_stream.rs","byte_start":13694933,"byte_end":13694941,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"kind":{"Impl":{"id":525}},"from":{"krate":5,"index":1378},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/btree_set/extend.rs","byte_start":13695630,"byte_end":13695638,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"kind":{"Impl":{"id":526}},"from":{"krate":5,"index":7443},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/btree_set/from_stream.rs","byte_start":13696128,"byte_end":13696136,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"kind":{"Impl":{"id":527}},"from":{"krate":5,"index":7443},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/hash_map/extend.rs","byte_start":13696901,"byte_end":13696908,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"kind":{"Impl":{"id":528}},"from":{"krate":1,"index":1089},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/hash_map/from_stream.rs","byte_start":13698195,"byte_end":13698202,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"kind":{"Impl":{"id":529}},"from":{"krate":1,"index":1089},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/hash_set/extend.rs","byte_start":13699076,"byte_end":13699083,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"kind":{"Impl":{"id":530}},"from":{"krate":1,"index":1806},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/hash_set/from_stream.rs","byte_start":13700532,"byte_end":13700539,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"kind":{"Impl":{"id":531}},"from":{"krate":1,"index":1806},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/linked_list/extend.rs","byte_start":13701339,"byte_end":13701349,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"kind":{"Impl":{"id":532}},"from":{"krate":5,"index":3352},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/linked_list/from_stream.rs","byte_start":13701842,"byte_end":13701852,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"kind":{"Impl":{"id":533}},"from":{"krate":5,"index":3352},"to":{"krate":0,"index":3489}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/vec_deque/extend.rs","byte_start":13702579,"byte_end":13702587,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"kind":{"Impl":{"id":534}},"from":{"krate":5,"index":4159},"to":{"krate":0,"index":3467}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.10.0/src/collections/vec_deque/from_stream.rs","byte_start":13703124,"byte_end":13703132,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"kind":{"Impl":{"id":535}},"from":{"krate":5,"index":4159},"to":{"krate":0,"index":3489}}]}