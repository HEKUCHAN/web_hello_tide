{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7","program":"/home/hekuta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_utils","--edition=2018","/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=74012319f71a7638","-C","extra-filename=-74012319f71a7638","--out-dir","/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps","-L","dependency=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps","--extern","cfg_if=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libcfg_if-5b9b3cb1bf3d00dc.rmeta","--extern","lazy_static=/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/liblazy_static-bc2f47adaad103e9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hekuta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hekuta/Codes/web_hello_tide/target/rls/debug/deps/libcrossbeam_utils-74012319f71a7638.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_utils","disambiguator":[3608449199648778523,0]},"crate_root":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src","external_crates":[{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[3174731199663182387,0]}},{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","num":21,"id":{"name":"lazy_static","disambiguator":[9708458161320227382,0]}}],"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/mod.rs","byte_start":4427,"byte_end":4437,"line_start":31,"line_end":31,"column_start":28,"column_end":38},"alias_span":null,"name":"AtomicCell","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/mod.rs","byte_start":4462,"byte_end":4475,"line_start":32,"line_end":32,"column_start":24,"column_end":37},"alias_span":null,"name":"AtomicConsume","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":3132,"byte_end":3143,"line_start":90,"line_end":90,"column_start":30,"column_end":41},"alias_span":null,"name":"CachePadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":3183,"byte_end":3190,"line_start":93,"line_end":93,"column_start":25,"column_end":32},"alias_span":null,"name":"Backoff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":501},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12927250,"byte_end":12927256,"line_start":12,"line_end":12,"column_start":24,"column_end":30},"alias_span":null,"name":"Parker","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":517},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12927258,"byte_end":12927266,"line_start":12,"line_end":12,"column_start":32,"column_end":40},"alias_span":null,"name":"Unparker","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12927326,"byte_end":12927337,"line_start":14,"line_end":14,"column_start":30,"column_end":41},"alias_span":null,"name":"ShardedLock","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12927339,"byte_end":12927359,"line_start":14,"line_end":14,"column_start":43,"column_end":63},"alias_span":null,"name":"ShardedLockReadGuard","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12927361,"byte_end":12927382,"line_start":14,"line_end":14,"column_start":65,"column_end":86},"alias_span":null,"name":"ShardedLockWriteGuard","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12927411,"byte_end":12927420,"line_start":15,"line_end":15,"column_start":27,"column_end":36},"alias_span":null,"name":"WaitGroup","value":"","parent":{"krate":0,"index":470}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":57},{"krate":0,"index":186},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":470},{"krate":0,"index":752}],"decl_id":null,"docs":" Miscellaneous tools for concurrent programming.","sig":null,"attributes":[{"value":"/ Miscellaneous tools for concurrent programming.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Atomics","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":56,"byte_end":70,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":71,"byte_end":74,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":75,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":136,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":226,"byte_end":229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Thread synchronization","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":230,"byte_end":259,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":260,"byte_end":263,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":264,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":310,"byte_end":389,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":390,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":471,"byte_end":474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Utilities","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":475,"byte_end":491,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":492,"byte_end":495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [`Backoff`], for exponential backoff in spin loops.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":496,"byte_end":553,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ * [`CachePadded`], for padding and aligning a value to the length of a cache line.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":554,"byte_end":640,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/ * [`scope`], for spawning threads that borrow local variables from the stack.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":641,"byte_end":722,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":723,"byte_end":726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AtomicCell`]: atomic::AtomicCell","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":727,"byte_end":765,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/ [`AtomicConsume`]: atomic::AtomicConsume","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":766,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ [`Parker`]: sync::Parker","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":811,"byte_end":839,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ [`ShardedLock`]: sync::ShardedLock","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":840,"byte_end":878,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`WaitGroup`]: sync::WaitGroup","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":879,"byte_end":913,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ [`scope`]: thread::scope","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":914,"byte_end":942,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":1103,"byte_end":1209,"line_start":34,"line_end":39,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"atomic","qualname":"::atomic","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/mod.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":58},{"krate":0,"index":168},{"krate":0,"index":180},{"krate":0,"index":183}],"decl_id":null,"docs":" Atomic types.","sig":null,"attributes":[{"value":"/ Atomic types.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/mod.rs","byte_start":3349,"byte_end":3366,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/mod.rs","byte_start":3367,"byte_end":3370,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/mod.rs","byte_start":3371,"byte_end":3431,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/mod.rs","byte_start":3432,"byte_end":3521,"line_start":4,"line_end":4,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5627,"byte_end":5637,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"AtomicCell","qualname":"::atomic::atomic_cell::AtomicCell","value":"AtomicCell {  }","parent":null,"children":[{"krate":0,"index":96}],"decl_id":null,"docs":" A thread-safe mutable memory location.","sig":null,"attributes":[{"value":"/ A thread-safe mutable memory location.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":4906,"byte_end":4948,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":4949,"byte_end":4952,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`Cell`], except it can also be shared among multiple threads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":4953,"byte_end":5046,"line_start":22,"line_end":22,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5047,"byte_end":5050,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Operations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5051,"byte_end":5147,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ global locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5148,"byte_end":5241,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ atomic instructions or locks will be used.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5242,"byte_end":5288,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5289,"byte_end":5292,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Atomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5293,"byte_end":5386,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5387,"byte_end":5390,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: std::cell::Cell","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5391,"byte_end":5420,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ [`AtomicCell::<T>::is_lock_free()`]: AtomicCell::is_lock_free","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5421,"byte_end":5486,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/ [`Acquire`]: std::sync::atomic::Ordering::Acquire","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5487,"byte_end":5540,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ [`Release`]: std::sync::atomic::Ordering::Release","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5541,"byte_end":5594,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"repr(transparent)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5595,"byte_end":5615,"line_start":34,"line_end":34,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6403,"byte_end":6406,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicCell<T>>::new","value":"pub const fn new(T) -> AtomicCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new atomic cell initialized with `val`.","sig":null,"attributes":[{"value":"/ Creates a new atomic cell initialized with `val`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6180,"byte_end":6233,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6238,"byte_end":6241,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6246,"byte_end":6260,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6265,"byte_end":6268,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6273,"byte_end":6280,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6285,"byte_end":6329,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6334,"byte_end":6337,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6342,"byte_end":6373,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6378,"byte_end":6385,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6803,"byte_end":6813,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AtomicCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the atomic and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the atomic and returns the contained value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6517,"byte_end":6573,"line_start":68,"line_end":68,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6578,"byte_end":6581,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6586,"byte_end":6600,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6605,"byte_end":6608,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6613,"byte_end":6620,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6625,"byte_end":6669,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6674,"byte_end":6677,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6682,"byte_end":6713,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ let v = a.into_inner();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6718,"byte_end":6745,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6750,"byte_end":6753,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, 7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6758,"byte_end":6779,"line_start":78,"line_end":78,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6784,"byte_end":6791,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8094,"byte_end":8106,"line_start":112,"line_end":112,"column_start":18,"column_end":30},"name":"is_lock_free","qualname":"<AtomicCell<T>>::is_lock_free","value":"pub const fn is_lock_free() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if operations on values of this type are lock-free.","sig":null,"attributes":[{"value":"/ Returns `true` if operations on values of this type are lock-free.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6870,"byte_end":6940,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6945,"byte_end":6948,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If the compiler or the platform doesn't support the necessary atomic instructions,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6953,"byte_end":7039,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"/ `AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7044,"byte_end":7136,"line_start":87,"line_end":87,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7141,"byte_end":7144,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7149,"byte_end":7163,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7168,"byte_end":7171,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7176,"byte_end":7183,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7188,"byte_end":7232,"line_start":92,"line_end":92,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7237,"byte_end":7240,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // This type is internally represented as `AtomicUsize` so we can just use atomic","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7245,"byte_end":7330,"line_start":94,"line_end":94,"column_start":5,"column_end":90}},{"value":"/ // operations provided by it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7335,"byte_end":7368,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(AtomicCell::<usize>::is_lock_free(), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7373,"byte_end":7431,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7436,"byte_end":7439,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ // A wrapper struct around `isize`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7444,"byte_end":7483,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/ struct Foo {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7488,"byte_end":7504,"line_start":99,"line_end":99,"column_start":5,"column_end":21}},{"value":"/     bar: isize,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7509,"byte_end":7528,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7533,"byte_end":7538,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ // `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7543,"byte_end":7616,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(AtomicCell::<Foo>::is_lock_free(), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7621,"byte_end":7677,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7682,"byte_end":7685,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ // Operations on zero-sized types are always lock-free.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7690,"byte_end":7749,"line_start":105,"line_end":105,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AtomicCell::<()>::is_lock_free(), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7754,"byte_end":7809,"line_start":106,"line_end":106,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7814,"byte_end":7817,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // Very large types cannot be represented as any of the standard atomic types, so atomic","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7822,"byte_end":7914,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/ // operations on them will have to use global locks for synchronization.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":7919,"byte_end":7995,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8000,"byte_end":8064,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8069,"byte_end":8076,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8461,"byte_end":8466,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"store","qualname":"<AtomicCell<T>>::store","value":"pub fn store(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8165,"byte_end":8203,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8208,"byte_end":8211,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8216,"byte_end":8230,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8235,"byte_end":8238,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8243,"byte_end":8250,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8255,"byte_end":8299,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8304,"byte_end":8307,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8312,"byte_end":8343,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8348,"byte_end":8351,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8356,"byte_end":8384,"line_start":125,"line_end":125,"column_start":5,"column_end":33}},{"value":"/ a.store(8);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8389,"byte_end":8404,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8409,"byte_end":8437,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8442,"byte_end":8449,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9021,"byte_end":9025,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicCell<T>>::swap","value":"pub fn swap(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell and returns the previous value.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell and returns the previous value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8680,"byte_end":8749,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8754,"byte_end":8757,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8762,"byte_end":8776,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8781,"byte_end":8784,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8789,"byte_end":8796,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8801,"byte_end":8845,"line_start":144,"line_end":144,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8850,"byte_end":8853,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8858,"byte_end":8889,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8894,"byte_end":8897,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8902,"byte_end":8930,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.swap(8), 7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8935,"byte_end":8964,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":8969,"byte_end":8997,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9002,"byte_end":9009,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9432,"byte_end":9438,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AtomicCell<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying data in this atomic cell.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying data in this atomic cell.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9147,"byte_end":9216,"line_start":158,"line_end":158,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9221,"byte_end":9224,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9229,"byte_end":9243,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9248,"byte_end":9251,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9256,"byte_end":9263,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9268,"byte_end":9312,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9317,"byte_end":9320,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9325,"byte_end":9356,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9361,"byte_end":9364,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let ptr = a.as_ptr();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9369,"byte_end":9394,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9399,"byte_end":9406,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9411,"byte_end":9420,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9880,"byte_end":9884,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicCell<T>>::take","value":"pub fn take(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the atomic cell, leaving `Default::default()` in its place.","sig":null,"attributes":[{"value":"/ Takes the value of the atomic cell, leaving `Default::default()` in its place.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9529,"byte_end":9611,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9616,"byte_end":9619,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9624,"byte_end":9638,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9643,"byte_end":9646,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9651,"byte_end":9658,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9663,"byte_end":9707,"line_start":181,"line_end":181,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9712,"byte_end":9715,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9720,"byte_end":9751,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/ let five = a.take();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9756,"byte_end":9780,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9785,"byte_end":9788,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(five, 5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9793,"byte_end":9817,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(a.into_inner(), 0);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9822,"byte_end":9856,"line_start":187,"line_end":187,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9861,"byte_end":9868,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10224,"byte_end":10228,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"load","qualname":"<AtomicCell<T>>::load","value":"pub fn load(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads a value from the atomic cell.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic cell.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9980,"byte_end":10019,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10024,"byte_end":10027,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10032,"byte_end":10046,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10051,"byte_end":10054,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10059,"byte_end":10066,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10071,"byte_end":10115,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10120,"byte_end":10123,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10128,"byte_end":10159,"line_start":202,"line_end":202,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10164,"byte_end":10167,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10172,"byte_end":10200,"line_start":204,"line_end":204,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10205,"byte_end":10212,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11027,"byte_end":11043,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicCell<T>>::compare_and_swap","value":"pub fn compare_and_swap(&Self, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10340,"byte_end":10417,"line_start":212,"line_end":212,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10422,"byte_end":10425,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previous value. If it is equal to `current`, then the value","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10430,"byte_end":10524,"line_start":214,"line_end":214,"column_start":5,"column_end":99}},{"value":"/ was updated.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10529,"byte_end":10545,"line_start":215,"line_end":215,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10550,"byte_end":10553,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10558,"byte_end":10572,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10577,"byte_end":10580,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10585,"byte_end":10592,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10597,"byte_end":10624,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10629,"byte_end":10673,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10678,"byte_end":10681,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10686,"byte_end":10717,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10722,"byte_end":10725,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(2, 3), 1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10730,"byte_end":10774,"line_start":225,"line_end":225,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10779,"byte_end":10807,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10812,"byte_end":10815,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(1, 2), 1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10820,"byte_end":10864,"line_start":228,"line_end":228,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10869,"byte_end":10897,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10902,"byte_end":10909,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10961,"byte_end":11015,"line_start":232,"line_end":232,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11825,"byte_end":11841,"line_start":258,"line_end":258,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<AtomicCell<T>>::compare_exchange","value":"pub fn compare_exchange(&Self, T, T) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11200,"byte_end":11277,"line_start":240,"line_end":240,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11282,"byte_end":11285,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new value was written and containing","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11290,"byte_end":11382,"line_start":242,"line_end":242,"column_start":5,"column_end":97}},{"value":"/ the previous value. On success this value is guaranteed to be equal to `current`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11387,"byte_end":11472,"line_start":243,"line_end":243,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11477,"byte_end":11480,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11485,"byte_end":11499,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11504,"byte_end":11507,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11512,"byte_end":11519,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11524,"byte_end":11568,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11573,"byte_end":11576,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11581,"byte_end":11612,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11617,"byte_end":11620,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(2, 3), Err(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11625,"byte_end":11674,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11679,"byte_end":11707,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11712,"byte_end":11715,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(1, 2), Ok(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11720,"byte_end":11768,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11773,"byte_end":11801,"line_start":256,"line_end":256,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11806,"byte_end":11813,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12837,"byte_end":12849,"line_start":282,"line_end":282,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<AtomicCell<T>>::fetch_update","value":"pub fn fetch_update<F>(&Self, F) -> Result<T, T> where F: FnMut(T) ->\nOption<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the value, and applies a function to it that returns an optional\n new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else\n `Err(previous_value)`.","sig":null,"attributes":[{"value":"/ Fetches the value, and applies a function to it that returns an optional","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":11978,"byte_end":12054,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12059,"byte_end":12157,"line_start":263,"line_end":263,"column_start":5,"column_end":103}},{"value":"/ `Err(previous_value)`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12162,"byte_end":12188,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12193,"byte_end":12196,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Note: This may call the function multiple times if the value has been changed from other threads in","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12201,"byte_end":12304,"line_start":266,"line_end":266,"column_start":5,"column_end":108}},{"value":"/ the meantime, as long as the function returns `Some(_)`, but the function will have been applied","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12309,"byte_end":12409,"line_start":267,"line_end":267,"column_start":5,"column_end":105}},{"value":"/ only once to the stored value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12414,"byte_end":12448,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12453,"byte_end":12456,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12461,"byte_end":12475,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12480,"byte_end":12483,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12488,"byte_end":12499,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12504,"byte_end":12548,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12553,"byte_end":12556,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12561,"byte_end":12592,"line_start":275,"line_end":275,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.fetch_update(|_| None), Err(7));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12597,"byte_end":12646,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(7));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12651,"byte_end":12706,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(8));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12711,"byte_end":12766,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(), 9);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12771,"byte_end":12799,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12804,"byte_end":12811,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":12816,"byte_end":12825,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34074,"byte_end":34083,"line_start":870,"line_end":870,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<AtomicCell<bool>>::fetch_and","value":"pub fn fetch_and(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"and\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"and\" to the current value and returns the previous value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33635,"byte_end":33713,"line_start":854,"line_end":854,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33718,"byte_end":33721,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33726,"byte_end":33740,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33745,"byte_end":33748,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33753,"byte_end":33760,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33765,"byte_end":33809,"line_start":859,"line_end":859,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33814,"byte_end":33817,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33822,"byte_end":33856,"line_start":861,"line_end":861,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33861,"byte_end":33864,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(true), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33869,"byte_end":33909,"line_start":863,"line_end":863,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33914,"byte_end":33945,"line_start":864,"line_end":864,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33950,"byte_end":33953,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(false), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33958,"byte_end":33999,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34004,"byte_end":34036,"line_start":867,"line_end":867,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34041,"byte_end":34048,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34053,"byte_end":34062,"line_start":869,"line_end":869,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34770,"byte_end":34780,"line_start":894,"line_end":894,"column_start":12,"column_end":22},"name":"fetch_nand","qualname":"<AtomicCell<bool>>::fetch_nand","value":"pub fn fetch_nand(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"nand\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"nand\" to the current value and returns the previous value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34236,"byte_end":34315,"line_start":875,"line_end":875,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34320,"byte_end":34323,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34328,"byte_end":34342,"line_start":877,"line_end":877,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34347,"byte_end":34350,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34355,"byte_end":34362,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34367,"byte_end":34411,"line_start":880,"line_end":880,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34416,"byte_end":34419,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34424,"byte_end":34458,"line_start":882,"line_end":882,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34463,"byte_end":34466,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_nand(false), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34471,"byte_end":34513,"line_start":884,"line_end":884,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34518,"byte_end":34549,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34554,"byte_end":34557,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_nand(true), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34562,"byte_end":34603,"line_start":887,"line_end":887,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34608,"byte_end":34640,"line_start":888,"line_end":888,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34645,"byte_end":34648,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_nand(false), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34653,"byte_end":34696,"line_start":890,"line_end":890,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34701,"byte_end":34732,"line_start":891,"line_end":891,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34737,"byte_end":34744,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34749,"byte_end":34758,"line_start":893,"line_end":893,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35373,"byte_end":35381,"line_start":915,"line_end":915,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<AtomicCell<bool>>::fetch_or","value":"pub fn fetch_or(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"or\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"or\" to the current value and returns the previous value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":34934,"byte_end":35011,"line_start":899,"line_end":899,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35016,"byte_end":35019,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35024,"byte_end":35038,"line_start":901,"line_end":901,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35043,"byte_end":35046,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35051,"byte_end":35058,"line_start":903,"line_end":903,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35063,"byte_end":35107,"line_start":904,"line_end":904,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35112,"byte_end":35115,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35120,"byte_end":35155,"line_start":906,"line_end":906,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35160,"byte_end":35163,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(false), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35168,"byte_end":35209,"line_start":908,"line_end":908,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35214,"byte_end":35246,"line_start":909,"line_end":909,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35251,"byte_end":35254,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(true), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35259,"byte_end":35299,"line_start":911,"line_end":911,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35304,"byte_end":35335,"line_start":912,"line_end":912,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35340,"byte_end":35347,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35352,"byte_end":35361,"line_start":914,"line_end":914,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35972,"byte_end":35981,"line_start":936,"line_end":936,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<AtomicCell<bool>>::fetch_xor","value":"pub fn fetch_xor(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"xor\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"xor\" to the current value and returns the previous value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35533,"byte_end":35611,"line_start":920,"line_end":920,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35616,"byte_end":35619,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35624,"byte_end":35638,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35643,"byte_end":35646,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35651,"byte_end":35658,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35663,"byte_end":35707,"line_start":925,"line_end":925,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35712,"byte_end":35715,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35720,"byte_end":35754,"line_start":927,"line_end":927,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35759,"byte_end":35762,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(false), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35767,"byte_end":35808,"line_start":929,"line_end":929,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35813,"byte_end":35844,"line_start":930,"line_end":930,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35849,"byte_end":35852,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(true), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35857,"byte_end":35897,"line_start":932,"line_end":932,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35902,"byte_end":35934,"line_start":933,"line_end":933,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35939,"byte_end":35946,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":35951,"byte_end":35960,"line_start":935,"line_end":935,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":172},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":46744,"byte_end":46757,"line_start":7,"line_end":7,"column_start":11,"column_end":24},"name":"AtomicConsume","qualname":"::atomic::consume::AtomicConsume","value":"AtomicConsume","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" Trait which allows reading from primitive atomic types with \"consume\" ordering.\n","sig":null,"attributes":[{"value":"/ Trait which allows reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":46650,"byte_end":46733,"line_start":6,"line_end":6,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":173},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":46810,"byte_end":46813,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Val","qualname":"::atomic::consume::AtomicConsume::Val","value":"type Val;","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" Type returned by `load_consume`.\n","sig":null,"attributes":[{"value":"/ Type returned by `load_consume`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":46764,"byte_end":46800,"line_start":8,"line_end":8,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47651,"byte_end":47663,"line_start":26,"line_end":26,"column_start":8,"column_end":20},"name":"load_consume","qualname":"::atomic::consume::AtomicConsume::load_consume","value":"pub fn load_consume(&Self) -> Self::Val","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" Loads a value from the atomic using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic using a \"consume\" memory ordering.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":46820,"byte_end":46888,"line_start":11,"line_end":11,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":46893,"byte_end":46896,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":46901,"byte_end":46974,"line_start":13,"line_end":13,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":46979,"byte_end":47055,"line_start":14,"line_end":14,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47060,"byte_end":47131,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47136,"byte_end":47210,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47215,"byte_end":47238,"line_start":17,"line_end":17,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47243,"byte_end":47246,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47251,"byte_end":47326,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47331,"byte_end":47405,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47410,"byte_end":47444,"line_start":21,"line_end":21,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47449,"byte_end":47452,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This is currently only implemented on ARM and AArch64, where a fence","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47457,"byte_end":47529,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/ can be avoided. On other architectures this will fall back to a simple","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47534,"byte_end":47608,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ `load(Ordering::Acquire)`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":47613,"byte_end":47643,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54222,"byte_end":54233,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"CachePadded","qualname":"::cache_padded::CachePadded","value":"CachePadded {  }","parent":null,"children":[{"krate":0,"index":446}],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49417,"byte_end":49475,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49476,"byte_end":49479,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49480,"byte_end":49577,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ data are not placed into the same cache line. Updating an atomic value invalidates the whole","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49578,"byte_end":49674,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ cache line it belongs to, which makes the next access to the same cache line slower for other","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49675,"byte_end":49772,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ CPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49773,"byte_end":49867,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ cached data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49868,"byte_end":49884,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49885,"byte_end":49888,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Size and alignment","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49889,"byte_end":49913,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49914,"byte_end":49917,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Cache lines are assumed to be N bytes long, depending on the architecture:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49918,"byte_end":49996,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":49997,"byte_end":50000,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * On x86-64, aarch64, and powerpc64, N = 128.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50001,"byte_end":50050,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ * On arm, mips, mips64, and riscv64, N = 32.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50051,"byte_end":50099,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/ * On s390x, N = 256.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50100,"byte_end":50124,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ * On all others, N = 64.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50125,"byte_end":50153,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50154,"byte_end":50157,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that N is just a reasonable guess and is not guaranteed to match the actual cache line","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50158,"byte_end":50253,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ length of the machine the program is running on. On modern Intel architectures, spatial","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50254,"byte_end":50345,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ prefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50346,"byte_end":50445,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ cache lines are 128 bytes long.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50446,"byte_end":50481,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50482,"byte_end":50485,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50486,"byte_end":50582,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ a value of type `T`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50583,"byte_end":50607,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50608,"byte_end":50611,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50612,"byte_end":50701,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50702,"byte_end":50705,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50706,"byte_end":50720,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50721,"byte_end":50724,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Alignment and padding:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50725,"byte_end":50751,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50752,"byte_end":50755,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50756,"byte_end":50763,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50764,"byte_end":50801,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50802,"byte_end":50805,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let array = [CachePadded::new(1i8), CachePadded::new(2i8)];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50806,"byte_end":50869,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/ let addr1 = &*array[0] as *const i8 as usize;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50870,"byte_end":50919,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ let addr2 = &*array[1] as *const i8 as usize;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50920,"byte_end":50969,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50970,"byte_end":50973,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert!(addr2 - addr1 >= 64);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":50974,"byte_end":51007,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(addr1 % 64, 0);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51008,"byte_end":51038,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(addr2 % 64, 0);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51039,"byte_end":51069,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51070,"byte_end":51077,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51078,"byte_end":51081,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ When building a concurrent queue with a head and a tail index, it is wise to place them in","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51082,"byte_end":51176,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ different cache lines so that concurrent threads pushing and popping elements don't invalidate","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51177,"byte_end":51275,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ each other's cache lines:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51276,"byte_end":51305,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51306,"byte_end":51309,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51310,"byte_end":51317,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51318,"byte_end":51355,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51356,"byte_end":51395,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51396,"byte_end":51399,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ struct Queue<T> {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51400,"byte_end":51421,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     head: CachePadded<AtomicUsize>,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51422,"byte_end":51461,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/     tail: CachePadded<AtomicUsize>,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51462,"byte_end":51501,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/     buffer: *mut T,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51502,"byte_end":51525,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51526,"byte_end":51531,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":51532,"byte_end":51539,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"repr(align(128))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":52493,"byte_end":52509,"line_start":84,"line_end":84,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54615,"byte_end":54618,"line_start":145,"line_end":145,"column_start":18,"column_end":21},"name":"new","qualname":"<CachePadded<T>>::new","value":"pub const fn new(T) -> CachePadded<T>","parent":null,"children":[],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54382,"byte_end":54440,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54445,"byte_end":54448,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54453,"byte_end":54467,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54472,"byte_end":54475,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54480,"byte_end":54487,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54492,"byte_end":54529,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54534,"byte_end":54537,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54542,"byte_end":54585,"line_start":143,"line_end":143,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54590,"byte_end":54597,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54968,"byte_end":54978,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CachePadded<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value.","sig":null,"attributes":[{"value":"/ Returns the inner value.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54694,"byte_end":54722,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54727,"byte_end":54730,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54735,"byte_end":54749,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54754,"byte_end":54757,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54762,"byte_end":54769,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54774,"byte_end":54811,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54816,"byte_end":54819,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54824,"byte_end":54867,"line_start":156,"line_end":156,"column_start":5,"column_end":48}},{"value":"/ let value = padded_value.into_inner();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54872,"byte_end":54914,"line_start":157,"line_end":157,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(value, 7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54919,"byte_end":54944,"line_start":158,"line_end":158,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54949,"byte_end":54956,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57911,"byte_end":57918,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Backoff","qualname":"::backoff::Backoff","value":"Backoff {  }","parent":null,"children":[{"krate":0,"index":234}],"decl_id":null,"docs":" Performs exponential backoff in spin loops.","sig":null,"attributes":[{"value":"/ Performs exponential backoff in spin loops.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":55703,"byte_end":55750,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":55751,"byte_end":55754,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Backing off in spin loops reduces contention and improves overall performance.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":55755,"byte_end":55837,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":55838,"byte_end":55841,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":55842,"byte_end":55941,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ scheduler, and tell when is a good time to block the thread using a different synchronization","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":55942,"byte_end":56039,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ mechanism. Each step of the back off procedure takes roughly twice as long as the previous","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56040,"byte_end":56134,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ step.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56135,"byte_end":56144,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56145,"byte_end":56148,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56149,"byte_end":56163,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56164,"byte_end":56167,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56168,"byte_end":56204,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56205,"byte_end":56208,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56209,"byte_end":56216,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56217,"byte_end":56250,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56251,"byte_end":56290,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56291,"byte_end":56335,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56336,"byte_end":56339,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56340,"byte_end":56394,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56395,"byte_end":56432,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     loop {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56433,"byte_end":56447,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56448,"byte_end":56485,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56486,"byte_end":56571,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/             return val;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56572,"byte_end":56599,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56600,"byte_end":56613,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         backoff.spin();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56614,"byte_end":56641,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56642,"byte_end":56651,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56652,"byte_end":56657,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56658,"byte_end":56665,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56666,"byte_end":56669,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56670,"byte_end":56721,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56722,"byte_end":56725,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56726,"byte_end":56733,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56734,"byte_end":56767,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56768,"byte_end":56806,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56807,"byte_end":56851,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56852,"byte_end":56855,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56856,"byte_end":56894,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56895,"byte_end":56932,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56933,"byte_end":56968,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/         backoff.snooze();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56969,"byte_end":56998,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":56999,"byte_end":57008,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57009,"byte_end":57014,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57015,"byte_end":57022,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57023,"byte_end":57026,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57027,"byte_end":57119,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ Note that whoever sets the atomic variable to `true` must notify the parked thread by calling","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57120,"byte_end":57217,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ [`unpark()`]:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57218,"byte_end":57235,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57236,"byte_end":57239,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57240,"byte_end":57247,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57248,"byte_end":57281,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57282,"byte_end":57320,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57321,"byte_end":57365,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57366,"byte_end":57386,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57387,"byte_end":57390,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57391,"byte_end":57433,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57434,"byte_end":57471,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57472,"byte_end":57507,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57508,"byte_end":57547,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/             thread::park();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57548,"byte_end":57579,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57580,"byte_end":57600,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/             backoff.snooze();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57601,"byte_end":57634,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57635,"byte_end":57648,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57649,"byte_end":57658,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57659,"byte_end":57664,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57665,"byte_end":57672,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57673,"byte_end":57676,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57677,"byte_end":57720,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ [`std::thread::park()`]: std::thread::park","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57721,"byte_end":57767,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ [`Condvar`]: std::sync::Condvar","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57768,"byte_end":57803,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57804,"byte_end":57853,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ [`unpark()`]: std::thread::Thread::unpark","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57854,"byte_end":57899,"line_start":79,"line_end":79,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58161,"byte_end":58164,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Backoff>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Backoff`.","sig":null,"attributes":[{"value":"/ Creates a new `Backoff`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57964,"byte_end":57992,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57997,"byte_end":58000,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58005,"byte_end":58019,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58024,"byte_end":58027,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58032,"byte_end":58039,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58044,"byte_end":58077,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58082,"byte_end":58085,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58090,"byte_end":58123,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58128,"byte_end":58135,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58140,"byte_end":58149,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58446,"byte_end":58451,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"reset","qualname":"<Backoff>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Backoff`.","sig":null,"attributes":[{"value":"/ Resets the `Backoff`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58227,"byte_end":58252,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58257,"byte_end":58260,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58265,"byte_end":58279,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58284,"byte_end":58287,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58292,"byte_end":58299,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58304,"byte_end":58337,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58342,"byte_end":58345,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58350,"byte_end":58383,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ backoff.reset();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58388,"byte_end":58408,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58413,"byte_end":58420,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58425,"byte_end":58434,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59495,"byte_end":59499,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"spin","qualname":"<Backoff>::spin","value":"pub fn spin(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a lock-free loop.","sig":null,"attributes":[{"value":"/ Backs off in a lock-free loop.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58498,"byte_end":58532,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58537,"byte_end":58540,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to retry an operation because another thread made","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58545,"byte_end":58638,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ progress.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58643,"byte_end":58656,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58661,"byte_end":58664,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58669,"byte_end":58738,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58743,"byte_end":58746,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58751,"byte_end":58765,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58770,"byte_end":58773,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58778,"byte_end":58814,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58819,"byte_end":58822,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58827,"byte_end":58834,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58839,"byte_end":58872,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58877,"byte_end":58916,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58921,"byte_end":58965,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58970,"byte_end":58973,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":58978,"byte_end":59032,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59037,"byte_end":59074,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/     loop {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59079,"byte_end":59093,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59098,"byte_end":59135,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59140,"byte_end":59225,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"/             return val;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59230,"byte_end":59257,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/         }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59262,"byte_end":59275,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/         backoff.spin();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59280,"byte_end":59307,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59312,"byte_end":59321,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59326,"byte_end":59331,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59336,"byte_end":59339,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicUsize::new(7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59344,"byte_end":59376,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(fetch_mul(&a, 8), 7);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59381,"byte_end":59417,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.load(SeqCst), 56);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59422,"byte_end":59457,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59462,"byte_end":59469,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59474,"byte_end":59483,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61558,"byte_end":61564,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"snooze","qualname":"<Backoff>::snooze","value":"pub fn snooze(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a blocking loop.","sig":null,"attributes":[{"value":"/ Backs off in a blocking loop.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59903,"byte_end":59936,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59941,"byte_end":59944,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to wait for another thread to make progress.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":59949,"byte_end":60037,"line_start":161,"line_end":161,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60042,"byte_end":60045,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction and the current thread","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60050,"byte_end":60141,"line_start":163,"line_end":163,"column_start":5,"column_end":96}},{"value":"/ may yield by giving up a timeslice to the OS scheduler.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60146,"byte_end":60205,"line_start":164,"line_end":164,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60210,"byte_end":60213,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ In `#[no_std]` environments, this method is equivalent to [`spin`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60218,"byte_end":60289,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60294,"byte_end":60297,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If possible, use [`is_completed`] to check when it is advised to stop using backoff and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60302,"byte_end":60393,"line_start":168,"line_end":168,"column_start":5,"column_end":96}},{"value":"/ block the current thread using a different synchronization mechanism instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60398,"byte_end":60479,"line_start":169,"line_end":169,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60484,"byte_end":60487,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`spin`]: Backoff::spin","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60492,"byte_end":60519,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60524,"byte_end":60567,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60572,"byte_end":60575,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60580,"byte_end":60594,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60599,"byte_end":60602,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60607,"byte_end":60658,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60663,"byte_end":60666,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60671,"byte_end":60678,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60683,"byte_end":60716,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60721,"byte_end":60744,"line_start":180,"line_end":180,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60749,"byte_end":60787,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60792,"byte_end":60836,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60841,"byte_end":60861,"line_start":183,"line_end":183,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60866,"byte_end":60894,"line_start":184,"line_end":184,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60899,"byte_end":60902,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60907,"byte_end":60945,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60950,"byte_end":60987,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":60992,"byte_end":61027,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/         backoff.snooze();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61032,"byte_end":61061,"line_start":189,"line_end":189,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61066,"byte_end":61075,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61080,"byte_end":61085,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61090,"byte_end":61093,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61098,"byte_end":61147,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61152,"byte_end":61183,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61188,"byte_end":61191,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61196,"byte_end":61223,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61228,"byte_end":61278,"line_start":197,"line_end":197,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61283,"byte_end":61318,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61323,"byte_end":61330,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61335,"byte_end":61338,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61343,"byte_end":61385,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/ spin_wait(&ready);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61390,"byte_end":61412,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61417,"byte_end":61458,"line_start":203,"line_end":203,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61463,"byte_end":61470,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61475,"byte_end":61478,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61483,"byte_end":61532,"line_start":206,"line_end":206,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":61537,"byte_end":61546,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63781,"byte_end":63793,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"is_completed","qualname":"<Backoff>::is_completed","value":"pub fn is_completed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if exponential backoff has completed and blocking the thread is advised.","sig":null,"attributes":[{"value":"/ Returns `true` if exponential backoff has completed and blocking the thread is advised.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62454,"byte_end":62545,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62550,"byte_end":62553,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62558,"byte_end":62572,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62577,"byte_end":62580,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62585,"byte_end":62677,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62682,"byte_end":62685,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62690,"byte_end":62697,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62702,"byte_end":62735,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62740,"byte_end":62763,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62768,"byte_end":62806,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62811,"byte_end":62855,"line_start":244,"line_end":244,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62860,"byte_end":62880,"line_start":245,"line_end":245,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62885,"byte_end":62913,"line_start":246,"line_end":246,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62918,"byte_end":62921,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62926,"byte_end":62968,"line_start":248,"line_end":248,"column_start":5,"column_end":47}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":62973,"byte_end":63010,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63015,"byte_end":63050,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63055,"byte_end":63094,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/             thread::park();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63099,"byte_end":63130,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63135,"byte_end":63155,"line_start":253,"line_end":253,"column_start":5,"column_end":25}},{"value":"/             backoff.snooze();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63160,"byte_end":63193,"line_start":254,"line_end":254,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63198,"byte_end":63211,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63216,"byte_end":63225,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63230,"byte_end":63235,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63240,"byte_end":63243,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63248,"byte_end":63297,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63302,"byte_end":63333,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ let waiter = thread::current();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63338,"byte_end":63373,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63378,"byte_end":63381,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63386,"byte_end":63413,"line_start":263,"line_end":263,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63418,"byte_end":63468,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63473,"byte_end":63508,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     waiter.unpark();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63513,"byte_end":63537,"line_start":266,"line_end":266,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63542,"byte_end":63549,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63554,"byte_end":63557,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63562,"byte_end":63604,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/ blocking_wait(&ready);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63609,"byte_end":63635,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63640,"byte_end":63681,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63686,"byte_end":63693,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63698,"byte_end":63701,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63706,"byte_end":63755,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63760,"byte_end":63769,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":470},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":539},{"krate":0,"index":702},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":749}],"decl_id":null,"docs":" Thread synchronization primitives.","sig":null,"attributes":[{"value":"/ Thread synchronization primitives.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12926901,"byte_end":12926939,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12926940,"byte_end":12926943,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12926944,"byte_end":12926989,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12926990,"byte_end":12927069,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/mod.rs","byte_start":12927070,"byte_end":12927150,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":501},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929076,"byte_end":12929082,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Parker","qualname":"::sync::parker::Parker","value":"Parker {  }","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"decl_id":null,"docs":" A thread parking primitive.","sig":null,"attributes":[{"value":"/ A thread parking primitive.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12927646,"byte_end":12927677,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12927678,"byte_end":12927681,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each `Parker` has an associated token which is initially not present:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12927682,"byte_end":12927769,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12927770,"byte_end":12927773,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * The [`park`] method blocks the current thread unless or until the token is available, at","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12927774,"byte_end":12927868,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/   which point it automatically consumes the token.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12927869,"byte_end":12927923,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12927924,"byte_end":12927927,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * The [`park_timeout`] and [`park_deadline`] methods work the same as [`park`], but block for","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12927928,"byte_end":12928025,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/   a specified maximum time.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928026,"byte_end":12928057,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928058,"byte_end":12928061,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * The [`unpark`] method atomically makes the token available if it wasn't already. Because the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928062,"byte_end":12928160,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/   token is initially absent, [`unpark`] followed by [`park`] will result in the second call","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928161,"byte_end":12928256,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/   returning immediately.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928257,"byte_end":12928285,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928286,"byte_end":12928289,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928290,"byte_end":12928388,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ [`park`] and [`unpark`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928389,"byte_end":12928417,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928418,"byte_end":12928421,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928422,"byte_end":12928436,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928437,"byte_end":12928440,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928441,"byte_end":12928448,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928449,"byte_end":12928469,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928470,"byte_end":12928498,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928499,"byte_end":12928537,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928538,"byte_end":12928541,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928542,"byte_end":12928568,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928569,"byte_end":12928602,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928603,"byte_end":12928606,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Make the token available.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928607,"byte_end":12928639,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ u.unpark();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928640,"byte_end":12928655,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928656,"byte_end":12928707,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/ p.park();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928708,"byte_end":12928721,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928722,"byte_end":12928725,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928726,"byte_end":12928753,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928754,"byte_end":12928804,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/     u.unpark();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928805,"byte_end":12928824,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928825,"byte_end":12928832,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928833,"byte_end":12928836,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928837,"byte_end":12928890,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ p.park();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928891,"byte_end":12928904,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928905,"byte_end":12928912,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928913,"byte_end":12928916,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928917,"byte_end":12928943,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928944,"byte_end":12928986,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ [`park_deadline`]: Parker::park_deadline","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12928987,"byte_end":12929031,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`unpark`]: Unparker::unpark","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929032,"byte_end":12929064,"line_start":52,"line_end":52,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929752,"byte_end":12929755,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Parker>::new","value":"pub fn new() -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Parker`.","sig":null,"attributes":[{"value":"/ Creates a new `Parker`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929564,"byte_end":12929591,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929596,"byte_end":12929599,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929604,"byte_end":12929618,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929623,"byte_end":12929626,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929631,"byte_end":12929638,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929643,"byte_end":12929681,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929686,"byte_end":12929689,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929694,"byte_end":12929720,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929725,"byte_end":12929732,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929737,"byte_end":12929740,"line_start":85,"line_end":85,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930207,"byte_end":12930211,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"park","qualname":"<Parker>::park","value":"pub fn park(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929805,"byte_end":12929869,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929874,"byte_end":12929877,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929882,"byte_end":12929896,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929901,"byte_end":12929904,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929909,"byte_end":12929916,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929921,"byte_end":12929959,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929964,"byte_end":12929967,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929972,"byte_end":12929998,"line_start":97,"line_end":97,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930003,"byte_end":12930036,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930041,"byte_end":12930044,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930049,"byte_end":12930081,"line_start":100,"line_end":100,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930086,"byte_end":12930101,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930106,"byte_end":12930109,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930114,"byte_end":12930165,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930170,"byte_end":12930183,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930188,"byte_end":12930195,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930701,"byte_end":12930713,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"park_timeout","qualname":"<Parker>::park_timeout","value":"pub fn park_timeout(&Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, but only for a limited time.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, but only for a limited time.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930272,"byte_end":12930365,"line_start":110,"line_end":110,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930370,"byte_end":12930373,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930378,"byte_end":12930392,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930397,"byte_end":12930400,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930405,"byte_end":12930412,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930417,"byte_end":12930445,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930450,"byte_end":12930488,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930493,"byte_end":12930496,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930501,"byte_end":12930527,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930532,"byte_end":12930535,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930540,"byte_end":12930625,"line_start":120,"line_end":120,"column_start":5,"column_end":90}},{"value":"/ p.park_timeout(Duration::from_millis(500));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930630,"byte_end":12930677,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930682,"byte_end":12930689,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931297,"byte_end":12931310,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"park_deadline","qualname":"<Parker>::park_deadline","value":"pub fn park_deadline(&Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, or until a certain deadline.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, or until a certain deadline.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930806,"byte_end":12930899,"line_start":127,"line_end":127,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930904,"byte_end":12930907,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930912,"byte_end":12930926,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930931,"byte_end":12930934,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930939,"byte_end":12930946,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930951,"byte_end":12930990,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12930995,"byte_end":12931033,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931038,"byte_end":12931041,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931046,"byte_end":12931072,"line_start":135,"line_end":135,"column_start":5,"column_end":31}},{"value":"/ let deadline = Instant::now() + Duration::from_millis(500);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931077,"byte_end":12931140,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931145,"byte_end":12931148,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931153,"byte_end":12931238,"line_start":138,"line_end":138,"column_start":5,"column_end":90}},{"value":"/ p.park_deadline(deadline);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931243,"byte_end":12931273,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931278,"byte_end":12931285,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931973,"byte_end":12931981,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"unparker","qualname":"<Parker>::unparker","value":"pub fn unparker(&Self) -> &Unparker","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an associated [`Unparker`].","sig":null,"attributes":[{"value":"/ Returns a reference to an associated [`Unparker`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931399,"byte_end":12931453,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931458,"byte_end":12931461,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931466,"byte_end":12931557,"line_start":147,"line_end":147,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931562,"byte_end":12931565,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931570,"byte_end":12931584,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931589,"byte_end":12931592,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931597,"byte_end":12931604,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931609,"byte_end":12931647,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931652,"byte_end":12931655,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931660,"byte_end":12931686,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931691,"byte_end":12931724,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931729,"byte_end":12931732,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931737,"byte_end":12931769,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931774,"byte_end":12931789,"line_start":158,"line_end":158,"column_start":5,"column_end":20}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931794,"byte_end":12931845,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931850,"byte_end":12931863,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931868,"byte_end":12931875,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931880,"byte_end":12931883,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931888,"byte_end":12931914,"line_start":163,"line_end":163,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12931919,"byte_end":12931961,"line_start":164,"line_end":164,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932325,"byte_end":12932333,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Parker>::into_raw","value":"pub fn into_raw(Parker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Parker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts a `Parker` into a raw pointer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932038,"byte_end":12932081,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932086,"byte_end":12932089,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932094,"byte_end":12932108,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932113,"byte_end":12932116,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932121,"byte_end":12932128,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932133,"byte_end":12932171,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932176,"byte_end":12932179,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932184,"byte_end":12932210,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932215,"byte_end":12932249,"line_start":177,"line_end":177,"column_start":5,"column_end":39}},{"value":"/ # let _ = unsafe { Parker::from_raw(raw) };","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932254,"byte_end":12932301,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932306,"byte_end":12932313,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932829,"byte_end":12932837,"line_start":199,"line_end":199,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Parker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into a `Parker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into a `Parker`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932416,"byte_end":12932459,"line_start":184,"line_end":184,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932464,"byte_end":12932467,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932472,"byte_end":12932484,"line_start":186,"line_end":186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932489,"byte_end":12932492,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Parker::into_raw`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932497,"byte_end":12932580,"line_start":188,"line_end":188,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932585,"byte_end":12932588,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932593,"byte_end":12932607,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932612,"byte_end":12932615,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932620,"byte_end":12932627,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932632,"byte_end":12932670,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932675,"byte_end":12932678,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932683,"byte_end":12932709,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932714,"byte_end":12932748,"line_start":196,"line_end":196,"column_start":5,"column_end":39}},{"value":"/ let p = unsafe { Parker::from_raw(raw) };","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932753,"byte_end":12932798,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12932803,"byte_end":12932810,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":517},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933184,"byte_end":12933192,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"Unparker","qualname":"::sync::parker::Unparker","value":"Unparker {  }","parent":null,"children":[{"krate":0,"index":518}],"decl_id":null,"docs":" Unparks a thread parked by the associated [`Parker`].\n","sig":null,"attributes":[{"value":"/ Unparks a thread parked by the associated [`Parker`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933115,"byte_end":12933172,"line_start":213,"line_end":213,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934038,"byte_end":12934044,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Unparker>::unpark","value":"pub fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Atomically makes the token available if it is not already.","sig":null,"attributes":[{"value":"/ Atomically makes the token available if it is not already.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933308,"byte_end":12933370,"line_start":222,"line_end":222,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933375,"byte_end":12933378,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933383,"byte_end":12933475,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ any.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933480,"byte_end":12933488,"line_start":225,"line_end":225,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933493,"byte_end":12933496,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933501,"byte_end":12933515,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933520,"byte_end":12933523,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933528,"byte_end":12933535,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933540,"byte_end":12933560,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933565,"byte_end":12933593,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933598,"byte_end":12933636,"line_start":232,"line_end":232,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933641,"byte_end":12933644,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933649,"byte_end":12933675,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933680,"byte_end":12933713,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933718,"byte_end":12933721,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933726,"byte_end":12933753,"line_start":237,"line_end":237,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933758,"byte_end":12933808,"line_start":238,"line_end":238,"column_start":5,"column_end":55}},{"value":"/     u.unpark();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933813,"byte_end":12933832,"line_start":239,"line_end":239,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933837,"byte_end":12933844,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933849,"byte_end":12933852,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933857,"byte_end":12933910,"line_start":242,"line_end":242,"column_start":5,"column_end":58}},{"value":"/ p.park();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933915,"byte_end":12933928,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933933,"byte_end":12933940,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933945,"byte_end":12933948,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933953,"byte_end":12933979,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933984,"byte_end":12934026,"line_start":247,"line_end":247,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934437,"byte_end":12934445,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Unparker>::into_raw","value":"pub fn into_raw(Unparker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Unparker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts an `Unparker` into a raw pointer.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934093,"byte_end":12934139,"line_start":252,"line_end":252,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934144,"byte_end":12934147,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934152,"byte_end":12934166,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934171,"byte_end":12934174,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934179,"byte_end":12934186,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934191,"byte_end":12934241,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934246,"byte_end":12934249,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934254,"byte_end":12934280,"line_start":259,"line_end":259,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934285,"byte_end":12934318,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934323,"byte_end":12934359,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/ # let _ = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934364,"byte_end":12934413,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934418,"byte_end":12934425,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12935015,"byte_end":12935023,"line_start":285,"line_end":285,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Unparker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Unparker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into an `Unparker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into an `Unparker`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934535,"byte_end":12934581,"line_start":268,"line_end":268,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934586,"byte_end":12934589,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934594,"byte_end":12934606,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934611,"byte_end":12934614,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Unparker::into_raw`].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934619,"byte_end":12934704,"line_start":272,"line_end":272,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934709,"byte_end":12934712,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934717,"byte_end":12934731,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934736,"byte_end":12934739,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934744,"byte_end":12934751,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934756,"byte_end":12934806,"line_start":277,"line_end":277,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934811,"byte_end":12934814,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934819,"byte_end":12934845,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934850,"byte_end":12934883,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934888,"byte_end":12934891,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934896,"byte_end":12934932,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/ let u = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934937,"byte_end":12934984,"line_start":283,"line_end":283,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12934989,"byte_end":12934996,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942737,"byte_end":12942748,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"ShardedLock","qualname":"::sync::sharded_lock::ShardedLock","value":"ShardedLock {  }","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"decl_id":null,"docs":" A sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ A sharded reader-writer lock.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12940986,"byte_end":12941019,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941020,"byte_end":12941023,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This lock is equivalent to [`RwLock`], except read operations are faster and write operations","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941024,"byte_end":12941121,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ are slower.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941122,"byte_end":12941137,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941138,"byte_end":12941141,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941142,"byte_end":12941239,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ single cache line. Read operations will pick one of the shards depending on the current thread","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941240,"byte_end":12941338,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and lock it. Write operations need to lock all shards in succession.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941339,"byte_end":12941411,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941412,"byte_end":12941415,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ By splitting the lock into shards, concurrent read operations will in most cases choose","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941416,"byte_end":12941507,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ different shards and thus update different cache lines, which is good for scalability. However,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941508,"byte_end":12941607,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/ write operations need to do more work and are therefore slower than usual.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941608,"byte_end":12941686,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941687,"byte_end":12941690,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying operating system's","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941691,"byte_end":12941776,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/ implementation, and this type does not guarantee that any particular policy will be used.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941777,"byte_end":12941870,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941871,"byte_end":12941874,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941875,"byte_end":12941890,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941891,"byte_end":12941894,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941895,"byte_end":12941990,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"/ poisoned if a panic occurs while a write operation is in progress. If a panic occurs in any","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12941991,"byte_end":12942086,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ read operation, the lock will not be poisoned.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942087,"byte_end":12942137,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942138,"byte_end":12942141,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942142,"byte_end":12942156,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942157,"byte_end":12942160,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942161,"byte_end":12942168,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942169,"byte_end":12942212,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942213,"byte_end":12942216,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942217,"byte_end":12942252,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942253,"byte_end":12942256,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Any number of read locks can be held at once.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942257,"byte_end":12942309,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942310,"byte_end":12942315,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942316,"byte_end":12942354,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/     let r2 = lock.read().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942355,"byte_end":12942393,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942394,"byte_end":12942421,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942422,"byte_end":12942449,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ } // Read locks are dropped at this point.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942450,"byte_end":12942496,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942497,"byte_end":12942500,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // However, only one write lock may be held.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942501,"byte_end":12942549,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/ {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942550,"byte_end":12942555,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942556,"byte_end":12942598,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/     *w += 1;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942599,"byte_end":12942615,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942616,"byte_end":12942642,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ } // Write lock is dropped here.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942643,"byte_end":12942679,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942680,"byte_end":12942687,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942688,"byte_end":12942691,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`RwLock`]: std::sync::RwLock","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942692,"byte_end":12942725,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943377,"byte_end":12943380,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<ShardedLock<T>>::new","value":"pub fn new(T) -> ShardedLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new sharded reader-writer lock.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943165,"byte_end":12943210,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943215,"byte_end":12943218,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943223,"byte_end":12943237,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943242,"byte_end":12943245,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943250,"byte_end":12943257,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943262,"byte_end":12943305,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943310,"byte_end":12943313,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943318,"byte_end":12943353,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943358,"byte_end":12943365,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944353,"byte_end":12944363,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ShardedLock<T>>::into_inner","value":"pub fn into_inner(Self) -> LockResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this lock, returning the underlying data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943794,"byte_end":12943848,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943853,"byte_end":12943856,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943861,"byte_end":12943873,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943878,"byte_end":12943881,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943886,"byte_end":12943981,"line_start":118,"line_end":118,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943986,"byte_end":12944007,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944012,"byte_end":12944015,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944020,"byte_end":12944034,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944039,"byte_end":12944042,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944047,"byte_end":12944054,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944059,"byte_end":12944102,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944107,"byte_end":12944110,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(String::new());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944115,"byte_end":12944162,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/ {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944167,"byte_end":12944172,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/     let mut s = lock.write().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944177,"byte_end":12944219,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/     *s = \"modified\".to_owned();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944224,"byte_end":12944259,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944264,"byte_end":12944269,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(lock.into_inner().unwrap(), \"modified\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944274,"byte_end":12944329,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944334,"byte_end":12944341,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945340,"byte_end":12945351,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<ShardedLock<T>>::is_poisoned","value":"pub fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is poisoned.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is poisoned.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944642,"byte_end":12944685,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944690,"byte_end":12944693,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If another thread can still access the lock, it may become poisoned at any time. A `false`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944698,"byte_end":12944792,"line_start":148,"line_end":148,"column_start":5,"column_end":99}},{"value":"/ result should not be trusted without additional synchronization.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944797,"byte_end":12944865,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944870,"byte_end":12944873,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944878,"byte_end":12944892,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944897,"byte_end":12944900,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944905,"byte_end":12944912,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944917,"byte_end":12944960,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944965,"byte_end":12944988,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944993,"byte_end":12945013,"line_start":156,"line_end":156,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945018,"byte_end":12945021,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(0));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945026,"byte_end":12945071,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945076,"byte_end":12945106,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945111,"byte_end":12945114,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let _ = thread::spawn(move || {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945119,"byte_end":12945154,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/     let _lock = c_lock.write().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945159,"byte_end":12945203,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/     panic!(); // the lock gets poisoned","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945208,"byte_end":12945251,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/ }).join();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945256,"byte_end":12945270,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(lock.is_poisoned(), true);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945275,"byte_end":12945316,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945321,"byte_end":12945328,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945990,"byte_end":12945997,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ShardedLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945422,"byte_end":12945477,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945482,"byte_end":12945485,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking needs to take place.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945490,"byte_end":12945574,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945579,"byte_end":12945582,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945587,"byte_end":12945599,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945604,"byte_end":12945607,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945612,"byte_end":12945707,"line_start":177,"line_end":177,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945712,"byte_end":12945733,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945738,"byte_end":12945741,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945746,"byte_end":12945760,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945765,"byte_end":12945768,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945773,"byte_end":12945780,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945785,"byte_end":12945828,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945833,"byte_end":12945836,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let mut lock = ShardedLock::new(0);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945841,"byte_end":12945880,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut().unwrap() = 10;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945885,"byte_end":12945919,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(*lock.read().unwrap(), 10);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945924,"byte_end":12945966,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12945971,"byte_end":12945978,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12947117,"byte_end":12947125,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"try_read","qualname":"<ShardedLock<T>>::try_read","value":"pub fn try_read(&Self) -> TryLockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with shared read access.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946261,"byte_end":12946319,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946324,"byte_end":12946327,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946332,"byte_end":12946425,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the shared access when it is dropped. This method does not","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946430,"byte_end":12946523,"line_start":203,"line_end":203,"column_start":5,"column_end":98}},{"value":"/ provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946528,"byte_end":12946617,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946622,"byte_end":12946662,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946667,"byte_end":12946670,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946675,"byte_end":12946687,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946692,"byte_end":12946695,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946700,"byte_end":12946795,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946800,"byte_end":12946821,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946826,"byte_end":12946829,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946834,"byte_end":12946848,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946853,"byte_end":12946856,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946861,"byte_end":12946868,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946873,"byte_end":12946916,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946921,"byte_end":12946924,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946929,"byte_end":12946964,"line_start":217,"line_end":217,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946969,"byte_end":12946972,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ match lock.try_read() {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12946977,"byte_end":12947004,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/     Ok(n) => assert_eq!(*n, 1),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12947009,"byte_end":12947044,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/     Err(_) => unreachable!(),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12947049,"byte_end":12947082,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12947087,"byte_end":12947093,"line_start":222,"line_end":222,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12947098,"byte_end":12947105,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949426,"byte_end":12949430,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"read","qualname":"<ShardedLock<T>>::read","value":"pub fn read(&Self) -> LockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with shared read access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with shared read access, blocking the current thread until it can be acquired.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948144,"byte_end":12948232,"line_start":248,"line_end":248,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948237,"byte_end":12948240,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948245,"byte_end":12948336,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948341,"byte_end":12948435,"line_start":251,"line_end":251,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948440,"byte_end":12948535,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948540,"byte_end":12948583,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948588,"byte_end":12948591,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the shared access when dropped.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948596,"byte_end":12948666,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948671,"byte_end":12948674,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948679,"byte_end":12948691,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948696,"byte_end":12948699,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948704,"byte_end":12948799,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948804,"byte_end":12948825,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948830,"byte_end":12948833,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948838,"byte_end":12948850,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948855,"byte_end":12948858,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948863,"byte_end":12948953,"line_start":264,"line_end":264,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948958,"byte_end":12948961,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948966,"byte_end":12948980,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948985,"byte_end":12948988,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12948993,"byte_end":12949000,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949005,"byte_end":12949048,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949053,"byte_end":12949076,"line_start":270,"line_end":270,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949081,"byte_end":12949101,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949106,"byte_end":12949109,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(1));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949114,"byte_end":12949159,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949164,"byte_end":12949194,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949199,"byte_end":12949202,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949207,"byte_end":12949240,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949245,"byte_end":12949267,"line_start":277,"line_end":277,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949272,"byte_end":12949275,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949280,"byte_end":12949307,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let r = c_lock.read();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949312,"byte_end":12949342,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/     assert!(r.is_ok());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949347,"byte_end":12949374,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949379,"byte_end":12949402,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12949407,"byte_end":12949414,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12951095,"byte_end":12951104,"line_start":328,"line_end":328,"column_start":12,"column_end":21},"name":"try_write","qualname":"<ShardedLock<T>>::try_write","value":"pub fn try_write(&Self) -> TryLockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with exclusive write access.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950236,"byte_end":12950298,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950303,"byte_end":12950306,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950311,"byte_end":12950404,"line_start":306,"line_end":306,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the exclusive access when it is dropped. This method does","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950409,"byte_end":12950501,"line_start":307,"line_end":307,"column_start":5,"column_end":97}},{"value":"/ not provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950506,"byte_end":12950599,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950604,"byte_end":12950644,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950649,"byte_end":12950652,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950657,"byte_end":12950669,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950674,"byte_end":12950677,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950682,"byte_end":12950777,"line_start":313,"line_end":313,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950782,"byte_end":12950803,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950808,"byte_end":12950811,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950816,"byte_end":12950830,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950835,"byte_end":12950838,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950843,"byte_end":12950850,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950855,"byte_end":12950898,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950903,"byte_end":12950906,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950911,"byte_end":12950946,"line_start":321,"line_end":321,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950951,"byte_end":12950954,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950959,"byte_end":12950992,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12950997,"byte_end":12951019,"line_start":324,"line_end":324,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12951024,"byte_end":12951027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_err());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12951032,"byte_end":12951071,"line_start":326,"line_end":326,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12951076,"byte_end":12951083,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953892,"byte_end":12953897,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"write","qualname":"<ShardedLock<T>>::write","value":"pub fn write(&Self) -> LockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with exclusive write access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with exclusive write access, blocking the current thread until it can be acquired.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12952791,"byte_end":12952883,"line_start":378,"line_end":378,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12952888,"byte_end":12952891,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12952896,"byte_end":12952987,"line_start":380,"line_end":380,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12952992,"byte_end":12953086,"line_start":381,"line_end":381,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953091,"byte_end":12953186,"line_start":382,"line_end":382,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953191,"byte_end":12953234,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953239,"byte_end":12953242,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the exclusive access when dropped.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953247,"byte_end":12953320,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953325,"byte_end":12953328,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953333,"byte_end":12953345,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953350,"byte_end":12953353,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953358,"byte_end":12953453,"line_start":389,"line_end":389,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953458,"byte_end":12953479,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953484,"byte_end":12953487,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953492,"byte_end":12953504,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953509,"byte_end":12953512,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953517,"byte_end":12953607,"line_start":394,"line_end":394,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953612,"byte_end":12953615,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953620,"byte_end":12953634,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953639,"byte_end":12953642,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953647,"byte_end":12953654,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953659,"byte_end":12953702,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953707,"byte_end":12953710,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953715,"byte_end":12953750,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953755,"byte_end":12953758,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953763,"byte_end":12953801,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/ *n = 2;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953806,"byte_end":12953817,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953822,"byte_end":12953825,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_err());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953830,"byte_end":12953868,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12953873,"byte_end":12953880,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":650},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956231,"byte_end":12956251,"line_start":483,"line_end":483,"column_start":12,"column_end":32},"name":"ShardedLockReadGuard","qualname":"::sync::sharded_lock::ShardedLockReadGuard","value":"ShardedLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" A guard used to release the shared read access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the shared read access of a [`ShardedLock`] when dropped.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956134,"byte_end":12956219,"line_start":482,"line_end":482,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12957138,"byte_end":12957159,"line_start":514,"line_end":514,"column_start":12,"column_end":33},"name":"ShardedLockWriteGuard","qualname":"::sync::sharded_lock::ShardedLockWriteGuard","value":"ShardedLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":" A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12957037,"byte_end":12957126,"line_start":513,"line_end":513,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961761,"byte_end":12961770,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"WaitGroup","qualname":"::sync::wait_group::WaitGroup","value":"WaitGroup {  }","parent":null,"children":[{"krate":0,"index":717}],"decl_id":null,"docs":" Enables threads to synchronize the beginning or end of some computation.","sig":null,"attributes":[{"value":"/ Enables threads to synchronize the beginning or end of some computation.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960549,"byte_end":12960625,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960626,"byte_end":12960629,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Wait groups vs barriers","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960630,"byte_end":12960659,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960660,"byte_end":12960663,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `WaitGroup` is very similar to [`Barrier`], but there are a few differences:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960664,"byte_end":12960744,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960745,"byte_end":12960748,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] needs to know the number of threads at construction, while `WaitGroup` is cloned to","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960749,"byte_end":12960850,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/   register more threads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960851,"byte_end":12960879,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960880,"byte_end":12960883,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * A [`Barrier`] can be reused even after all threads have synchronized, while a `WaitGroup`","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960884,"byte_end":12960979,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/   synchronizes threads only once.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12960980,"byte_end":12961017,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961018,"byte_end":12961021,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * All threads wait for others to reach the [`Barrier`]. With `WaitGroup`, each thread can choose","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961022,"byte_end":12961122,"line_start":19,"line_end":19,"column_start":1,"column_end":101}},{"value":"/   to either wait for other threads or to continue without blocking.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961123,"byte_end":12961194,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961195,"byte_end":12961198,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961199,"byte_end":12961213,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961214,"byte_end":12961217,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961218,"byte_end":12961225,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961226,"byte_end":12961267,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961268,"byte_end":12961288,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961289,"byte_end":12961292,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Create a new wait group.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961293,"byte_end":12961324,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961325,"byte_end":12961355,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961356,"byte_end":12961359,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..4 {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961360,"byte_end":12961379,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/     // Create another reference to the wait group.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961380,"byte_end":12961434,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961435,"byte_end":12961463,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961464,"byte_end":12961467,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961468,"byte_end":12961499,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/         // Do some work.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961500,"byte_end":12961528,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961529,"byte_end":12961532,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/         // Drop the reference to the wait group.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961533,"byte_end":12961585,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/         drop(wg);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961586,"byte_end":12961607,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961608,"byte_end":12961619,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961620,"byte_end":12961625,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961626,"byte_end":12961629,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Block until all threads have finished their work.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961630,"byte_end":12961686,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/ wg.wait();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961687,"byte_end":12961701,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961702,"byte_end":12961709,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961710,"byte_end":12961713,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Barrier`]: std::sync::Barrier","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961714,"byte_end":12961749,"line_start":47,"line_end":47,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962362,"byte_end":12962365,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<WaitGroup>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new wait group and returns the single reference to it.","sig":null,"attributes":[{"value":"/ Creates a new wait group and returns the single reference to it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962134,"byte_end":12962202,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962207,"byte_end":12962210,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962215,"byte_end":12962229,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962234,"byte_end":12962237,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962242,"byte_end":12962249,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962254,"byte_end":12962295,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962300,"byte_end":12962303,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962308,"byte_end":12962338,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962343,"byte_end":12962350,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962965,"byte_end":12962969,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"wait","qualname":"<WaitGroup>::wait","value":"pub fn wait(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this reference and waits until all other references are dropped.","sig":null,"attributes":[{"value":"/ Drops this reference and waits until all other references are dropped.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962413,"byte_end":12962487,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962492,"byte_end":12962495,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962500,"byte_end":12962514,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962519,"byte_end":12962522,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962527,"byte_end":12962534,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962539,"byte_end":12962580,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962585,"byte_end":12962605,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962610,"byte_end":12962613,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962618,"byte_end":12962648,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962653,"byte_end":12962656,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ thread::spawn({","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962661,"byte_end":12962680,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962685,"byte_end":12962713,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/     move || {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962718,"byte_end":12962735,"line_start":95,"line_end":95,"column_start":5,"column_end":22}},{"value":"/         // Block until both threads have reached `wait()`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962740,"byte_end":12962802,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/         wg.wait();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962807,"byte_end":12962829,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962834,"byte_end":12962843,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962848,"byte_end":12962855,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962860,"byte_end":12962863,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Block until both threads have reached `wait()`.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962868,"byte_end":12962922,"line_start":101,"line_end":101,"column_start":5,"column_end":59}},{"value":"/ wg.wait();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962927,"byte_end":12962941,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962946,"byte_end":12962953,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":752},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"thread","qualname":"::thread","value":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":795},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":809},{"krate":0,"index":843},{"krate":0,"index":848},{"krate":0,"index":811},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":831},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":836}],"decl_id":null,"docs":" Threads that can borrow variables from the stack.","sig":null,"attributes":[{"value":"cfg(not(crossbeam_loom))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":3288,"byte_end":3315,"line_start":101,"line_end":101,"column_start":9,"column_end":36}},{"value":"/ Threads that can borrow variables from the stack.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12963946,"byte_end":12963999,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964000,"byte_end":12964003,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Create a scope when spawned threads need to access variables on the stack:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964004,"byte_end":12964082,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964083,"byte_end":12964086,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964087,"byte_end":12964094,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964095,"byte_end":12964127,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964128,"byte_end":12964131,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964132,"byte_end":12964154,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964155,"byte_end":12964183,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964184,"byte_end":12964210,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964211,"byte_end":12964239,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964240,"byte_end":12964246,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964247,"byte_end":12964250,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964251,"byte_end":12964274,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/     for person in &people {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964275,"byte_end":12964306,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/         s.spawn(move |_| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964307,"byte_end":12964337,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/             println!(\"Hello, {}!\", person);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964338,"byte_end":12964385,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/         });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964386,"byte_end":12964401,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964402,"byte_end":12964411,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964412,"byte_end":12964428,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964429,"byte_end":12964436,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964437,"byte_end":12964440,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Why scoped threads?","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964441,"byte_end":12964466,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964467,"byte_end":12964470,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Suppose we wanted to re-write the previous example using plain threads:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964471,"byte_end":12964546,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964547,"byte_end":12964550,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0597","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964551,"byte_end":12964576,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ use std::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964577,"byte_end":12964597,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964598,"byte_end":12964601,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964602,"byte_end":12964624,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964625,"byte_end":12964653,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964654,"byte_end":12964680,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964681,"byte_end":12964709,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964710,"byte_end":12964716,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964717,"byte_end":12964720,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut threads = Vec::new();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964721,"byte_end":12964754,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964755,"byte_end":12964758,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for person in &people {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964759,"byte_end":12964786,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/     threads.push(thread::spawn(move || {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964787,"byte_end":12964831,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         println!(\"Hello, {}!\", person);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964832,"byte_end":12964875,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/     }));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964876,"byte_end":12964888,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964889,"byte_end":12964894,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964895,"byte_end":12964898,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ for thread in threads {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964899,"byte_end":12964926,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/     thread.join().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964927,"byte_end":12964958,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964959,"byte_end":12964964,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964965,"byte_end":12964972,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964973,"byte_end":12964976,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This doesn't work because the borrow checker complains about `people` not living long enough:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12964977,"byte_end":12965074,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965075,"byte_end":12965078,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965079,"byte_end":12965090,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ error[E0597]: `people` does not live long enough","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965091,"byte_end":12965143,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/   --> src/main.rs:12:20","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965144,"byte_end":12965171,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965172,"byte_end":12965180,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/ 12 |     for person in &people {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965181,"byte_end":12965217,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/    |                    ^^^^^^ borrowed value does not live long enough","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965218,"byte_end":12965293,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ ...","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965294,"byte_end":12965301,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ 21 | }","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965302,"byte_end":12965312,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/    | - borrowed value only lives until here","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965313,"byte_end":12965360,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/    |","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965361,"byte_end":12965369,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/    = note: borrowed value must be valid for the static lifetime...","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965370,"byte_end":12965440,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965441,"byte_end":12965448,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965449,"byte_end":12965452,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The problem here is that spawned threads are not allowed to borrow variables on stack because","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965453,"byte_end":12965550,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ the compiler cannot prove they will be joined before `people` is destroyed.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965551,"byte_end":12965630,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965631,"byte_end":12965634,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Scoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965635,"byte_end":12965734,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ before the scope ends.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965735,"byte_end":12965761,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965762,"byte_end":12965765,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # How scoped threads work","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965766,"byte_end":12965795,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965796,"byte_end":12965799,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If a variable is borrowed by a thread, the thread must complete before the variable is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965800,"byte_end":12965890,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/ destroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965891,"byte_end":12965985,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ `'static` lifetime because the borrow checker cannot be sure when the thread will complete.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12965986,"byte_end":12966081,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966082,"byte_end":12966085,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A scope creates a clear boundary between variables outside the scope and threads inside the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966086,"byte_end":12966181,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ scope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966182,"byte_end":12966280,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ This way we guarantee to the borrow checker that scoped threads only live within the scope and","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966281,"byte_end":12966379,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/ can safely access variables outside it.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966380,"byte_end":12966423,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966424,"byte_end":12966427,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Nesting scoped threads","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966428,"byte_end":12966456,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966457,"byte_end":12966460,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Sometimes scoped threads need to spawn more threads within the same scope. This is a little","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966461,"byte_end":12966556,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ tricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966557,"byte_end":12966651,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ cannot be borrowed by scoped threads:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966652,"byte_end":12966693,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966694,"byte_end":12966697,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0373,E0521","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966698,"byte_end":12966729,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966730,"byte_end":12966762,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966763,"byte_end":12966766,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966767,"byte_end":12966790,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966791,"byte_end":12966812,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/         // Not going to compile because we're trying to borrow `s`,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966813,"byte_end":12966884,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/         // which lives *inside* the scope! :(","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966885,"byte_end":12966934,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966935,"byte_end":12966986,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966987,"byte_end":12966998,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12966999,"byte_end":12967006,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967007,"byte_end":12967014,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967015,"byte_end":12967018,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Fortunately, there is a solution. Every scoped thread is passed a reference to its scope as an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967019,"byte_end":12967117,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ argument, which can be used for spawning nested threads:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967118,"byte_end":12967178,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967179,"byte_end":12967182,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967183,"byte_end":12967190,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967191,"byte_end":12967223,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967224,"byte_end":12967227,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967228,"byte_end":12967251,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"/     // Note the `|s|` here.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967252,"byte_end":12967283,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/     s.spawn(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967284,"byte_end":12967305,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"/         // Yay, this works because we're using a fresh argument `s`! :)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967306,"byte_end":12967381,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967382,"byte_end":12967433,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967434,"byte_end":12967445,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967446,"byte_end":12967462,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967463,"byte_end":12967470,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":788},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968393,"byte_end":12968398,"line_start":148,"line_end":148,"column_start":8,"column_end":13},"name":"scope","qualname":"::thread::scope","value":"pub fn scope<'env, F, R>(F) -> thread::Result<R> where F: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scope for spawning threads.","sig":null,"attributes":[{"value":"/ Creates a new scope for spawning threads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967742,"byte_end":12967787,"line_start":128,"line_end":128,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967788,"byte_end":12967791,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ All child threads that haven't been manually joined will be automatically joined just before","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967792,"byte_end":12967888,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/ this function invocation ends. If all joined threads have successfully completed, `Ok` is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967889,"byte_end":12967982,"line_start":131,"line_end":131,"column_start":1,"column_end":94}},{"value":"/ returned with the return value of `f`. If any of the joined threads has panicked, an `Err` is","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12967983,"byte_end":12968080,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/ returned containing errors from panicked threads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968081,"byte_end":12968134,"line_start":133,"line_end":133,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968135,"byte_end":12968138,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968139,"byte_end":12968153,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968154,"byte_end":12968157,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968158,"byte_end":12968165,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968166,"byte_end":12968198,"line_start":138,"line_end":138,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968199,"byte_end":12968202,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let var = vec![1, 2, 3];","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968203,"byte_end":12968231,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968232,"byte_end":12968235,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968236,"byte_end":12968259,"line_start":142,"line_end":142,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968260,"byte_end":12968281,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/         println!(\"A child thread borrowing `var`: {:?}\", var);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968282,"byte_end":12968348,"line_start":144,"line_end":144,"column_start":1,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968349,"byte_end":12968360,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968361,"byte_end":12968377,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12968378,"byte_end":12968385,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12969708,"byte_end":12969713,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"Scope","qualname":"::thread::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"decl_id":null,"docs":" A scope for spawning threads.\n","sig":null,"attributes":[{"value":"/ A scope for spawning threads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12969663,"byte_end":12969696,"line_start":192,"line_end":192,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971499,"byte_end":12971504,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Scope>::spawn","value":"pub fn spawn<'scope, F, T>(&'scope Self, F) -> ScopedJoinHandle where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970078,"byte_end":12970105,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970110,"byte_end":12970113,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`spawn`] function in Rust's standard library. The difference","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970118,"byte_end":12970213,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ is that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970218,"byte_end":12970313,"line_start":210,"line_end":210,"column_start":5,"column_end":100}},{"value":"/ allowing it to reference variables outside the scope.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970318,"byte_end":12970375,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970380,"byte_end":12970383,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970388,"byte_end":12970483,"line_start":213,"line_end":213,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970488,"byte_end":12970516,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970521,"byte_end":12970524,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned [handle](ScopedJoinHandle) can be used to manually","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970529,"byte_end":12970596,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"/ [join](ScopedJoinHandle::join) the thread before the scope exits.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970601,"byte_end":12970670,"line_start":217,"line_end":217,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970675,"byte_end":12970678,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This will create a thread using default parameters of [`ScopedThreadBuilder`], if you want to specify the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970683,"byte_end":12970792,"line_start":219,"line_end":219,"column_start":5,"column_end":114}},{"value":"/ stack size or the name of the thread, use this API instead.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970797,"byte_end":12970860,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970865,"byte_end":12970868,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`spawn`]: std::thread::spawn","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970873,"byte_end":12970906,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970911,"byte_end":12970914,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970919,"byte_end":12970931,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970936,"byte_end":12970939,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Panics if the OS fails to create a thread; use [`ScopedThreadBuilder::spawn`]","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970944,"byte_end":12971025,"line_start":226,"line_end":226,"column_start":5,"column_end":86}},{"value":"/ to recover from such errors.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971030,"byte_end":12971062,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971067,"byte_end":12971070,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971075,"byte_end":12971089,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971094,"byte_end":12971097,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971102,"byte_end":12971109,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971114,"byte_end":12971146,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971151,"byte_end":12971154,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971159,"byte_end":12971182,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971187,"byte_end":12971221,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/         println!(\"A child thread is running\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971226,"byte_end":12971276,"line_start":236,"line_end":236,"column_start":5,"column_end":55}},{"value":"/         42","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971281,"byte_end":12971295,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971300,"byte_end":12971311,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971316,"byte_end":12971319,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971324,"byte_end":12971375,"line_start":240,"line_end":240,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971380,"byte_end":12971421,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971426,"byte_end":12971454,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971459,"byte_end":12971475,"line_start":243,"line_end":243,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971480,"byte_end":12971487,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972129,"byte_end":12972136,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"builder","qualname":"<Scope>::builder","value":"pub fn builder<'scope>(&'scope Self) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a builder that can configure a thread before spawning.","sig":null,"attributes":[{"value":"/ Creates a builder that can configure a thread before spawning.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971781,"byte_end":12971847,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971852,"byte_end":12971855,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971860,"byte_end":12971874,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971879,"byte_end":12971882,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971887,"byte_end":12971894,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971899,"byte_end":12971931,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971936,"byte_end":12971939,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971944,"byte_end":12971967,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971972,"byte_end":12971991,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/         .spawn(|_| println!(\"A child thread is running\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12971996,"byte_end":12972057,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/         .unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972062,"byte_end":12972084,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972089,"byte_end":12972105,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972110,"byte_end":12972117,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":843},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973579,"byte_end":12973598,"line_start":316,"line_end":316,"column_start":12,"column_end":31},"name":"ScopedThreadBuilder","qualname":"::thread::ScopedThreadBuilder","value":"ScopedThreadBuilder {  }","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"decl_id":null,"docs":" Configures the properties of a new thread.","sig":null,"attributes":[{"value":"/ Configures the properties of a new thread.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972451,"byte_end":12972497,"line_start":283,"line_end":283,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972498,"byte_end":12972501,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The two configurable properties are:","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972502,"byte_end":12972542,"line_start":285,"line_end":285,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972543,"byte_end":12972546,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ - [`name`]: Specifies an [associated name for the thread][naming-threads].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972547,"byte_end":12972625,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ - [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972626,"byte_end":12972710,"line_start":288,"line_end":288,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972711,"byte_end":12972714,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972715,"byte_end":12972810,"line_start":290,"line_end":290,"column_start":1,"column_end":96}},{"value":"/ thread handle with the given configuration.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972811,"byte_end":12972858,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972859,"byte_end":12972862,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ The [`Scope::spawn`] method uses a builder with default configuration and unwraps its return","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972863,"byte_end":12972959,"line_start":293,"line_end":293,"column_start":1,"column_end":97}},{"value":"/ value. You may want to use this builder when you want to recover from a failure to launch a","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972960,"byte_end":12973055,"line_start":294,"line_end":294,"column_start":1,"column_end":96}},{"value":"/ thread.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973056,"byte_end":12973067,"line_start":295,"line_end":295,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973068,"byte_end":12973071,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973072,"byte_end":12973086,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973087,"byte_end":12973090,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973091,"byte_end":12973098,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973099,"byte_end":12973131,"line_start":300,"line_end":300,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973132,"byte_end":12973135,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973136,"byte_end":12973159,"line_start":302,"line_end":302,"column_start":1,"column_end":24}},{"value":"/     s.builder()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973160,"byte_end":12973179,"line_start":303,"line_end":303,"column_start":1,"column_end":20}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973180,"byte_end":12973238,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/         .unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973239,"byte_end":12973261,"line_start":305,"line_end":305,"column_start":1,"column_end":23}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973262,"byte_end":12973278,"line_start":306,"line_end":306,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973279,"byte_end":12973286,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973287,"byte_end":12973290,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`name`]: ScopedThreadBuilder::name","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973291,"byte_end":12973330,"line_start":309,"line_end":309,"column_start":1,"column_end":40}},{"value":"/ [`stack_size`]: ScopedThreadBuilder::stack_size","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973331,"byte_end":12973382,"line_start":310,"line_end":310,"column_start":1,"column_end":52}},{"value":"/ [`spawn`]: ScopedThreadBuilder::spawn","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973383,"byte_end":12973424,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973425,"byte_end":12973460,"line_start":312,"line_end":312,"column_start":1,"column_end":36}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973461,"byte_end":12973509,"line_start":313,"line_end":313,"column_start":1,"column_end":49}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973510,"byte_end":12973550,"line_start":314,"line_end":314,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974357,"byte_end":12974361,"line_start":343,"line_end":343,"column_start":12,"column_end":16},"name":"name","qualname":"<ScopedThreadBuilder>::name","value":"pub fn name(Self, String) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for the new thread.","sig":null,"attributes":[{"value":"/ Sets the name for the new thread.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973739,"byte_end":12973776,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973781,"byte_end":12973784,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The name must not contain null bytes (`\\0`).","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973789,"byte_end":12973837,"line_start":324,"line_end":324,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973842,"byte_end":12973845,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ For more information about named threads, see [here][naming-threads].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973850,"byte_end":12973923,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973928,"byte_end":12973931,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973936,"byte_end":12973950,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973955,"byte_end":12973958,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973963,"byte_end":12973970,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973975,"byte_end":12974007,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/ use std::thread::current;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974012,"byte_end":12974041,"line_start":332,"line_end":332,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974046,"byte_end":12974049,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974054,"byte_end":12974077,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974082,"byte_end":12974101,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/         .name(\"my thread\".to_string())","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974106,"byte_end":12974148,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/         .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974153,"byte_end":12974224,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/         .unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974229,"byte_end":12974251,"line_start":338,"line_end":338,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974256,"byte_end":12974272,"line_start":339,"line_end":339,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974277,"byte_end":12974284,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974289,"byte_end":12974292,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974297,"byte_end":12974345,"line_start":342,"line_end":342,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975066,"byte_end":12975076,"line_start":368,"line_end":368,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ScopedThreadBuilder>::stack_size","value":"pub fn stack_size(Self, usize) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the stack for the new thread.","sig":null,"attributes":[{"value":"/ Sets the size of the stack for the new thread.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974497,"byte_end":12974547,"line_start":348,"line_end":348,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974552,"byte_end":12974555,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The stack size is measured in bytes.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974560,"byte_end":12974600,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974605,"byte_end":12974608,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about the stack size for threads, see [here][stack-size].","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974613,"byte_end":12974695,"line_start":352,"line_end":352,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974700,"byte_end":12974703,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974708,"byte_end":12974722,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974727,"byte_end":12974730,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974735,"byte_end":12974742,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974747,"byte_end":12974779,"line_start":357,"line_end":357,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974784,"byte_end":12974787,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974792,"byte_end":12974815,"line_start":359,"line_end":359,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974820,"byte_end":12974839,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/         .stack_size(32 * 1024)","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974844,"byte_end":12974878,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974883,"byte_end":12974941,"line_start":362,"line_end":362,"column_start":5,"column_end":63}},{"value":"/         .unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974946,"byte_end":12974968,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974973,"byte_end":12974989,"line_start":364,"line_end":364,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12974994,"byte_end":12975001,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975006,"byte_end":12975009,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975014,"byte_end":12975054,"line_start":367,"line_end":367,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976352,"byte_end":12976357,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ScopedThreadBuilder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<ScopedJoinHandle> where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread with this configuration.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread with this configuration.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975217,"byte_end":12975268,"line_start":373,"line_end":373,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975273,"byte_end":12975276,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975281,"byte_end":12975376,"line_start":375,"line_end":375,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975381,"byte_end":12975409,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975414,"byte_end":12975417,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to manually join the thread before the scope exits.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975422,"byte_end":12975509,"line_start":378,"line_end":378,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975514,"byte_end":12975517,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975522,"byte_end":12975534,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975539,"byte_end":12975542,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`Scope::spawn`] method, this method yields an","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975547,"byte_end":12975608,"line_start":382,"line_end":382,"column_start":5,"column_end":66}},{"value":"/ [`io::Result`] to capture any failure to create the thread at","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975613,"byte_end":12975678,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ the OS level.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975683,"byte_end":12975700,"line_start":384,"line_end":384,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975705,"byte_end":12975708,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975713,"byte_end":12975748,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975753,"byte_end":12975756,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975761,"byte_end":12975773,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975778,"byte_end":12975781,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Panics if a thread name was set and it contained null bytes.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975786,"byte_end":12975850,"line_start":390,"line_end":390,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975855,"byte_end":12975858,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975863,"byte_end":12975877,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975882,"byte_end":12975885,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975890,"byte_end":12975897,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975902,"byte_end":12975934,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975939,"byte_end":12975942,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975947,"byte_end":12975970,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/     let handle = s.builder()","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12975975,"byte_end":12976007,"line_start":398,"line_end":398,"column_start":5,"column_end":37}},{"value":"/         .spawn(|_| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976012,"byte_end":12976036,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/             println!(\"A child thread is running\");","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976041,"byte_end":12976095,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/             42","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976100,"byte_end":12976118,"line_start":401,"line_end":401,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976123,"byte_end":12976137,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976142,"byte_end":12976164,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976169,"byte_end":12976172,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976177,"byte_end":12976228,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976233,"byte_end":12976274,"line_start":406,"line_end":406,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976279,"byte_end":12976307,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976312,"byte_end":12976328,"line_start":408,"line_end":408,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12976333,"byte_end":12976340,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12978640,"byte_end":12978656,"line_start":476,"line_end":476,"column_start":12,"column_end":28},"name":"ScopedJoinHandle","qualname":"::thread::ScopedJoinHandle","value":"ScopedJoinHandle {  }","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"decl_id":null,"docs":" A handle that can be used to join its scoped thread.","sig":null,"attributes":[{"value":"/ A handle that can be used to join its scoped thread.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12978459,"byte_end":12978515,"line_start":472,"line_end":472,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12978516,"byte_end":12978519,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`Scope::spawn`] method and the","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12978520,"byte_end":12978585,"line_start":474,"line_end":474,"column_start":1,"column_end":66}},{"value":"/ [`ScopedThreadBuilder::spawn`] method.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12978586,"byte_end":12978628,"line_start":475,"line_end":475,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979964,"byte_end":12979968,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"join","qualname":"<ScopedJoinHandle>::join","value":"pub fn join(Self) -> thread::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the thread to finish and returns its result.","sig":null,"attributes":[{"value":"/ Waits for the thread to finish and returns its result.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979052,"byte_end":12979110,"line_start":491,"line_end":491,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979115,"byte_end":12979118,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ If the child thread panics, an error is returned.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979123,"byte_end":12979176,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979181,"byte_end":12979184,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979189,"byte_end":12979201,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979206,"byte_end":12979209,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ This function may panic on some platforms if a thread attempts to join itself or otherwise","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979214,"byte_end":12979308,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ may create a deadlock with joining threads.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979313,"byte_end":12979360,"line_start":498,"line_end":498,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979365,"byte_end":12979368,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979373,"byte_end":12979387,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979392,"byte_end":12979395,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979400,"byte_end":12979407,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979412,"byte_end":12979444,"line_start":503,"line_end":503,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979449,"byte_end":12979452,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979457,"byte_end":12979480,"line_start":505,"line_end":505,"column_start":5,"column_end":28}},{"value":"/     let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979485,"byte_end":12979554,"line_start":506,"line_end":506,"column_start":5,"column_end":74}},{"value":"/     let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979559,"byte_end":12979624,"line_start":507,"line_end":507,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979629,"byte_end":12979632,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/     // Join the first thread and verify that it succeeded.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979637,"byte_end":12979699,"line_start":509,"line_end":509,"column_start":5,"column_end":67}},{"value":"/     let res = handle1.join();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979704,"byte_end":12979737,"line_start":510,"line_end":510,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_ok());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979742,"byte_end":12979771,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979776,"byte_end":12979779,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     // Join the second thread and verify that it panicked.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979784,"byte_end":12979846,"line_start":513,"line_end":513,"column_start":5,"column_end":67}},{"value":"/     let res = handle2.join();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979851,"byte_end":12979884,"line_start":514,"line_end":514,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_err());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979889,"byte_end":12979919,"line_start":515,"line_end":515,"column_start":5,"column_end":35}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979924,"byte_end":12979940,"line_start":516,"line_end":516,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979945,"byte_end":12979952,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980777,"byte_end":12980783,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"thread","qualname":"<ScopedJoinHandle>::thread","value":"pub fn thread(&Self) -> &thread::Thread","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying thread.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying thread.","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980416,"byte_end":12980462,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980467,"byte_end":12980470,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980475,"byte_end":12980489,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980494,"byte_end":12980497,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980502,"byte_end":12980509,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980514,"byte_end":12980546,"line_start":534,"line_end":534,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980551,"byte_end":12980554,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980559,"byte_end":12980582,"line_start":536,"line_end":536,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| println!(\"A child thread is running\"));","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980587,"byte_end":12980659,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/     println!(\"The child thread ID: {:?}\", handle.thread().id());","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980664,"byte_end":12980732,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/ }).unwrap();","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980737,"byte_end":12980753,"line_start":539,"line_end":539,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980758,"byte_end":12980765,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/seq_lock.rs","byte_start":12924280,"byte_end":12924287,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/seq_lock.rs","byte_start":12925932,"byte_end":12925949,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/seq_lock.rs","byte_start":12926274,"byte_end":12926291,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5955,"byte_end":5965,"line_start":44,"line_end":44,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6002,"byte_end":6012,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6067,"byte_end":6077,"line_start":48,"line_end":48,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6134,"byte_end":6144,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6160,"byte_end":6170,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9127,"byte_end":9137,"line_start":157,"line_end":157,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9509,"byte_end":9519,"line_start":175,"line_end":175,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9960,"byte_end":9970,"line_start":194,"line_end":194,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10320,"byte_end":10330,"line_start":211,"line_end":211,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33612,"byte_end":33622,"line_start":853,"line_end":853,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":36161,"byte_end":36171,"line_start":942,"line_end":942,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":36280,"byte_end":36290,"line_start":948,"line_end":948,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":36429,"byte_end":36439,"line_start":955,"line_end":955,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":39283,"byte_end":39293,"line_start":1023,"line_end":1023,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":49174,"byte_end":49183,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54286,"byte_end":54297,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54334,"byte_end":54345,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54361,"byte_end":54372,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":55038,"byte_end":55049,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":55155,"byte_end":55166,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":55280,"byte_end":55291,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":55490,"byte_end":55501,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57950,"byte_end":57957,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63878,"byte_end":63885,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":64129,"byte_end":64136,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929170,"byte_end":12929176,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929198,"byte_end":12929204,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929551,"byte_end":12929557,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933003,"byte_end":12933009,"line_start":207,"line_end":207,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933242,"byte_end":12933250,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933275,"byte_end":12933283,"line_start":219,"line_end":219,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933293,"byte_end":12933301,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12935167,"byte_end":12935175,"line_start":292,"line_end":292,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12935298,"byte_end":12935306,"line_start":298,"line_end":298,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12935584,"byte_end":12935589,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942951,"byte_end":12942962,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943015,"byte_end":12943026,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943065,"byte_end":12943076,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943117,"byte_end":12943128,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943144,"byte_end":12943155,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944621,"byte_end":12944632,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12954995,"byte_end":12955006,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12955544,"byte_end":12955561,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12955924,"byte_end":12955935,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956052,"byte_end":12956063,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956428,"byte_end":12956448,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956486,"byte_end":12956506,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956653,"byte_end":12956673,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956911,"byte_end":12956931,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12957300,"byte_end":12957321,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12957358,"byte_end":12957379,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12957763,"byte_end":12957784,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12958023,"byte_end":12958044,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12958176,"byte_end":12958197,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12958338,"byte_end":12958359,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12959657,"byte_end":12959669,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961912,"byte_end":12961921,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962118,"byte_end":12962127,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12963288,"byte_end":12963297,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12963506,"byte_end":12963515,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12963731,"byte_end":12963740,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970035,"byte_end":12970040,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970060,"byte_end":12970065,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972337,"byte_end":12972342,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973699,"byte_end":12973718,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12978380,"byte_end":12978396,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12978431,"byte_end":12978447,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979022,"byte_end":12979038,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980973,"byte_end":12980989,"line_start":550,"line_end":550,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12982200,"byte_end":12982216,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":3076,"byte_end":3082,"line_start":87,"line_end":87,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":3273,"byte_end":3277,"line_start":99,"line_end":99,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":470}},{"kind":"Mod","span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/lib.rs","byte_start":3332,"byte_end":3338,"line_start":102,"line_end":102,"column_start":17,"column_end":23},"ref_id":{"krate":0,"index":752}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/seq_lock.rs","byte_start":12924280,"byte_end":12924287,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/seq_lock.rs","byte_start":12925932,"byte_end":12925949,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/seq_lock.rs","byte_start":12926274,"byte_end":12926291,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":5955,"byte_end":5965,"line_start":44,"line_end":44,"column_start":31,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6002,"byte_end":6012,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6067,"byte_end":6077,"line_start":48,"line_end":48,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":8364}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6134,"byte_end":6144,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":8365}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":6160,"byte_end":6170,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9127,"byte_end":9137,"line_start":157,"line_end":157,"column_start":17,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9509,"byte_end":9519,"line_start":175,"line_end":175,"column_start":18,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":9960,"byte_end":9970,"line_start":194,"line_end":194,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":10320,"byte_end":10330,"line_start":211,"line_end":211,"column_start":20,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":33612,"byte_end":33622,"line_start":853,"line_end":853,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":36161,"byte_end":36171,"line_start":942,"line_end":942,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":36280,"byte_end":36290,"line_start":948,"line_end":948,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":36429,"byte_end":36439,"line_start":955,"line_end":955,"column_start":43,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/atomic_cell.rs","byte_start":39283,"byte_end":39293,"line_start":1023,"line_end":1023,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/atomic/consume.rs","byte_start":49174,"byte_end":49183,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":8931},"to":{"krate":0,"index":172}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54286,"byte_end":54297,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54334,"byte_end":54345,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":54361,"byte_end":54372,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":55038,"byte_end":55049,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":55155,"byte_end":55166,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":55280,"byte_end":55291,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/cache_padded.rs","byte_start":55490,"byte_end":55501,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":57950,"byte_end":57957,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":63878,"byte_end":63885,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/backoff.rs","byte_start":64129,"byte_end":64136,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929170,"byte_end":12929176,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":501},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929198,"byte_end":12929204,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":501},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12929551,"byte_end":12929557,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933003,"byte_end":12933009,"line_start":207,"line_end":207,"column_start":21,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":501},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933242,"byte_end":12933250,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933275,"byte_end":12933283,"line_start":219,"line_end":219,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12933293,"byte_end":12933301,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12935167,"byte_end":12935175,"line_start":292,"line_end":292,"column_start":21,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12935298,"byte_end":12935306,"line_start":298,"line_end":298,"column_start":16,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/parker.rs","byte_start":12935584,"byte_end":12935589,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12942951,"byte_end":12942962,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943015,"byte_end":12943026,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943065,"byte_end":12943076,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":8364}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943117,"byte_end":12943128,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":8365}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12943144,"byte_end":12943155,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12944621,"byte_end":12944632,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12954995,"byte_end":12955006,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12955544,"byte_end":12955561,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":640},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12955924,"byte_end":12955935,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956052,"byte_end":12956063,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956428,"byte_end":12956448,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956486,"byte_end":12956506,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956653,"byte_end":12956673,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12956911,"byte_end":12956931,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12957300,"byte_end":12957321,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12957358,"byte_end":12957379,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12957763,"byte_end":12957784,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12958023,"byte_end":12958044,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12958176,"byte_end":12958197,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12958338,"byte_end":12958359,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/sharded_lock.rs","byte_start":12959657,"byte_end":12959669,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":697},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12961912,"byte_end":12961921,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12962118,"byte_end":12962127,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12963288,"byte_end":12963297,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12963506,"byte_end":12963515,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/sync/wait_group.rs","byte_start":12963731,"byte_end":12963740,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970035,"byte_end":12970040,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":795},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12970060,"byte_end":12970065,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12972337,"byte_end":12972342,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":795},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12973699,"byte_end":12973718,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12978380,"byte_end":12978396,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12978431,"byte_end":12978447,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12979022,"byte_end":12979038,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12980973,"byte_end":12980989,"line_start":550,"line_end":550,"column_start":35,"column_end":51},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":824},"to":{"krate":1,"index":6299}},{"span":{"file_name":"/home/hekuta/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.7/src/thread.rs","byte_start":12982200,"byte_end":12982216,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":9394}}]}